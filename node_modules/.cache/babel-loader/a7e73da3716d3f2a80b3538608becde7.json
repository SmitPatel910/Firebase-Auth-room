{"ast":null,"code":"/*!\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n(function (global, factory) {\n  /* global define, require, module */\n\n  /* AMD */\n  if (typeof define === 'function' && define.amd) define([\"protobufjs/minimal\"], factory);\n  /* CommonJS */\n  else if (typeof require === 'function' && typeof module === 'object' && module && module.exports) module.exports = factory(require(\"protobufjs/minimal\"));\n})(this, function ($protobuf) {\n  \"use strict\"; // Common aliases\n\n  var $util = $protobuf.util; // Exported root namespace\n\n  var $root = $protobuf.roots.firestore_v1 || ($protobuf.roots.firestore_v1 = {});\n\n  $root.firestore = function () {\n    /**\n     * Namespace firestore.\n     * @exports firestore\n     * @namespace\n     */\n    var firestore = {};\n\n    firestore.BundledQuery = function () {\n      /**\n       * Properties of a BundledQuery.\n       * @memberof firestore\n       * @interface IBundledQuery\n       * @property {string|null} [parent] BundledQuery parent\n       * @property {google.firestore.v1.IStructuredQuery|null} [structuredQuery] BundledQuery structuredQuery\n       * @property {firestore.BundledQuery.LimitType|null} [limitType] BundledQuery limitType\n       */\n\n      /**\n       * Constructs a new BundledQuery.\n       * @memberof firestore\n       * @classdesc Represents a BundledQuery.\n       * @implements IBundledQuery\n       * @constructor\n       * @param {firestore.IBundledQuery=} [properties] Properties to set\n       */\n      function BundledQuery(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * BundledQuery parent.\n       * @member {string} parent\n       * @memberof firestore.BundledQuery\n       * @instance\n       */\n\n\n      BundledQuery.prototype.parent = \"\";\n      /**\n       * BundledQuery structuredQuery.\n       * @member {google.firestore.v1.IStructuredQuery|null|undefined} structuredQuery\n       * @memberof firestore.BundledQuery\n       * @instance\n       */\n\n      BundledQuery.prototype.structuredQuery = null;\n      /**\n       * BundledQuery limitType.\n       * @member {firestore.BundledQuery.LimitType} limitType\n       * @memberof firestore.BundledQuery\n       * @instance\n       */\n\n      BundledQuery.prototype.limitType = 0; // OneOf field names bound to virtual getters and setters\n\n      var $oneOfFields;\n      /**\n       * BundledQuery queryType.\n       * @member {\"structuredQuery\"|undefined} queryType\n       * @memberof firestore.BundledQuery\n       * @instance\n       */\n\n      Object.defineProperty(BundledQuery.prototype, \"queryType\", {\n        get: $util.oneOfGetter($oneOfFields = [\"structuredQuery\"]),\n        set: $util.oneOfSetter($oneOfFields)\n      });\n      /**\n       * Creates a BundledQuery message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof firestore.BundledQuery\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {firestore.BundledQuery} BundledQuery\n       */\n\n      BundledQuery.fromObject = function fromObject(object) {\n        if (object instanceof $root.firestore.BundledQuery) return object;\n        var message = new $root.firestore.BundledQuery();\n        if (object.parent != null) message.parent = String(object.parent);\n\n        if (object.structuredQuery != null) {\n          if (typeof object.structuredQuery !== \"object\") throw TypeError(\".firestore.BundledQuery.structuredQuery: object expected\");\n          message.structuredQuery = $root.google.firestore.v1.StructuredQuery.fromObject(object.structuredQuery);\n        }\n\n        switch (object.limitType) {\n          case \"FIRST\":\n          case 0:\n            message.limitType = 0;\n            break;\n\n          case \"LAST\":\n          case 1:\n            message.limitType = 1;\n            break;\n        }\n\n        return message;\n      };\n      /**\n       * Creates a plain object from a BundledQuery message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof firestore.BundledQuery\n       * @static\n       * @param {firestore.BundledQuery} message BundledQuery\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      BundledQuery.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n\n        if (options.defaults) {\n          object.parent = \"\";\n          object.limitType = options.enums === String ? \"FIRST\" : 0;\n        }\n\n        if (message.parent != null && message.hasOwnProperty(\"parent\")) object.parent = message.parent;\n\n        if (message.structuredQuery != null && message.hasOwnProperty(\"structuredQuery\")) {\n          object.structuredQuery = $root.google.firestore.v1.StructuredQuery.toObject(message.structuredQuery, options);\n          if (options.oneofs) object.queryType = \"structuredQuery\";\n        }\n\n        if (message.limitType != null && message.hasOwnProperty(\"limitType\")) object.limitType = options.enums === String ? $root.firestore.BundledQuery.LimitType[message.limitType] : message.limitType;\n        return object;\n      };\n      /**\n       * Converts this BundledQuery to JSON.\n       * @function toJSON\n       * @memberof firestore.BundledQuery\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      BundledQuery.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n      /**\n       * LimitType enum.\n       * @name firestore.BundledQuery.LimitType\n       * @enum {string}\n       * @property {string} FIRST=FIRST FIRST value\n       * @property {string} LAST=LAST LAST value\n       */\n\n\n      BundledQuery.LimitType = function () {\n        var valuesById = {},\n            values = Object.create(valuesById);\n        values[valuesById[0] = \"FIRST\"] = \"FIRST\";\n        values[valuesById[1] = \"LAST\"] = \"LAST\";\n        return values;\n      }();\n\n      return BundledQuery;\n    }();\n\n    firestore.NamedQuery = function () {\n      /**\n       * Properties of a NamedQuery.\n       * @memberof firestore\n       * @interface INamedQuery\n       * @property {string|null} [name] NamedQuery name\n       * @property {firestore.IBundledQuery|null} [bundledQuery] NamedQuery bundledQuery\n       * @property {google.protobuf.ITimestamp|null} [readTime] NamedQuery readTime\n       */\n\n      /**\n       * Constructs a new NamedQuery.\n       * @memberof firestore\n       * @classdesc Represents a NamedQuery.\n       * @implements INamedQuery\n       * @constructor\n       * @param {firestore.INamedQuery=} [properties] Properties to set\n       */\n      function NamedQuery(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * NamedQuery name.\n       * @member {string} name\n       * @memberof firestore.NamedQuery\n       * @instance\n       */\n\n\n      NamedQuery.prototype.name = \"\";\n      /**\n       * NamedQuery bundledQuery.\n       * @member {firestore.IBundledQuery|null|undefined} bundledQuery\n       * @memberof firestore.NamedQuery\n       * @instance\n       */\n\n      NamedQuery.prototype.bundledQuery = null;\n      /**\n       * NamedQuery readTime.\n       * @member {google.protobuf.ITimestamp|null|undefined} readTime\n       * @memberof firestore.NamedQuery\n       * @instance\n       */\n\n      NamedQuery.prototype.readTime = null;\n      /**\n       * Creates a NamedQuery message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof firestore.NamedQuery\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {firestore.NamedQuery} NamedQuery\n       */\n\n      NamedQuery.fromObject = function fromObject(object) {\n        if (object instanceof $root.firestore.NamedQuery) return object;\n        var message = new $root.firestore.NamedQuery();\n        if (object.name != null) message.name = String(object.name);\n\n        if (object.bundledQuery != null) {\n          if (typeof object.bundledQuery !== \"object\") throw TypeError(\".firestore.NamedQuery.bundledQuery: object expected\");\n          message.bundledQuery = $root.firestore.BundledQuery.fromObject(object.bundledQuery);\n        }\n\n        if (object.readTime != null) {\n          if (typeof object.readTime !== \"object\") throw TypeError(\".firestore.NamedQuery.readTime: object expected\");\n          message.readTime = $root.google.protobuf.Timestamp.fromObject(object.readTime);\n        }\n\n        return message;\n      };\n      /**\n       * Creates a plain object from a NamedQuery message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof firestore.NamedQuery\n       * @static\n       * @param {firestore.NamedQuery} message NamedQuery\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      NamedQuery.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n\n        if (options.defaults) {\n          object.name = \"\";\n          object.bundledQuery = null;\n          object.readTime = null;\n        }\n\n        if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n        if (message.bundledQuery != null && message.hasOwnProperty(\"bundledQuery\")) object.bundledQuery = $root.firestore.BundledQuery.toObject(message.bundledQuery, options);\n        if (message.readTime != null && message.hasOwnProperty(\"readTime\")) object.readTime = $root.google.protobuf.Timestamp.toObject(message.readTime, options);\n        return object;\n      };\n      /**\n       * Converts this NamedQuery to JSON.\n       * @function toJSON\n       * @memberof firestore.NamedQuery\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      NamedQuery.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return NamedQuery;\n    }();\n\n    firestore.BundledDocumentMetadata = function () {\n      /**\n       * Properties of a BundledDocumentMetadata.\n       * @memberof firestore\n       * @interface IBundledDocumentMetadata\n       * @property {string|null} [name] BundledDocumentMetadata name\n       * @property {google.protobuf.ITimestamp|null} [readTime] BundledDocumentMetadata readTime\n       * @property {boolean|null} [exists] BundledDocumentMetadata exists\n       * @property {Array.<string>|null} [queries] BundledDocumentMetadata queries\n       */\n\n      /**\n       * Constructs a new BundledDocumentMetadata.\n       * @memberof firestore\n       * @classdesc Represents a BundledDocumentMetadata.\n       * @implements IBundledDocumentMetadata\n       * @constructor\n       * @param {firestore.IBundledDocumentMetadata=} [properties] Properties to set\n       */\n      function BundledDocumentMetadata(properties) {\n        this.queries = [];\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * BundledDocumentMetadata name.\n       * @member {string} name\n       * @memberof firestore.BundledDocumentMetadata\n       * @instance\n       */\n\n\n      BundledDocumentMetadata.prototype.name = \"\";\n      /**\n       * BundledDocumentMetadata readTime.\n       * @member {google.protobuf.ITimestamp|null|undefined} readTime\n       * @memberof firestore.BundledDocumentMetadata\n       * @instance\n       */\n\n      BundledDocumentMetadata.prototype.readTime = null;\n      /**\n       * BundledDocumentMetadata exists.\n       * @member {boolean} exists\n       * @memberof firestore.BundledDocumentMetadata\n       * @instance\n       */\n\n      BundledDocumentMetadata.prototype.exists = false;\n      /**\n       * BundledDocumentMetadata queries.\n       * @member {Array.<string>} queries\n       * @memberof firestore.BundledDocumentMetadata\n       * @instance\n       */\n\n      BundledDocumentMetadata.prototype.queries = $util.emptyArray;\n      /**\n       * Creates a BundledDocumentMetadata message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof firestore.BundledDocumentMetadata\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {firestore.BundledDocumentMetadata} BundledDocumentMetadata\n       */\n\n      BundledDocumentMetadata.fromObject = function fromObject(object) {\n        if (object instanceof $root.firestore.BundledDocumentMetadata) return object;\n        var message = new $root.firestore.BundledDocumentMetadata();\n        if (object.name != null) message.name = String(object.name);\n\n        if (object.readTime != null) {\n          if (typeof object.readTime !== \"object\") throw TypeError(\".firestore.BundledDocumentMetadata.readTime: object expected\");\n          message.readTime = $root.google.protobuf.Timestamp.fromObject(object.readTime);\n        }\n\n        if (object.exists != null) message.exists = Boolean(object.exists);\n\n        if (object.queries) {\n          if (!Array.isArray(object.queries)) throw TypeError(\".firestore.BundledDocumentMetadata.queries: array expected\");\n          message.queries = [];\n\n          for (var i = 0; i < object.queries.length; ++i) {\n            message.queries[i] = String(object.queries[i]);\n          }\n        }\n\n        return message;\n      };\n      /**\n       * Creates a plain object from a BundledDocumentMetadata message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof firestore.BundledDocumentMetadata\n       * @static\n       * @param {firestore.BundledDocumentMetadata} message BundledDocumentMetadata\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      BundledDocumentMetadata.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n        if (options.arrays || options.defaults) object.queries = [];\n\n        if (options.defaults) {\n          object.name = \"\";\n          object.readTime = null;\n          object.exists = false;\n        }\n\n        if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n        if (message.readTime != null && message.hasOwnProperty(\"readTime\")) object.readTime = $root.google.protobuf.Timestamp.toObject(message.readTime, options);\n        if (message.exists != null && message.hasOwnProperty(\"exists\")) object.exists = message.exists;\n\n        if (message.queries && message.queries.length) {\n          object.queries = [];\n\n          for (var j = 0; j < message.queries.length; ++j) {\n            object.queries[j] = message.queries[j];\n          }\n        }\n\n        return object;\n      };\n      /**\n       * Converts this BundledDocumentMetadata to JSON.\n       * @function toJSON\n       * @memberof firestore.BundledDocumentMetadata\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      BundledDocumentMetadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return BundledDocumentMetadata;\n    }();\n\n    firestore.BundleMetadata = function () {\n      /**\n       * Properties of a BundleMetadata.\n       * @memberof firestore\n       * @interface IBundleMetadata\n       * @property {string|null} [id] BundleMetadata id\n       * @property {google.protobuf.ITimestamp|null} [createTime] BundleMetadata createTime\n       * @property {number|null} [version] BundleMetadata version\n       * @property {number|null} [totalDocuments] BundleMetadata totalDocuments\n       * @property {number|string|null} [totalBytes] BundleMetadata totalBytes\n       */\n\n      /**\n       * Constructs a new BundleMetadata.\n       * @memberof firestore\n       * @classdesc Represents a BundleMetadata.\n       * @implements IBundleMetadata\n       * @constructor\n       * @param {firestore.IBundleMetadata=} [properties] Properties to set\n       */\n      function BundleMetadata(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * BundleMetadata id.\n       * @member {string} id\n       * @memberof firestore.BundleMetadata\n       * @instance\n       */\n\n\n      BundleMetadata.prototype.id = \"\";\n      /**\n       * BundleMetadata createTime.\n       * @member {google.protobuf.ITimestamp|null|undefined} createTime\n       * @memberof firestore.BundleMetadata\n       * @instance\n       */\n\n      BundleMetadata.prototype.createTime = null;\n      /**\n       * BundleMetadata version.\n       * @member {number} version\n       * @memberof firestore.BundleMetadata\n       * @instance\n       */\n\n      BundleMetadata.prototype.version = 0;\n      /**\n       * BundleMetadata totalDocuments.\n       * @member {number} totalDocuments\n       * @memberof firestore.BundleMetadata\n       * @instance\n       */\n\n      BundleMetadata.prototype.totalDocuments = 0;\n      /**\n       * BundleMetadata totalBytes.\n       * @member {number|string} totalBytes\n       * @memberof firestore.BundleMetadata\n       * @instance\n       */\n\n      BundleMetadata.prototype.totalBytes = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n      /**\n       * Creates a BundleMetadata message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof firestore.BundleMetadata\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {firestore.BundleMetadata} BundleMetadata\n       */\n\n      BundleMetadata.fromObject = function fromObject(object) {\n        if (object instanceof $root.firestore.BundleMetadata) return object;\n        var message = new $root.firestore.BundleMetadata();\n        if (object.id != null) message.id = String(object.id);\n\n        if (object.createTime != null) {\n          if (typeof object.createTime !== \"object\") throw TypeError(\".firestore.BundleMetadata.createTime: object expected\");\n          message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);\n        }\n\n        if (object.version != null) message.version = object.version >>> 0;\n        if (object.totalDocuments != null) message.totalDocuments = object.totalDocuments >>> 0;\n        if (object.totalBytes != null) if ($util.Long) (message.totalBytes = $util.Long.fromValue(object.totalBytes)).unsigned = true;else if (typeof object.totalBytes === \"string\") message.totalBytes = parseInt(object.totalBytes, 10);else if (typeof object.totalBytes === \"number\") message.totalBytes = object.totalBytes;else if (typeof object.totalBytes === \"object\") message.totalBytes = new $util.LongBits(object.totalBytes.low >>> 0, object.totalBytes.high >>> 0).toNumber(true);\n        return message;\n      };\n      /**\n       * Creates a plain object from a BundleMetadata message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof firestore.BundleMetadata\n       * @static\n       * @param {firestore.BundleMetadata} message BundleMetadata\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      BundleMetadata.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n\n        if (options.defaults) {\n          object.id = \"\";\n          object.createTime = null;\n          object.version = 0;\n          object.totalDocuments = 0;\n\n          if ($util.Long) {\n            var long = new $util.Long(0, 0, true);\n            object.totalBytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n          } else object.totalBytes = options.longs === String ? \"0\" : 0;\n        }\n\n        if (message.id != null && message.hasOwnProperty(\"id\")) object.id = message.id;\n        if (message.createTime != null && message.hasOwnProperty(\"createTime\")) object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);\n        if (message.version != null && message.hasOwnProperty(\"version\")) object.version = message.version;\n        if (message.totalDocuments != null && message.hasOwnProperty(\"totalDocuments\")) object.totalDocuments = message.totalDocuments;\n        if (message.totalBytes != null && message.hasOwnProperty(\"totalBytes\")) if (typeof message.totalBytes === \"number\") object.totalBytes = options.longs === String ? String(message.totalBytes) : message.totalBytes;else object.totalBytes = options.longs === String ? $util.Long.prototype.toString.call(message.totalBytes) : options.longs === Number ? new $util.LongBits(message.totalBytes.low >>> 0, message.totalBytes.high >>> 0).toNumber(true) : message.totalBytes;\n        return object;\n      };\n      /**\n       * Converts this BundleMetadata to JSON.\n       * @function toJSON\n       * @memberof firestore.BundleMetadata\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      BundleMetadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return BundleMetadata;\n    }();\n\n    firestore.BundleElement = function () {\n      /**\n       * Properties of a BundleElement.\n       * @memberof firestore\n       * @interface IBundleElement\n       * @property {firestore.IBundleMetadata|null} [metadata] BundleElement metadata\n       * @property {firestore.INamedQuery|null} [namedQuery] BundleElement namedQuery\n       * @property {firestore.IBundledDocumentMetadata|null} [documentMetadata] BundleElement documentMetadata\n       * @property {google.firestore.v1.IDocument|null} [document] BundleElement document\n       */\n\n      /**\n       * Constructs a new BundleElement.\n       * @memberof firestore\n       * @classdesc Represents a BundleElement.\n       * @implements IBundleElement\n       * @constructor\n       * @param {firestore.IBundleElement=} [properties] Properties to set\n       */\n      function BundleElement(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * BundleElement metadata.\n       * @member {firestore.IBundleMetadata|null|undefined} metadata\n       * @memberof firestore.BundleElement\n       * @instance\n       */\n\n\n      BundleElement.prototype.metadata = null;\n      /**\n       * BundleElement namedQuery.\n       * @member {firestore.INamedQuery|null|undefined} namedQuery\n       * @memberof firestore.BundleElement\n       * @instance\n       */\n\n      BundleElement.prototype.namedQuery = null;\n      /**\n       * BundleElement documentMetadata.\n       * @member {firestore.IBundledDocumentMetadata|null|undefined} documentMetadata\n       * @memberof firestore.BundleElement\n       * @instance\n       */\n\n      BundleElement.prototype.documentMetadata = null;\n      /**\n       * BundleElement document.\n       * @member {google.firestore.v1.IDocument|null|undefined} document\n       * @memberof firestore.BundleElement\n       * @instance\n       */\n\n      BundleElement.prototype.document = null; // OneOf field names bound to virtual getters and setters\n\n      var $oneOfFields;\n      /**\n       * BundleElement elementType.\n       * @member {\"metadata\"|\"namedQuery\"|\"documentMetadata\"|\"document\"|undefined} elementType\n       * @memberof firestore.BundleElement\n       * @instance\n       */\n\n      Object.defineProperty(BundleElement.prototype, \"elementType\", {\n        get: $util.oneOfGetter($oneOfFields = [\"metadata\", \"namedQuery\", \"documentMetadata\", \"document\"]),\n        set: $util.oneOfSetter($oneOfFields)\n      });\n      /**\n       * Creates a BundleElement message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof firestore.BundleElement\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {firestore.BundleElement} BundleElement\n       */\n\n      BundleElement.fromObject = function fromObject(object) {\n        if (object instanceof $root.firestore.BundleElement) return object;\n        var message = new $root.firestore.BundleElement();\n\n        if (object.metadata != null) {\n          if (typeof object.metadata !== \"object\") throw TypeError(\".firestore.BundleElement.metadata: object expected\");\n          message.metadata = $root.firestore.BundleMetadata.fromObject(object.metadata);\n        }\n\n        if (object.namedQuery != null) {\n          if (typeof object.namedQuery !== \"object\") throw TypeError(\".firestore.BundleElement.namedQuery: object expected\");\n          message.namedQuery = $root.firestore.NamedQuery.fromObject(object.namedQuery);\n        }\n\n        if (object.documentMetadata != null) {\n          if (typeof object.documentMetadata !== \"object\") throw TypeError(\".firestore.BundleElement.documentMetadata: object expected\");\n          message.documentMetadata = $root.firestore.BundledDocumentMetadata.fromObject(object.documentMetadata);\n        }\n\n        if (object.document != null) {\n          if (typeof object.document !== \"object\") throw TypeError(\".firestore.BundleElement.document: object expected\");\n          message.document = $root.google.firestore.v1.Document.fromObject(object.document);\n        }\n\n        return message;\n      };\n      /**\n       * Creates a plain object from a BundleElement message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof firestore.BundleElement\n       * @static\n       * @param {firestore.BundleElement} message BundleElement\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      BundleElement.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n\n        if (message.metadata != null && message.hasOwnProperty(\"metadata\")) {\n          object.metadata = $root.firestore.BundleMetadata.toObject(message.metadata, options);\n          if (options.oneofs) object.elementType = \"metadata\";\n        }\n\n        if (message.namedQuery != null && message.hasOwnProperty(\"namedQuery\")) {\n          object.namedQuery = $root.firestore.NamedQuery.toObject(message.namedQuery, options);\n          if (options.oneofs) object.elementType = \"namedQuery\";\n        }\n\n        if (message.documentMetadata != null && message.hasOwnProperty(\"documentMetadata\")) {\n          object.documentMetadata = $root.firestore.BundledDocumentMetadata.toObject(message.documentMetadata, options);\n          if (options.oneofs) object.elementType = \"documentMetadata\";\n        }\n\n        if (message.document != null && message.hasOwnProperty(\"document\")) {\n          object.document = $root.google.firestore.v1.Document.toObject(message.document, options);\n          if (options.oneofs) object.elementType = \"document\";\n        }\n\n        return object;\n      };\n      /**\n       * Converts this BundleElement to JSON.\n       * @function toJSON\n       * @memberof firestore.BundleElement\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      BundleElement.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return BundleElement;\n    }();\n\n    return firestore;\n  }();\n\n  $root.google = function () {\n    /**\n     * Namespace google.\n     * @exports google\n     * @namespace\n     */\n    var google = {};\n\n    google.protobuf = function () {\n      /**\n       * Namespace protobuf.\n       * @memberof google\n       * @namespace\n       */\n      var protobuf = {};\n\n      protobuf.Timestamp = function () {\n        /**\n         * Properties of a Timestamp.\n         * @memberof google.protobuf\n         * @interface ITimestamp\n         * @property {number|string|null} [seconds] Timestamp seconds\n         * @property {number|null} [nanos] Timestamp nanos\n         */\n\n        /**\n         * Constructs a new Timestamp.\n         * @memberof google.protobuf\n         * @classdesc Represents a Timestamp.\n         * @implements ITimestamp\n         * @constructor\n         * @param {google.protobuf.ITimestamp=} [properties] Properties to set\n         */\n        function Timestamp(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * Timestamp seconds.\n         * @member {number|string} seconds\n         * @memberof google.protobuf.Timestamp\n         * @instance\n         */\n\n\n        Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n        /**\n         * Timestamp nanos.\n         * @member {number} nanos\n         * @memberof google.protobuf.Timestamp\n         * @instance\n         */\n\n        Timestamp.prototype.nanos = 0;\n        /**\n         * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.Timestamp\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.Timestamp} Timestamp\n         */\n\n        Timestamp.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.Timestamp) return object;\n          var message = new $root.google.protobuf.Timestamp();\n          if (object.seconds != null) if ($util.Long) (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;else if (typeof object.seconds === \"string\") message.seconds = parseInt(object.seconds, 10);else if (typeof object.seconds === \"number\") message.seconds = object.seconds;else if (typeof object.seconds === \"object\") message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();\n          if (object.nanos != null) message.nanos = object.nanos | 0;\n          return message;\n        };\n        /**\n         * Creates a plain object from a Timestamp message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.Timestamp\n         * @static\n         * @param {google.protobuf.Timestamp} message Timestamp\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        Timestamp.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            if ($util.Long) {\n              var long = new $util.Long(0, 0, false);\n              object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else object.seconds = options.longs === String ? \"0\" : 0;\n\n            object.nanos = 0;\n          }\n\n          if (message.seconds != null && message.hasOwnProperty(\"seconds\")) if (typeof message.seconds === \"number\") object.seconds = options.longs === String ? String(message.seconds) : message.seconds;else object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;\n          if (message.nanos != null && message.hasOwnProperty(\"nanos\")) object.nanos = message.nanos;\n          return object;\n        };\n        /**\n         * Converts this Timestamp to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.Timestamp\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        Timestamp.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Timestamp;\n      }();\n\n      protobuf.FileDescriptorSet = function () {\n        /**\n         * Properties of a FileDescriptorSet.\n         * @memberof google.protobuf\n         * @interface IFileDescriptorSet\n         * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file\n         */\n\n        /**\n         * Constructs a new FileDescriptorSet.\n         * @memberof google.protobuf\n         * @classdesc Represents a FileDescriptorSet.\n         * @implements IFileDescriptorSet\n         * @constructor\n         * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set\n         */\n        function FileDescriptorSet(properties) {\n          this.file = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * FileDescriptorSet file.\n         * @member {Array.<google.protobuf.IFileDescriptorProto>} file\n         * @memberof google.protobuf.FileDescriptorSet\n         * @instance\n         */\n\n\n        FileDescriptorSet.prototype.file = $util.emptyArray;\n        /**\n         * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.FileDescriptorSet\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet\n         */\n\n        FileDescriptorSet.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.FileDescriptorSet) return object;\n          var message = new $root.google.protobuf.FileDescriptorSet();\n\n          if (object.file) {\n            if (!Array.isArray(object.file)) throw TypeError(\".google.protobuf.FileDescriptorSet.file: array expected\");\n            message.file = [];\n\n            for (var i = 0; i < object.file.length; ++i) {\n              if (typeof object.file[i] !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorSet.file: object expected\");\n              message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.FileDescriptorSet\n         * @static\n         * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        FileDescriptorSet.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.file = [];\n\n          if (message.file && message.file.length) {\n            object.file = [];\n\n            for (var j = 0; j < message.file.length; ++j) {\n              object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this FileDescriptorSet to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.FileDescriptorSet\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        FileDescriptorSet.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return FileDescriptorSet;\n      }();\n\n      protobuf.FileDescriptorProto = function () {\n        /**\n         * Properties of a FileDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IFileDescriptorProto\n         * @property {string|null} [name] FileDescriptorProto name\n         * @property {string|null} [\"package\"] FileDescriptorProto package\n         * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency\n         * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency\n         * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency\n         * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType\n         * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType\n         * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service\n         * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension\n         * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options\n         * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo\n         * @property {string|null} [syntax] FileDescriptorProto syntax\n         */\n\n        /**\n         * Constructs a new FileDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents a FileDescriptorProto.\n         * @implements IFileDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set\n         */\n        function FileDescriptorProto(properties) {\n          this.dependency = [];\n          this.publicDependency = [];\n          this.weakDependency = [];\n          this.messageType = [];\n          this.enumType = [];\n          this.service = [];\n          this.extension = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * FileDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n\n        FileDescriptorProto.prototype.name = \"\";\n        /**\n         * FileDescriptorProto package.\n         * @member {string} package\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype[\"package\"] = \"\";\n        /**\n         * FileDescriptorProto dependency.\n         * @member {Array.<string>} dependency\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.dependency = $util.emptyArray;\n        /**\n         * FileDescriptorProto publicDependency.\n         * @member {Array.<number>} publicDependency\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.publicDependency = $util.emptyArray;\n        /**\n         * FileDescriptorProto weakDependency.\n         * @member {Array.<number>} weakDependency\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.weakDependency = $util.emptyArray;\n        /**\n         * FileDescriptorProto messageType.\n         * @member {Array.<google.protobuf.IDescriptorProto>} messageType\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.messageType = $util.emptyArray;\n        /**\n         * FileDescriptorProto enumType.\n         * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.enumType = $util.emptyArray;\n        /**\n         * FileDescriptorProto service.\n         * @member {Array.<google.protobuf.IServiceDescriptorProto>} service\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.service = $util.emptyArray;\n        /**\n         * FileDescriptorProto extension.\n         * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.extension = $util.emptyArray;\n        /**\n         * FileDescriptorProto options.\n         * @member {google.protobuf.IFileOptions|null|undefined} options\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.options = null;\n        /**\n         * FileDescriptorProto sourceCodeInfo.\n         * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.sourceCodeInfo = null;\n        /**\n         * FileDescriptorProto syntax.\n         * @member {string} syntax\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         */\n\n        FileDescriptorProto.prototype.syntax = \"\";\n        /**\n         * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.FileDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto\n         */\n\n        FileDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.FileDescriptorProto) return object;\n          var message = new $root.google.protobuf.FileDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n          if (object[\"package\"] != null) message[\"package\"] = String(object[\"package\"]);\n\n          if (object.dependency) {\n            if (!Array.isArray(object.dependency)) throw TypeError(\".google.protobuf.FileDescriptorProto.dependency: array expected\");\n            message.dependency = [];\n\n            for (var i = 0; i < object.dependency.length; ++i) {\n              message.dependency[i] = String(object.dependency[i]);\n            }\n          }\n\n          if (object.publicDependency) {\n            if (!Array.isArray(object.publicDependency)) throw TypeError(\".google.protobuf.FileDescriptorProto.publicDependency: array expected\");\n            message.publicDependency = [];\n\n            for (var i = 0; i < object.publicDependency.length; ++i) {\n              message.publicDependency[i] = object.publicDependency[i] | 0;\n            }\n          }\n\n          if (object.weakDependency) {\n            if (!Array.isArray(object.weakDependency)) throw TypeError(\".google.protobuf.FileDescriptorProto.weakDependency: array expected\");\n            message.weakDependency = [];\n\n            for (var i = 0; i < object.weakDependency.length; ++i) {\n              message.weakDependency[i] = object.weakDependency[i] | 0;\n            }\n          }\n\n          if (object.messageType) {\n            if (!Array.isArray(object.messageType)) throw TypeError(\".google.protobuf.FileDescriptorProto.messageType: array expected\");\n            message.messageType = [];\n\n            for (var i = 0; i < object.messageType.length; ++i) {\n              if (typeof object.messageType[i] !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorProto.messageType: object expected\");\n              message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);\n            }\n          }\n\n          if (object.enumType) {\n            if (!Array.isArray(object.enumType)) throw TypeError(\".google.protobuf.FileDescriptorProto.enumType: array expected\");\n            message.enumType = [];\n\n            for (var i = 0; i < object.enumType.length; ++i) {\n              if (typeof object.enumType[i] !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorProto.enumType: object expected\");\n              message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);\n            }\n          }\n\n          if (object.service) {\n            if (!Array.isArray(object.service)) throw TypeError(\".google.protobuf.FileDescriptorProto.service: array expected\");\n            message.service = [];\n\n            for (var i = 0; i < object.service.length; ++i) {\n              if (typeof object.service[i] !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorProto.service: object expected\");\n              message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);\n            }\n          }\n\n          if (object.extension) {\n            if (!Array.isArray(object.extension)) throw TypeError(\".google.protobuf.FileDescriptorProto.extension: array expected\");\n            message.extension = [];\n\n            for (var i = 0; i < object.extension.length; ++i) {\n              if (typeof object.extension[i] !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorProto.extension: object expected\");\n              message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);\n            }\n          }\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.FileOptions.fromObject(object.options);\n          }\n\n          if (object.sourceCodeInfo != null) {\n            if (typeof object.sourceCodeInfo !== \"object\") throw TypeError(\".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected\");\n            message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);\n          }\n\n          if (object.syntax != null) message.syntax = String(object.syntax);\n          return message;\n        };\n        /**\n         * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.FileDescriptorProto\n         * @static\n         * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        FileDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.arrays || options.defaults) {\n            object.dependency = [];\n            object.messageType = [];\n            object.enumType = [];\n            object.service = [];\n            object.extension = [];\n            object.publicDependency = [];\n            object.weakDependency = [];\n          }\n\n          if (options.defaults) {\n            object.name = \"\";\n            object[\"package\"] = \"\";\n            object.options = null;\n            object.sourceCodeInfo = null;\n            object.syntax = \"\";\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          if (message[\"package\"] != null && message.hasOwnProperty(\"package\")) object[\"package\"] = message[\"package\"];\n\n          if (message.dependency && message.dependency.length) {\n            object.dependency = [];\n\n            for (var j = 0; j < message.dependency.length; ++j) {\n              object.dependency[j] = message.dependency[j];\n            }\n          }\n\n          if (message.messageType && message.messageType.length) {\n            object.messageType = [];\n\n            for (var j = 0; j < message.messageType.length; ++j) {\n              object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);\n            }\n          }\n\n          if (message.enumType && message.enumType.length) {\n            object.enumType = [];\n\n            for (var j = 0; j < message.enumType.length; ++j) {\n              object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);\n            }\n          }\n\n          if (message.service && message.service.length) {\n            object.service = [];\n\n            for (var j = 0; j < message.service.length; ++j) {\n              object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);\n            }\n          }\n\n          if (message.extension && message.extension.length) {\n            object.extension = [];\n\n            for (var j = 0; j < message.extension.length; ++j) {\n              object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);\n            }\n          }\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);\n          if (message.sourceCodeInfo != null && message.hasOwnProperty(\"sourceCodeInfo\")) object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);\n\n          if (message.publicDependency && message.publicDependency.length) {\n            object.publicDependency = [];\n\n            for (var j = 0; j < message.publicDependency.length; ++j) {\n              object.publicDependency[j] = message.publicDependency[j];\n            }\n          }\n\n          if (message.weakDependency && message.weakDependency.length) {\n            object.weakDependency = [];\n\n            for (var j = 0; j < message.weakDependency.length; ++j) {\n              object.weakDependency[j] = message.weakDependency[j];\n            }\n          }\n\n          if (message.syntax != null && message.hasOwnProperty(\"syntax\")) object.syntax = message.syntax;\n          return object;\n        };\n        /**\n         * Converts this FileDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.FileDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        FileDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return FileDescriptorProto;\n      }();\n\n      protobuf.DescriptorProto = function () {\n        /**\n         * Properties of a DescriptorProto.\n         * @memberof google.protobuf\n         * @interface IDescriptorProto\n         * @property {string|null} [name] DescriptorProto name\n         * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field\n         * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension\n         * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType\n         * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType\n         * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange\n         * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl\n         * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options\n         * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange\n         * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName\n         */\n\n        /**\n         * Constructs a new DescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents a DescriptorProto.\n         * @implements IDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set\n         */\n        function DescriptorProto(properties) {\n          this.field = [];\n          this.extension = [];\n          this.nestedType = [];\n          this.enumType = [];\n          this.extensionRange = [];\n          this.oneofDecl = [];\n          this.reservedRange = [];\n          this.reservedName = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * DescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n\n        DescriptorProto.prototype.name = \"\";\n        /**\n         * DescriptorProto field.\n         * @member {Array.<google.protobuf.IFieldDescriptorProto>} field\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.field = $util.emptyArray;\n        /**\n         * DescriptorProto extension.\n         * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.extension = $util.emptyArray;\n        /**\n         * DescriptorProto nestedType.\n         * @member {Array.<google.protobuf.IDescriptorProto>} nestedType\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.nestedType = $util.emptyArray;\n        /**\n         * DescriptorProto enumType.\n         * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.enumType = $util.emptyArray;\n        /**\n         * DescriptorProto extensionRange.\n         * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.extensionRange = $util.emptyArray;\n        /**\n         * DescriptorProto oneofDecl.\n         * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.oneofDecl = $util.emptyArray;\n        /**\n         * DescriptorProto options.\n         * @member {google.protobuf.IMessageOptions|null|undefined} options\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.options = null;\n        /**\n         * DescriptorProto reservedRange.\n         * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.reservedRange = $util.emptyArray;\n        /**\n         * DescriptorProto reservedName.\n         * @member {Array.<string>} reservedName\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         */\n\n        DescriptorProto.prototype.reservedName = $util.emptyArray;\n        /**\n         * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.DescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.DescriptorProto} DescriptorProto\n         */\n\n        DescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.DescriptorProto) return object;\n          var message = new $root.google.protobuf.DescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n\n          if (object.field) {\n            if (!Array.isArray(object.field)) throw TypeError(\".google.protobuf.DescriptorProto.field: array expected\");\n            message.field = [];\n\n            for (var i = 0; i < object.field.length; ++i) {\n              if (typeof object.field[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.field: object expected\");\n              message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);\n            }\n          }\n\n          if (object.extension) {\n            if (!Array.isArray(object.extension)) throw TypeError(\".google.protobuf.DescriptorProto.extension: array expected\");\n            message.extension = [];\n\n            for (var i = 0; i < object.extension.length; ++i) {\n              if (typeof object.extension[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.extension: object expected\");\n              message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);\n            }\n          }\n\n          if (object.nestedType) {\n            if (!Array.isArray(object.nestedType)) throw TypeError(\".google.protobuf.DescriptorProto.nestedType: array expected\");\n            message.nestedType = [];\n\n            for (var i = 0; i < object.nestedType.length; ++i) {\n              if (typeof object.nestedType[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.nestedType: object expected\");\n              message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);\n            }\n          }\n\n          if (object.enumType) {\n            if (!Array.isArray(object.enumType)) throw TypeError(\".google.protobuf.DescriptorProto.enumType: array expected\");\n            message.enumType = [];\n\n            for (var i = 0; i < object.enumType.length; ++i) {\n              if (typeof object.enumType[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.enumType: object expected\");\n              message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);\n            }\n          }\n\n          if (object.extensionRange) {\n            if (!Array.isArray(object.extensionRange)) throw TypeError(\".google.protobuf.DescriptorProto.extensionRange: array expected\");\n            message.extensionRange = [];\n\n            for (var i = 0; i < object.extensionRange.length; ++i) {\n              if (typeof object.extensionRange[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.extensionRange: object expected\");\n              message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);\n            }\n          }\n\n          if (object.oneofDecl) {\n            if (!Array.isArray(object.oneofDecl)) throw TypeError(\".google.protobuf.DescriptorProto.oneofDecl: array expected\");\n            message.oneofDecl = [];\n\n            for (var i = 0; i < object.oneofDecl.length; ++i) {\n              if (typeof object.oneofDecl[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.oneofDecl: object expected\");\n              message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);\n            }\n          }\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);\n          }\n\n          if (object.reservedRange) {\n            if (!Array.isArray(object.reservedRange)) throw TypeError(\".google.protobuf.DescriptorProto.reservedRange: array expected\");\n            message.reservedRange = [];\n\n            for (var i = 0; i < object.reservedRange.length; ++i) {\n              if (typeof object.reservedRange[i] !== \"object\") throw TypeError(\".google.protobuf.DescriptorProto.reservedRange: object expected\");\n              message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);\n            }\n          }\n\n          if (object.reservedName) {\n            if (!Array.isArray(object.reservedName)) throw TypeError(\".google.protobuf.DescriptorProto.reservedName: array expected\");\n            message.reservedName = [];\n\n            for (var i = 0; i < object.reservedName.length; ++i) {\n              message.reservedName[i] = String(object.reservedName[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.DescriptorProto\n         * @static\n         * @param {google.protobuf.DescriptorProto} message DescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        DescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.arrays || options.defaults) {\n            object.field = [];\n            object.nestedType = [];\n            object.enumType = [];\n            object.extensionRange = [];\n            object.extension = [];\n            object.oneofDecl = [];\n            object.reservedRange = [];\n            object.reservedName = [];\n          }\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.options = null;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n\n          if (message.field && message.field.length) {\n            object.field = [];\n\n            for (var j = 0; j < message.field.length; ++j) {\n              object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);\n            }\n          }\n\n          if (message.nestedType && message.nestedType.length) {\n            object.nestedType = [];\n\n            for (var j = 0; j < message.nestedType.length; ++j) {\n              object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);\n            }\n          }\n\n          if (message.enumType && message.enumType.length) {\n            object.enumType = [];\n\n            for (var j = 0; j < message.enumType.length; ++j) {\n              object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);\n            }\n          }\n\n          if (message.extensionRange && message.extensionRange.length) {\n            object.extensionRange = [];\n\n            for (var j = 0; j < message.extensionRange.length; ++j) {\n              object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);\n            }\n          }\n\n          if (message.extension && message.extension.length) {\n            object.extension = [];\n\n            for (var j = 0; j < message.extension.length; ++j) {\n              object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);\n            }\n          }\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);\n\n          if (message.oneofDecl && message.oneofDecl.length) {\n            object.oneofDecl = [];\n\n            for (var j = 0; j < message.oneofDecl.length; ++j) {\n              object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);\n            }\n          }\n\n          if (message.reservedRange && message.reservedRange.length) {\n            object.reservedRange = [];\n\n            for (var j = 0; j < message.reservedRange.length; ++j) {\n              object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);\n            }\n          }\n\n          if (message.reservedName && message.reservedName.length) {\n            object.reservedName = [];\n\n            for (var j = 0; j < message.reservedName.length; ++j) {\n              object.reservedName[j] = message.reservedName[j];\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this DescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.DescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        DescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        DescriptorProto.ExtensionRange = function () {\n          /**\n           * Properties of an ExtensionRange.\n           * @memberof google.protobuf.DescriptorProto\n           * @interface IExtensionRange\n           * @property {number|null} [start] ExtensionRange start\n           * @property {number|null} [end] ExtensionRange end\n           */\n\n          /**\n           * Constructs a new ExtensionRange.\n           * @memberof google.protobuf.DescriptorProto\n           * @classdesc Represents an ExtensionRange.\n           * @implements IExtensionRange\n           * @constructor\n           * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set\n           */\n          function ExtensionRange(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * ExtensionRange start.\n           * @member {number} start\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @instance\n           */\n\n\n          ExtensionRange.prototype.start = 0;\n          /**\n           * ExtensionRange end.\n           * @member {number} end\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @instance\n           */\n\n          ExtensionRange.prototype.end = 0;\n          /**\n           * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange\n           */\n\n          ExtensionRange.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange) return object;\n            var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();\n            if (object.start != null) message.start = object.start | 0;\n            if (object.end != null) message.end = object.end | 0;\n            return message;\n          };\n          /**\n           * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @static\n           * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          ExtensionRange.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.start = 0;\n              object.end = 0;\n            }\n\n            if (message.start != null && message.hasOwnProperty(\"start\")) object.start = message.start;\n            if (message.end != null && message.hasOwnProperty(\"end\")) object.end = message.end;\n            return object;\n          };\n          /**\n           * Converts this ExtensionRange to JSON.\n           * @function toJSON\n           * @memberof google.protobuf.DescriptorProto.ExtensionRange\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          ExtensionRange.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return ExtensionRange;\n        }();\n\n        DescriptorProto.ReservedRange = function () {\n          /**\n           * Properties of a ReservedRange.\n           * @memberof google.protobuf.DescriptorProto\n           * @interface IReservedRange\n           * @property {number|null} [start] ReservedRange start\n           * @property {number|null} [end] ReservedRange end\n           */\n\n          /**\n           * Constructs a new ReservedRange.\n           * @memberof google.protobuf.DescriptorProto\n           * @classdesc Represents a ReservedRange.\n           * @implements IReservedRange\n           * @constructor\n           * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set\n           */\n          function ReservedRange(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * ReservedRange start.\n           * @member {number} start\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @instance\n           */\n\n\n          ReservedRange.prototype.start = 0;\n          /**\n           * ReservedRange end.\n           * @member {number} end\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @instance\n           */\n\n          ReservedRange.prototype.end = 0;\n          /**\n           * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange\n           */\n\n          ReservedRange.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange) return object;\n            var message = new $root.google.protobuf.DescriptorProto.ReservedRange();\n            if (object.start != null) message.start = object.start | 0;\n            if (object.end != null) message.end = object.end | 0;\n            return message;\n          };\n          /**\n           * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @static\n           * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          ReservedRange.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.start = 0;\n              object.end = 0;\n            }\n\n            if (message.start != null && message.hasOwnProperty(\"start\")) object.start = message.start;\n            if (message.end != null && message.hasOwnProperty(\"end\")) object.end = message.end;\n            return object;\n          };\n          /**\n           * Converts this ReservedRange to JSON.\n           * @function toJSON\n           * @memberof google.protobuf.DescriptorProto.ReservedRange\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          ReservedRange.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return ReservedRange;\n        }();\n\n        return DescriptorProto;\n      }();\n\n      protobuf.FieldDescriptorProto = function () {\n        /**\n         * Properties of a FieldDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IFieldDescriptorProto\n         * @property {string|null} [name] FieldDescriptorProto name\n         * @property {number|null} [number] FieldDescriptorProto number\n         * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label\n         * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type\n         * @property {string|null} [typeName] FieldDescriptorProto typeName\n         * @property {string|null} [extendee] FieldDescriptorProto extendee\n         * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue\n         * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex\n         * @property {string|null} [jsonName] FieldDescriptorProto jsonName\n         * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options\n         */\n\n        /**\n         * Constructs a new FieldDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents a FieldDescriptorProto.\n         * @implements IFieldDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set\n         */\n        function FieldDescriptorProto(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * FieldDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n\n        FieldDescriptorProto.prototype.name = \"\";\n        /**\n         * FieldDescriptorProto number.\n         * @member {number} number\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.number = 0;\n        /**\n         * FieldDescriptorProto label.\n         * @member {google.protobuf.FieldDescriptorProto.Label} label\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.label = 1;\n        /**\n         * FieldDescriptorProto type.\n         * @member {google.protobuf.FieldDescriptorProto.Type} type\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.type = 1;\n        /**\n         * FieldDescriptorProto typeName.\n         * @member {string} typeName\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.typeName = \"\";\n        /**\n         * FieldDescriptorProto extendee.\n         * @member {string} extendee\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.extendee = \"\";\n        /**\n         * FieldDescriptorProto defaultValue.\n         * @member {string} defaultValue\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.defaultValue = \"\";\n        /**\n         * FieldDescriptorProto oneofIndex.\n         * @member {number} oneofIndex\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.oneofIndex = 0;\n        /**\n         * FieldDescriptorProto jsonName.\n         * @member {string} jsonName\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.jsonName = \"\";\n        /**\n         * FieldDescriptorProto options.\n         * @member {google.protobuf.IFieldOptions|null|undefined} options\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         */\n\n        FieldDescriptorProto.prototype.options = null;\n        /**\n         * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto\n         */\n\n        FieldDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.FieldDescriptorProto) return object;\n          var message = new $root.google.protobuf.FieldDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n          if (object.number != null) message.number = object.number | 0;\n\n          switch (object.label) {\n            case \"LABEL_OPTIONAL\":\n            case 1:\n              message.label = 1;\n              break;\n\n            case \"LABEL_REQUIRED\":\n            case 2:\n              message.label = 2;\n              break;\n\n            case \"LABEL_REPEATED\":\n            case 3:\n              message.label = 3;\n              break;\n          }\n\n          switch (object.type) {\n            case \"TYPE_DOUBLE\":\n            case 1:\n              message.type = 1;\n              break;\n\n            case \"TYPE_FLOAT\":\n            case 2:\n              message.type = 2;\n              break;\n\n            case \"TYPE_INT64\":\n            case 3:\n              message.type = 3;\n              break;\n\n            case \"TYPE_UINT64\":\n            case 4:\n              message.type = 4;\n              break;\n\n            case \"TYPE_INT32\":\n            case 5:\n              message.type = 5;\n              break;\n\n            case \"TYPE_FIXED64\":\n            case 6:\n              message.type = 6;\n              break;\n\n            case \"TYPE_FIXED32\":\n            case 7:\n              message.type = 7;\n              break;\n\n            case \"TYPE_BOOL\":\n            case 8:\n              message.type = 8;\n              break;\n\n            case \"TYPE_STRING\":\n            case 9:\n              message.type = 9;\n              break;\n\n            case \"TYPE_GROUP\":\n            case 10:\n              message.type = 10;\n              break;\n\n            case \"TYPE_MESSAGE\":\n            case 11:\n              message.type = 11;\n              break;\n\n            case \"TYPE_BYTES\":\n            case 12:\n              message.type = 12;\n              break;\n\n            case \"TYPE_UINT32\":\n            case 13:\n              message.type = 13;\n              break;\n\n            case \"TYPE_ENUM\":\n            case 14:\n              message.type = 14;\n              break;\n\n            case \"TYPE_SFIXED32\":\n            case 15:\n              message.type = 15;\n              break;\n\n            case \"TYPE_SFIXED64\":\n            case 16:\n              message.type = 16;\n              break;\n\n            case \"TYPE_SINT32\":\n            case 17:\n              message.type = 17;\n              break;\n\n            case \"TYPE_SINT64\":\n            case 18:\n              message.type = 18;\n              break;\n          }\n\n          if (object.typeName != null) message.typeName = String(object.typeName);\n          if (object.extendee != null) message.extendee = String(object.extendee);\n          if (object.defaultValue != null) message.defaultValue = String(object.defaultValue);\n          if (object.oneofIndex != null) message.oneofIndex = object.oneofIndex | 0;\n          if (object.jsonName != null) message.jsonName = String(object.jsonName);\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.FieldDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @static\n         * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        FieldDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.extendee = \"\";\n            object.number = 0;\n            object.label = options.enums === String ? \"LABEL_OPTIONAL\" : 1;\n            object.type = options.enums === String ? \"TYPE_DOUBLE\" : 1;\n            object.typeName = \"\";\n            object.defaultValue = \"\";\n            object.options = null;\n            object.oneofIndex = 0;\n            object.jsonName = \"\";\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          if (message.extendee != null && message.hasOwnProperty(\"extendee\")) object.extendee = message.extendee;\n          if (message.number != null && message.hasOwnProperty(\"number\")) object.number = message.number;\n          if (message.label != null && message.hasOwnProperty(\"label\")) object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;\n          if (message.type != null && message.hasOwnProperty(\"type\")) object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;\n          if (message.typeName != null && message.hasOwnProperty(\"typeName\")) object.typeName = message.typeName;\n          if (message.defaultValue != null && message.hasOwnProperty(\"defaultValue\")) object.defaultValue = message.defaultValue;\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);\n          if (message.oneofIndex != null && message.hasOwnProperty(\"oneofIndex\")) object.oneofIndex = message.oneofIndex;\n          if (message.jsonName != null && message.hasOwnProperty(\"jsonName\")) object.jsonName = message.jsonName;\n          return object;\n        };\n        /**\n         * Converts this FieldDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.FieldDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        FieldDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n        /**\n         * Type enum.\n         * @name google.protobuf.FieldDescriptorProto.Type\n         * @enum {string}\n         * @property {string} TYPE_DOUBLE=TYPE_DOUBLE TYPE_DOUBLE value\n         * @property {string} TYPE_FLOAT=TYPE_FLOAT TYPE_FLOAT value\n         * @property {string} TYPE_INT64=TYPE_INT64 TYPE_INT64 value\n         * @property {string} TYPE_UINT64=TYPE_UINT64 TYPE_UINT64 value\n         * @property {string} TYPE_INT32=TYPE_INT32 TYPE_INT32 value\n         * @property {string} TYPE_FIXED64=TYPE_FIXED64 TYPE_FIXED64 value\n         * @property {string} TYPE_FIXED32=TYPE_FIXED32 TYPE_FIXED32 value\n         * @property {string} TYPE_BOOL=TYPE_BOOL TYPE_BOOL value\n         * @property {string} TYPE_STRING=TYPE_STRING TYPE_STRING value\n         * @property {string} TYPE_GROUP=TYPE_GROUP TYPE_GROUP value\n         * @property {string} TYPE_MESSAGE=TYPE_MESSAGE TYPE_MESSAGE value\n         * @property {string} TYPE_BYTES=TYPE_BYTES TYPE_BYTES value\n         * @property {string} TYPE_UINT32=TYPE_UINT32 TYPE_UINT32 value\n         * @property {string} TYPE_ENUM=TYPE_ENUM TYPE_ENUM value\n         * @property {string} TYPE_SFIXED32=TYPE_SFIXED32 TYPE_SFIXED32 value\n         * @property {string} TYPE_SFIXED64=TYPE_SFIXED64 TYPE_SFIXED64 value\n         * @property {string} TYPE_SINT32=TYPE_SINT32 TYPE_SINT32 value\n         * @property {string} TYPE_SINT64=TYPE_SINT64 TYPE_SINT64 value\n         */\n\n\n        FieldDescriptorProto.Type = function () {\n          var valuesById = {},\n              values = Object.create(valuesById);\n          values[valuesById[1] = \"TYPE_DOUBLE\"] = \"TYPE_DOUBLE\";\n          values[valuesById[2] = \"TYPE_FLOAT\"] = \"TYPE_FLOAT\";\n          values[valuesById[3] = \"TYPE_INT64\"] = \"TYPE_INT64\";\n          values[valuesById[4] = \"TYPE_UINT64\"] = \"TYPE_UINT64\";\n          values[valuesById[5] = \"TYPE_INT32\"] = \"TYPE_INT32\";\n          values[valuesById[6] = \"TYPE_FIXED64\"] = \"TYPE_FIXED64\";\n          values[valuesById[7] = \"TYPE_FIXED32\"] = \"TYPE_FIXED32\";\n          values[valuesById[8] = \"TYPE_BOOL\"] = \"TYPE_BOOL\";\n          values[valuesById[9] = \"TYPE_STRING\"] = \"TYPE_STRING\";\n          values[valuesById[10] = \"TYPE_GROUP\"] = \"TYPE_GROUP\";\n          values[valuesById[11] = \"TYPE_MESSAGE\"] = \"TYPE_MESSAGE\";\n          values[valuesById[12] = \"TYPE_BYTES\"] = \"TYPE_BYTES\";\n          values[valuesById[13] = \"TYPE_UINT32\"] = \"TYPE_UINT32\";\n          values[valuesById[14] = \"TYPE_ENUM\"] = \"TYPE_ENUM\";\n          values[valuesById[15] = \"TYPE_SFIXED32\"] = \"TYPE_SFIXED32\";\n          values[valuesById[16] = \"TYPE_SFIXED64\"] = \"TYPE_SFIXED64\";\n          values[valuesById[17] = \"TYPE_SINT32\"] = \"TYPE_SINT32\";\n          values[valuesById[18] = \"TYPE_SINT64\"] = \"TYPE_SINT64\";\n          return values;\n        }();\n        /**\n         * Label enum.\n         * @name google.protobuf.FieldDescriptorProto.Label\n         * @enum {string}\n         * @property {string} LABEL_OPTIONAL=LABEL_OPTIONAL LABEL_OPTIONAL value\n         * @property {string} LABEL_REQUIRED=LABEL_REQUIRED LABEL_REQUIRED value\n         * @property {string} LABEL_REPEATED=LABEL_REPEATED LABEL_REPEATED value\n         */\n\n\n        FieldDescriptorProto.Label = function () {\n          var valuesById = {},\n              values = Object.create(valuesById);\n          values[valuesById[1] = \"LABEL_OPTIONAL\"] = \"LABEL_OPTIONAL\";\n          values[valuesById[2] = \"LABEL_REQUIRED\"] = \"LABEL_REQUIRED\";\n          values[valuesById[3] = \"LABEL_REPEATED\"] = \"LABEL_REPEATED\";\n          return values;\n        }();\n\n        return FieldDescriptorProto;\n      }();\n\n      protobuf.OneofDescriptorProto = function () {\n        /**\n         * Properties of an OneofDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IOneofDescriptorProto\n         * @property {string|null} [name] OneofDescriptorProto name\n         * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options\n         */\n\n        /**\n         * Constructs a new OneofDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents an OneofDescriptorProto.\n         * @implements IOneofDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set\n         */\n        function OneofDescriptorProto(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * OneofDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @instance\n         */\n\n\n        OneofDescriptorProto.prototype.name = \"\";\n        /**\n         * OneofDescriptorProto options.\n         * @member {google.protobuf.IOneofOptions|null|undefined} options\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @instance\n         */\n\n        OneofDescriptorProto.prototype.options = null;\n        /**\n         * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto\n         */\n\n        OneofDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.OneofDescriptorProto) return object;\n          var message = new $root.google.protobuf.OneofDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.OneofDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @static\n         * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        OneofDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.options = null;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);\n          return object;\n        };\n        /**\n         * Converts this OneofDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.OneofDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        OneofDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OneofDescriptorProto;\n      }();\n\n      protobuf.EnumDescriptorProto = function () {\n        /**\n         * Properties of an EnumDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IEnumDescriptorProto\n         * @property {string|null} [name] EnumDescriptorProto name\n         * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value\n         * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options\n         */\n\n        /**\n         * Constructs a new EnumDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents an EnumDescriptorProto.\n         * @implements IEnumDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set\n         */\n        function EnumDescriptorProto(properties) {\n          this.value = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * EnumDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @instance\n         */\n\n\n        EnumDescriptorProto.prototype.name = \"\";\n        /**\n         * EnumDescriptorProto value.\n         * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @instance\n         */\n\n        EnumDescriptorProto.prototype.value = $util.emptyArray;\n        /**\n         * EnumDescriptorProto options.\n         * @member {google.protobuf.IEnumOptions|null|undefined} options\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @instance\n         */\n\n        EnumDescriptorProto.prototype.options = null;\n        /**\n         * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto\n         */\n\n        EnumDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.EnumDescriptorProto) return object;\n          var message = new $root.google.protobuf.EnumDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n\n          if (object.value) {\n            if (!Array.isArray(object.value)) throw TypeError(\".google.protobuf.EnumDescriptorProto.value: array expected\");\n            message.value = [];\n\n            for (var i = 0; i < object.value.length; ++i) {\n              if (typeof object.value[i] !== \"object\") throw TypeError(\".google.protobuf.EnumDescriptorProto.value: object expected\");\n              message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);\n            }\n          }\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.EnumDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @static\n         * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        EnumDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.value = [];\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.options = null;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n\n          if (message.value && message.value.length) {\n            object.value = [];\n\n            for (var j = 0; j < message.value.length; ++j) {\n              object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);\n            }\n          }\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);\n          return object;\n        };\n        /**\n         * Converts this EnumDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.EnumDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        EnumDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return EnumDescriptorProto;\n      }();\n\n      protobuf.EnumValueDescriptorProto = function () {\n        /**\n         * Properties of an EnumValueDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IEnumValueDescriptorProto\n         * @property {string|null} [name] EnumValueDescriptorProto name\n         * @property {number|null} [number] EnumValueDescriptorProto number\n         * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options\n         */\n\n        /**\n         * Constructs a new EnumValueDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents an EnumValueDescriptorProto.\n         * @implements IEnumValueDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set\n         */\n        function EnumValueDescriptorProto(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * EnumValueDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @instance\n         */\n\n\n        EnumValueDescriptorProto.prototype.name = \"\";\n        /**\n         * EnumValueDescriptorProto number.\n         * @member {number} number\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @instance\n         */\n\n        EnumValueDescriptorProto.prototype.number = 0;\n        /**\n         * EnumValueDescriptorProto options.\n         * @member {google.protobuf.IEnumValueOptions|null|undefined} options\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @instance\n         */\n\n        EnumValueDescriptorProto.prototype.options = null;\n        /**\n         * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto\n         */\n\n        EnumValueDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.EnumValueDescriptorProto) return object;\n          var message = new $root.google.protobuf.EnumValueDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n          if (object.number != null) message.number = object.number | 0;\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.EnumValueDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @static\n         * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        EnumValueDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.number = 0;\n            object.options = null;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          if (message.number != null && message.hasOwnProperty(\"number\")) object.number = message.number;\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);\n          return object;\n        };\n        /**\n         * Converts this EnumValueDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.EnumValueDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        EnumValueDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return EnumValueDescriptorProto;\n      }();\n\n      protobuf.ServiceDescriptorProto = function () {\n        /**\n         * Properties of a ServiceDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IServiceDescriptorProto\n         * @property {string|null} [name] ServiceDescriptorProto name\n         * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method\n         * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options\n         */\n\n        /**\n         * Constructs a new ServiceDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents a ServiceDescriptorProto.\n         * @implements IServiceDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set\n         */\n        function ServiceDescriptorProto(properties) {\n          this.method = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * ServiceDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @instance\n         */\n\n\n        ServiceDescriptorProto.prototype.name = \"\";\n        /**\n         * ServiceDescriptorProto method.\n         * @member {Array.<google.protobuf.IMethodDescriptorProto>} method\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @instance\n         */\n\n        ServiceDescriptorProto.prototype.method = $util.emptyArray;\n        /**\n         * ServiceDescriptorProto options.\n         * @member {google.protobuf.IServiceOptions|null|undefined} options\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @instance\n         */\n\n        ServiceDescriptorProto.prototype.options = null;\n        /**\n         * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto\n         */\n\n        ServiceDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.ServiceDescriptorProto) return object;\n          var message = new $root.google.protobuf.ServiceDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n\n          if (object.method) {\n            if (!Array.isArray(object.method)) throw TypeError(\".google.protobuf.ServiceDescriptorProto.method: array expected\");\n            message.method = [];\n\n            for (var i = 0; i < object.method.length; ++i) {\n              if (typeof object.method[i] !== \"object\") throw TypeError(\".google.protobuf.ServiceDescriptorProto.method: object expected\");\n              message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);\n            }\n          }\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.ServiceDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @static\n         * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        ServiceDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.method = [];\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.options = null;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n\n          if (message.method && message.method.length) {\n            object.method = [];\n\n            for (var j = 0; j < message.method.length; ++j) {\n              object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);\n            }\n          }\n\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);\n          return object;\n        };\n        /**\n         * Converts this ServiceDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.ServiceDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        ServiceDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ServiceDescriptorProto;\n      }();\n\n      protobuf.MethodDescriptorProto = function () {\n        /**\n         * Properties of a MethodDescriptorProto.\n         * @memberof google.protobuf\n         * @interface IMethodDescriptorProto\n         * @property {string|null} [name] MethodDescriptorProto name\n         * @property {string|null} [inputType] MethodDescriptorProto inputType\n         * @property {string|null} [outputType] MethodDescriptorProto outputType\n         * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options\n         * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming\n         * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming\n         */\n\n        /**\n         * Constructs a new MethodDescriptorProto.\n         * @memberof google.protobuf\n         * @classdesc Represents a MethodDescriptorProto.\n         * @implements IMethodDescriptorProto\n         * @constructor\n         * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set\n         */\n        function MethodDescriptorProto(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * MethodDescriptorProto name.\n         * @member {string} name\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         */\n\n\n        MethodDescriptorProto.prototype.name = \"\";\n        /**\n         * MethodDescriptorProto inputType.\n         * @member {string} inputType\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         */\n\n        MethodDescriptorProto.prototype.inputType = \"\";\n        /**\n         * MethodDescriptorProto outputType.\n         * @member {string} outputType\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         */\n\n        MethodDescriptorProto.prototype.outputType = \"\";\n        /**\n         * MethodDescriptorProto options.\n         * @member {google.protobuf.IMethodOptions|null|undefined} options\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         */\n\n        MethodDescriptorProto.prototype.options = null;\n        /**\n         * MethodDescriptorProto clientStreaming.\n         * @member {boolean} clientStreaming\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         */\n\n        MethodDescriptorProto.prototype.clientStreaming = false;\n        /**\n         * MethodDescriptorProto serverStreaming.\n         * @member {boolean} serverStreaming\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         */\n\n        MethodDescriptorProto.prototype.serverStreaming = false;\n        /**\n         * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto\n         */\n\n        MethodDescriptorProto.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.MethodDescriptorProto) return object;\n          var message = new $root.google.protobuf.MethodDescriptorProto();\n          if (object.name != null) message.name = String(object.name);\n          if (object.inputType != null) message.inputType = String(object.inputType);\n          if (object.outputType != null) message.outputType = String(object.outputType);\n\n          if (object.options != null) {\n            if (typeof object.options !== \"object\") throw TypeError(\".google.protobuf.MethodDescriptorProto.options: object expected\");\n            message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);\n          }\n\n          if (object.clientStreaming != null) message.clientStreaming = Boolean(object.clientStreaming);\n          if (object.serverStreaming != null) message.serverStreaming = Boolean(object.serverStreaming);\n          return message;\n        };\n        /**\n         * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @static\n         * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        MethodDescriptorProto.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.inputType = \"\";\n            object.outputType = \"\";\n            object.options = null;\n            object.clientStreaming = false;\n            object.serverStreaming = false;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          if (message.inputType != null && message.hasOwnProperty(\"inputType\")) object.inputType = message.inputType;\n          if (message.outputType != null && message.hasOwnProperty(\"outputType\")) object.outputType = message.outputType;\n          if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);\n          if (message.clientStreaming != null && message.hasOwnProperty(\"clientStreaming\")) object.clientStreaming = message.clientStreaming;\n          if (message.serverStreaming != null && message.hasOwnProperty(\"serverStreaming\")) object.serverStreaming = message.serverStreaming;\n          return object;\n        };\n        /**\n         * Converts this MethodDescriptorProto to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.MethodDescriptorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        MethodDescriptorProto.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return MethodDescriptorProto;\n      }();\n\n      protobuf.FileOptions = function () {\n        /**\n         * Properties of a FileOptions.\n         * @memberof google.protobuf\n         * @interface IFileOptions\n         * @property {string|null} [javaPackage] FileOptions javaPackage\n         * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname\n         * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles\n         * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash\n         * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8\n         * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor\n         * @property {string|null} [goPackage] FileOptions goPackage\n         * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices\n         * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices\n         * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices\n         * @property {boolean|null} [deprecated] FileOptions deprecated\n         * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas\n         * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix\n         * @property {string|null} [csharpNamespace] FileOptions csharpNamespace\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption\n         * @property {Array.<google.api.IResourceDescriptor>|null} [\".google.api.resourceDefinition\"] FileOptions .google.api.resourceDefinition\n         */\n\n        /**\n         * Constructs a new FileOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents a FileOptions.\n         * @implements IFileOptions\n         * @constructor\n         * @param {google.protobuf.IFileOptions=} [properties] Properties to set\n         */\n        function FileOptions(properties) {\n          this.uninterpretedOption = [];\n          this[\".google.api.resourceDefinition\"] = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * FileOptions javaPackage.\n         * @member {string} javaPackage\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n\n        FileOptions.prototype.javaPackage = \"\";\n        /**\n         * FileOptions javaOuterClassname.\n         * @member {string} javaOuterClassname\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.javaOuterClassname = \"\";\n        /**\n         * FileOptions javaMultipleFiles.\n         * @member {boolean} javaMultipleFiles\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.javaMultipleFiles = false;\n        /**\n         * FileOptions javaGenerateEqualsAndHash.\n         * @member {boolean} javaGenerateEqualsAndHash\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.javaGenerateEqualsAndHash = false;\n        /**\n         * FileOptions javaStringCheckUtf8.\n         * @member {boolean} javaStringCheckUtf8\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.javaStringCheckUtf8 = false;\n        /**\n         * FileOptions optimizeFor.\n         * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.optimizeFor = 1;\n        /**\n         * FileOptions goPackage.\n         * @member {string} goPackage\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.goPackage = \"\";\n        /**\n         * FileOptions ccGenericServices.\n         * @member {boolean} ccGenericServices\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.ccGenericServices = false;\n        /**\n         * FileOptions javaGenericServices.\n         * @member {boolean} javaGenericServices\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.javaGenericServices = false;\n        /**\n         * FileOptions pyGenericServices.\n         * @member {boolean} pyGenericServices\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.pyGenericServices = false;\n        /**\n         * FileOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.deprecated = false;\n        /**\n         * FileOptions ccEnableArenas.\n         * @member {boolean} ccEnableArenas\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.ccEnableArenas = false;\n        /**\n         * FileOptions objcClassPrefix.\n         * @member {string} objcClassPrefix\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.objcClassPrefix = \"\";\n        /**\n         * FileOptions csharpNamespace.\n         * @member {string} csharpNamespace\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.csharpNamespace = \"\";\n        /**\n         * FileOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * FileOptions .google.api.resourceDefinition.\n         * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         */\n\n        FileOptions.prototype[\".google.api.resourceDefinition\"] = $util.emptyArray;\n        /**\n         * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.FileOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.FileOptions} FileOptions\n         */\n\n        FileOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.FileOptions) return object;\n          var message = new $root.google.protobuf.FileOptions();\n          if (object.javaPackage != null) message.javaPackage = String(object.javaPackage);\n          if (object.javaOuterClassname != null) message.javaOuterClassname = String(object.javaOuterClassname);\n          if (object.javaMultipleFiles != null) message.javaMultipleFiles = Boolean(object.javaMultipleFiles);\n          if (object.javaGenerateEqualsAndHash != null) message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);\n          if (object.javaStringCheckUtf8 != null) message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);\n\n          switch (object.optimizeFor) {\n            case \"SPEED\":\n            case 1:\n              message.optimizeFor = 1;\n              break;\n\n            case \"CODE_SIZE\":\n            case 2:\n              message.optimizeFor = 2;\n              break;\n\n            case \"LITE_RUNTIME\":\n            case 3:\n              message.optimizeFor = 3;\n              break;\n          }\n\n          if (object.goPackage != null) message.goPackage = String(object.goPackage);\n          if (object.ccGenericServices != null) message.ccGenericServices = Boolean(object.ccGenericServices);\n          if (object.javaGenericServices != null) message.javaGenericServices = Boolean(object.javaGenericServices);\n          if (object.pyGenericServices != null) message.pyGenericServices = Boolean(object.pyGenericServices);\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n          if (object.ccEnableArenas != null) message.ccEnableArenas = Boolean(object.ccEnableArenas);\n          if (object.objcClassPrefix != null) message.objcClassPrefix = String(object.objcClassPrefix);\n          if (object.csharpNamespace != null) message.csharpNamespace = String(object.csharpNamespace);\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.FileOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.FileOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          if (object[\".google.api.resourceDefinition\"]) {\n            if (!Array.isArray(object[\".google.api.resourceDefinition\"])) throw TypeError(\".google.protobuf.FileOptions..google.api.resourceDefinition: array expected\");\n            message[\".google.api.resourceDefinition\"] = [];\n\n            for (var i = 0; i < object[\".google.api.resourceDefinition\"].length; ++i) {\n              if (typeof object[\".google.api.resourceDefinition\"][i] !== \"object\") throw TypeError(\".google.protobuf.FileOptions..google.api.resourceDefinition: object expected\");\n              message[\".google.api.resourceDefinition\"][i] = $root.google.api.ResourceDescriptor.fromObject(object[\".google.api.resourceDefinition\"][i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a FileOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.FileOptions\n         * @static\n         * @param {google.protobuf.FileOptions} message FileOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        FileOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.arrays || options.defaults) {\n            object.uninterpretedOption = [];\n            object[\".google.api.resourceDefinition\"] = [];\n          }\n\n          if (options.defaults) {\n            object.javaPackage = \"\";\n            object.javaOuterClassname = \"\";\n            object.optimizeFor = options.enums === String ? \"SPEED\" : 1;\n            object.javaMultipleFiles = false;\n            object.goPackage = \"\";\n            object.ccGenericServices = false;\n            object.javaGenericServices = false;\n            object.pyGenericServices = false;\n            object.javaGenerateEqualsAndHash = false;\n            object.deprecated = false;\n            object.javaStringCheckUtf8 = false;\n            object.ccEnableArenas = false;\n            object.objcClassPrefix = \"\";\n            object.csharpNamespace = \"\";\n          }\n\n          if (message.javaPackage != null && message.hasOwnProperty(\"javaPackage\")) object.javaPackage = message.javaPackage;\n          if (message.javaOuterClassname != null && message.hasOwnProperty(\"javaOuterClassname\")) object.javaOuterClassname = message.javaOuterClassname;\n          if (message.optimizeFor != null && message.hasOwnProperty(\"optimizeFor\")) object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;\n          if (message.javaMultipleFiles != null && message.hasOwnProperty(\"javaMultipleFiles\")) object.javaMultipleFiles = message.javaMultipleFiles;\n          if (message.goPackage != null && message.hasOwnProperty(\"goPackage\")) object.goPackage = message.goPackage;\n          if (message.ccGenericServices != null && message.hasOwnProperty(\"ccGenericServices\")) object.ccGenericServices = message.ccGenericServices;\n          if (message.javaGenericServices != null && message.hasOwnProperty(\"javaGenericServices\")) object.javaGenericServices = message.javaGenericServices;\n          if (message.pyGenericServices != null && message.hasOwnProperty(\"pyGenericServices\")) object.pyGenericServices = message.pyGenericServices;\n          if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty(\"javaGenerateEqualsAndHash\")) object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n          if (message.javaStringCheckUtf8 != null && message.hasOwnProperty(\"javaStringCheckUtf8\")) object.javaStringCheckUtf8 = message.javaStringCheckUtf8;\n          if (message.ccEnableArenas != null && message.hasOwnProperty(\"ccEnableArenas\")) object.ccEnableArenas = message.ccEnableArenas;\n          if (message.objcClassPrefix != null && message.hasOwnProperty(\"objcClassPrefix\")) object.objcClassPrefix = message.objcClassPrefix;\n          if (message.csharpNamespace != null && message.hasOwnProperty(\"csharpNamespace\")) object.csharpNamespace = message.csharpNamespace;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) {\n              object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n            }\n          }\n\n          if (message[\".google.api.resourceDefinition\"] && message[\".google.api.resourceDefinition\"].length) {\n            object[\".google.api.resourceDefinition\"] = [];\n\n            for (var j = 0; j < message[\".google.api.resourceDefinition\"].length; ++j) {\n              object[\".google.api.resourceDefinition\"][j] = $root.google.api.ResourceDescriptor.toObject(message[\".google.api.resourceDefinition\"][j], options);\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this FileOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.FileOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        FileOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n        /**\n         * OptimizeMode enum.\n         * @name google.protobuf.FileOptions.OptimizeMode\n         * @enum {string}\n         * @property {string} SPEED=SPEED SPEED value\n         * @property {string} CODE_SIZE=CODE_SIZE CODE_SIZE value\n         * @property {string} LITE_RUNTIME=LITE_RUNTIME LITE_RUNTIME value\n         */\n\n\n        FileOptions.OptimizeMode = function () {\n          var valuesById = {},\n              values = Object.create(valuesById);\n          values[valuesById[1] = \"SPEED\"] = \"SPEED\";\n          values[valuesById[2] = \"CODE_SIZE\"] = \"CODE_SIZE\";\n          values[valuesById[3] = \"LITE_RUNTIME\"] = \"LITE_RUNTIME\";\n          return values;\n        }();\n\n        return FileOptions;\n      }();\n\n      protobuf.MessageOptions = function () {\n        /**\n         * Properties of a MessageOptions.\n         * @memberof google.protobuf\n         * @interface IMessageOptions\n         * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat\n         * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor\n         * @property {boolean|null} [deprecated] MessageOptions deprecated\n         * @property {boolean|null} [mapEntry] MessageOptions mapEntry\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption\n         * @property {google.api.IResourceDescriptor|null} [\".google.api.resource\"] MessageOptions .google.api.resource\n         */\n\n        /**\n         * Constructs a new MessageOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents a MessageOptions.\n         * @implements IMessageOptions\n         * @constructor\n         * @param {google.protobuf.IMessageOptions=} [properties] Properties to set\n         */\n        function MessageOptions(properties) {\n          this.uninterpretedOption = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * MessageOptions messageSetWireFormat.\n         * @member {boolean} messageSetWireFormat\n         * @memberof google.protobuf.MessageOptions\n         * @instance\n         */\n\n\n        MessageOptions.prototype.messageSetWireFormat = false;\n        /**\n         * MessageOptions noStandardDescriptorAccessor.\n         * @member {boolean} noStandardDescriptorAccessor\n         * @memberof google.protobuf.MessageOptions\n         * @instance\n         */\n\n        MessageOptions.prototype.noStandardDescriptorAccessor = false;\n        /**\n         * MessageOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.MessageOptions\n         * @instance\n         */\n\n        MessageOptions.prototype.deprecated = false;\n        /**\n         * MessageOptions mapEntry.\n         * @member {boolean} mapEntry\n         * @memberof google.protobuf.MessageOptions\n         * @instance\n         */\n\n        MessageOptions.prototype.mapEntry = false;\n        /**\n         * MessageOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.MessageOptions\n         * @instance\n         */\n\n        MessageOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * MessageOptions .google.api.resource.\n         * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource\n         * @memberof google.protobuf.MessageOptions\n         * @instance\n         */\n\n        MessageOptions.prototype[\".google.api.resource\"] = null;\n        /**\n         * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.MessageOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.MessageOptions} MessageOptions\n         */\n\n        MessageOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.MessageOptions) return object;\n          var message = new $root.google.protobuf.MessageOptions();\n          if (object.messageSetWireFormat != null) message.messageSetWireFormat = Boolean(object.messageSetWireFormat);\n          if (object.noStandardDescriptorAccessor != null) message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n          if (object.mapEntry != null) message.mapEntry = Boolean(object.mapEntry);\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.MessageOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.MessageOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          if (object[\".google.api.resource\"] != null) {\n            if (typeof object[\".google.api.resource\"] !== \"object\") throw TypeError(\".google.protobuf.MessageOptions..google.api.resource: object expected\");\n            message[\".google.api.resource\"] = $root.google.api.ResourceDescriptor.fromObject(object[\".google.api.resource\"]);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.MessageOptions\n         * @static\n         * @param {google.protobuf.MessageOptions} message MessageOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        MessageOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.uninterpretedOption = [];\n\n          if (options.defaults) {\n            object.messageSetWireFormat = false;\n            object.noStandardDescriptorAccessor = false;\n            object.deprecated = false;\n            object.mapEntry = false;\n            object[\".google.api.resource\"] = null;\n          }\n\n          if (message.messageSetWireFormat != null && message.hasOwnProperty(\"messageSetWireFormat\")) object.messageSetWireFormat = message.messageSetWireFormat;\n          if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty(\"noStandardDescriptorAccessor\")) object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n          if (message.mapEntry != null && message.hasOwnProperty(\"mapEntry\")) object.mapEntry = message.mapEntry;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) {\n              object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n            }\n          }\n\n          if (message[\".google.api.resource\"] != null && message.hasOwnProperty(\".google.api.resource\")) object[\".google.api.resource\"] = $root.google.api.ResourceDescriptor.toObject(message[\".google.api.resource\"], options);\n          return object;\n        };\n        /**\n         * Converts this MessageOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.MessageOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        MessageOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return MessageOptions;\n      }();\n\n      protobuf.FieldOptions = function () {\n        /**\n         * Properties of a FieldOptions.\n         * @memberof google.protobuf\n         * @interface IFieldOptions\n         * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype\n         * @property {boolean|null} [packed] FieldOptions packed\n         * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype\n         * @property {boolean|null} [lazy] FieldOptions lazy\n         * @property {boolean|null} [deprecated] FieldOptions deprecated\n         * @property {boolean|null} [weak] FieldOptions weak\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption\n         * @property {Array.<google.api.FieldBehavior>|null} [\".google.api.fieldBehavior\"] FieldOptions .google.api.fieldBehavior\n         * @property {google.api.IResourceReference|null} [\".google.api.resourceReference\"] FieldOptions .google.api.resourceReference\n         */\n\n        /**\n         * Constructs a new FieldOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents a FieldOptions.\n         * @implements IFieldOptions\n         * @constructor\n         * @param {google.protobuf.IFieldOptions=} [properties] Properties to set\n         */\n        function FieldOptions(properties) {\n          this.uninterpretedOption = [];\n          this[\".google.api.fieldBehavior\"] = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * FieldOptions ctype.\n         * @member {google.protobuf.FieldOptions.CType} ctype\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n\n        FieldOptions.prototype.ctype = 0;\n        /**\n         * FieldOptions packed.\n         * @member {boolean} packed\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype.packed = false;\n        /**\n         * FieldOptions jstype.\n         * @member {google.protobuf.FieldOptions.JSType} jstype\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype.jstype = 0;\n        /**\n         * FieldOptions lazy.\n         * @member {boolean} lazy\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype.lazy = false;\n        /**\n         * FieldOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype.deprecated = false;\n        /**\n         * FieldOptions weak.\n         * @member {boolean} weak\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype.weak = false;\n        /**\n         * FieldOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * FieldOptions .google.api.fieldBehavior.\n         * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype[\".google.api.fieldBehavior\"] = $util.emptyArray;\n        /**\n         * FieldOptions .google.api.resourceReference.\n         * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         */\n\n        FieldOptions.prototype[\".google.api.resourceReference\"] = null;\n        /**\n         * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.FieldOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.FieldOptions} FieldOptions\n         */\n\n        FieldOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.FieldOptions) return object;\n          var message = new $root.google.protobuf.FieldOptions();\n\n          switch (object.ctype) {\n            case \"STRING\":\n            case 0:\n              message.ctype = 0;\n              break;\n\n            case \"CORD\":\n            case 1:\n              message.ctype = 1;\n              break;\n\n            case \"STRING_PIECE\":\n            case 2:\n              message.ctype = 2;\n              break;\n          }\n\n          if (object.packed != null) message.packed = Boolean(object.packed);\n\n          switch (object.jstype) {\n            case \"JS_NORMAL\":\n            case 0:\n              message.jstype = 0;\n              break;\n\n            case \"JS_STRING\":\n            case 1:\n              message.jstype = 1;\n              break;\n\n            case \"JS_NUMBER\":\n            case 2:\n              message.jstype = 2;\n              break;\n          }\n\n          if (object.lazy != null) message.lazy = Boolean(object.lazy);\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n          if (object.weak != null) message.weak = Boolean(object.weak);\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.FieldOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.FieldOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          if (object[\".google.api.fieldBehavior\"]) {\n            if (!Array.isArray(object[\".google.api.fieldBehavior\"])) throw TypeError(\".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected\");\n            message[\".google.api.fieldBehavior\"] = [];\n\n            for (var i = 0; i < object[\".google.api.fieldBehavior\"].length; ++i) {\n              switch (object[\".google.api.fieldBehavior\"][i]) {\n                default:\n                case \"FIELD_BEHAVIOR_UNSPECIFIED\":\n                case 0:\n                  message[\".google.api.fieldBehavior\"][i] = 0;\n                  break;\n\n                case \"OPTIONAL\":\n                case 1:\n                  message[\".google.api.fieldBehavior\"][i] = 1;\n                  break;\n\n                case \"REQUIRED\":\n                case 2:\n                  message[\".google.api.fieldBehavior\"][i] = 2;\n                  break;\n\n                case \"OUTPUT_ONLY\":\n                case 3:\n                  message[\".google.api.fieldBehavior\"][i] = 3;\n                  break;\n\n                case \"INPUT_ONLY\":\n                case 4:\n                  message[\".google.api.fieldBehavior\"][i] = 4;\n                  break;\n\n                case \"IMMUTABLE\":\n                case 5:\n                  message[\".google.api.fieldBehavior\"][i] = 5;\n                  break;\n\n                case \"UNORDERED_LIST\":\n                case 6:\n                  message[\".google.api.fieldBehavior\"][i] = 6;\n                  break;\n\n                case \"NON_EMPTY_DEFAULT\":\n                case 7:\n                  message[\".google.api.fieldBehavior\"][i] = 7;\n                  break;\n              }\n            }\n          }\n\n          if (object[\".google.api.resourceReference\"] != null) {\n            if (typeof object[\".google.api.resourceReference\"] !== \"object\") throw TypeError(\".google.protobuf.FieldOptions..google.api.resourceReference: object expected\");\n            message[\".google.api.resourceReference\"] = $root.google.api.ResourceReference.fromObject(object[\".google.api.resourceReference\"]);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.FieldOptions\n         * @static\n         * @param {google.protobuf.FieldOptions} message FieldOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        FieldOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.arrays || options.defaults) {\n            object.uninterpretedOption = [];\n            object[\".google.api.fieldBehavior\"] = [];\n          }\n\n          if (options.defaults) {\n            object.ctype = options.enums === String ? \"STRING\" : 0;\n            object.packed = false;\n            object.deprecated = false;\n            object.lazy = false;\n            object.jstype = options.enums === String ? \"JS_NORMAL\" : 0;\n            object.weak = false;\n            object[\".google.api.resourceReference\"] = null;\n          }\n\n          if (message.ctype != null && message.hasOwnProperty(\"ctype\")) object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;\n          if (message.packed != null && message.hasOwnProperty(\"packed\")) object.packed = message.packed;\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n          if (message.lazy != null && message.hasOwnProperty(\"lazy\")) object.lazy = message.lazy;\n          if (message.jstype != null && message.hasOwnProperty(\"jstype\")) object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;\n          if (message.weak != null && message.hasOwnProperty(\"weak\")) object.weak = message.weak;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) {\n              object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n            }\n          }\n\n          if (message[\".google.api.fieldBehavior\"] && message[\".google.api.fieldBehavior\"].length) {\n            object[\".google.api.fieldBehavior\"] = [];\n\n            for (var j = 0; j < message[\".google.api.fieldBehavior\"].length; ++j) {\n              object[\".google.api.fieldBehavior\"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[\".google.api.fieldBehavior\"][j]] : message[\".google.api.fieldBehavior\"][j];\n            }\n          }\n\n          if (message[\".google.api.resourceReference\"] != null && message.hasOwnProperty(\".google.api.resourceReference\")) object[\".google.api.resourceReference\"] = $root.google.api.ResourceReference.toObject(message[\".google.api.resourceReference\"], options);\n          return object;\n        };\n        /**\n         * Converts this FieldOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.FieldOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        FieldOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n        /**\n         * CType enum.\n         * @name google.protobuf.FieldOptions.CType\n         * @enum {string}\n         * @property {string} STRING=STRING STRING value\n         * @property {string} CORD=CORD CORD value\n         * @property {string} STRING_PIECE=STRING_PIECE STRING_PIECE value\n         */\n\n\n        FieldOptions.CType = function () {\n          var valuesById = {},\n              values = Object.create(valuesById);\n          values[valuesById[0] = \"STRING\"] = \"STRING\";\n          values[valuesById[1] = \"CORD\"] = \"CORD\";\n          values[valuesById[2] = \"STRING_PIECE\"] = \"STRING_PIECE\";\n          return values;\n        }();\n        /**\n         * JSType enum.\n         * @name google.protobuf.FieldOptions.JSType\n         * @enum {string}\n         * @property {string} JS_NORMAL=JS_NORMAL JS_NORMAL value\n         * @property {string} JS_STRING=JS_STRING JS_STRING value\n         * @property {string} JS_NUMBER=JS_NUMBER JS_NUMBER value\n         */\n\n\n        FieldOptions.JSType = function () {\n          var valuesById = {},\n              values = Object.create(valuesById);\n          values[valuesById[0] = \"JS_NORMAL\"] = \"JS_NORMAL\";\n          values[valuesById[1] = \"JS_STRING\"] = \"JS_STRING\";\n          values[valuesById[2] = \"JS_NUMBER\"] = \"JS_NUMBER\";\n          return values;\n        }();\n\n        return FieldOptions;\n      }();\n\n      protobuf.OneofOptions = function () {\n        /**\n         * Properties of an OneofOptions.\n         * @memberof google.protobuf\n         * @interface IOneofOptions\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption\n         */\n\n        /**\n         * Constructs a new OneofOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents an OneofOptions.\n         * @implements IOneofOptions\n         * @constructor\n         * @param {google.protobuf.IOneofOptions=} [properties] Properties to set\n         */\n        function OneofOptions(properties) {\n          this.uninterpretedOption = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * OneofOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.OneofOptions\n         * @instance\n         */\n\n\n        OneofOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.OneofOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.OneofOptions} OneofOptions\n         */\n\n        OneofOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.OneofOptions) return object;\n          var message = new $root.google.protobuf.OneofOptions();\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.OneofOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.OneofOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.OneofOptions\n         * @static\n         * @param {google.protobuf.OneofOptions} message OneofOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        OneofOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.uninterpretedOption = [];\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) {\n              object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this OneofOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.OneofOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        OneofOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OneofOptions;\n      }();\n\n      protobuf.EnumOptions = function () {\n        /**\n         * Properties of an EnumOptions.\n         * @memberof google.protobuf\n         * @interface IEnumOptions\n         * @property {boolean|null} [allowAlias] EnumOptions allowAlias\n         * @property {boolean|null} [deprecated] EnumOptions deprecated\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption\n         */\n\n        /**\n         * Constructs a new EnumOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents an EnumOptions.\n         * @implements IEnumOptions\n         * @constructor\n         * @param {google.protobuf.IEnumOptions=} [properties] Properties to set\n         */\n        function EnumOptions(properties) {\n          this.uninterpretedOption = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * EnumOptions allowAlias.\n         * @member {boolean} allowAlias\n         * @memberof google.protobuf.EnumOptions\n         * @instance\n         */\n\n\n        EnumOptions.prototype.allowAlias = false;\n        /**\n         * EnumOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.EnumOptions\n         * @instance\n         */\n\n        EnumOptions.prototype.deprecated = false;\n        /**\n         * EnumOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.EnumOptions\n         * @instance\n         */\n\n        EnumOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.EnumOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.EnumOptions} EnumOptions\n         */\n\n        EnumOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.EnumOptions) return object;\n          var message = new $root.google.protobuf.EnumOptions();\n          if (object.allowAlias != null) message.allowAlias = Boolean(object.allowAlias);\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.EnumOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.EnumOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.EnumOptions\n         * @static\n         * @param {google.protobuf.EnumOptions} message EnumOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        EnumOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.uninterpretedOption = [];\n\n          if (options.defaults) {\n            object.allowAlias = false;\n            object.deprecated = false;\n          }\n\n          if (message.allowAlias != null && message.hasOwnProperty(\"allowAlias\")) object.allowAlias = message.allowAlias;\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) {\n              object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this EnumOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.EnumOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        EnumOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return EnumOptions;\n      }();\n\n      protobuf.EnumValueOptions = function () {\n        /**\n         * Properties of an EnumValueOptions.\n         * @memberof google.protobuf\n         * @interface IEnumValueOptions\n         * @property {boolean|null} [deprecated] EnumValueOptions deprecated\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption\n         */\n\n        /**\n         * Constructs a new EnumValueOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents an EnumValueOptions.\n         * @implements IEnumValueOptions\n         * @constructor\n         * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set\n         */\n        function EnumValueOptions(properties) {\n          this.uninterpretedOption = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * EnumValueOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.EnumValueOptions\n         * @instance\n         */\n\n\n        EnumValueOptions.prototype.deprecated = false;\n        /**\n         * EnumValueOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.EnumValueOptions\n         * @instance\n         */\n\n        EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.EnumValueOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.EnumValueOptions} EnumValueOptions\n         */\n\n        EnumValueOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.EnumValueOptions) return object;\n          var message = new $root.google.protobuf.EnumValueOptions();\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.EnumValueOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.EnumValueOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.EnumValueOptions\n         * @static\n         * @param {google.protobuf.EnumValueOptions} message EnumValueOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        EnumValueOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.uninterpretedOption = [];\n          if (options.defaults) object.deprecated = false;\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) {\n              object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this EnumValueOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.EnumValueOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        EnumValueOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return EnumValueOptions;\n      }();\n\n      protobuf.ServiceOptions = function () {\n        /**\n         * Properties of a ServiceOptions.\n         * @memberof google.protobuf\n         * @interface IServiceOptions\n         * @property {boolean|null} [deprecated] ServiceOptions deprecated\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption\n         * @property {string|null} [\".google.api.defaultHost\"] ServiceOptions .google.api.defaultHost\n         * @property {string|null} [\".google.api.oauthScopes\"] ServiceOptions .google.api.oauthScopes\n         */\n\n        /**\n         * Constructs a new ServiceOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents a ServiceOptions.\n         * @implements IServiceOptions\n         * @constructor\n         * @param {google.protobuf.IServiceOptions=} [properties] Properties to set\n         */\n        function ServiceOptions(properties) {\n          this.uninterpretedOption = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * ServiceOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.ServiceOptions\n         * @instance\n         */\n\n\n        ServiceOptions.prototype.deprecated = false;\n        /**\n         * ServiceOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.ServiceOptions\n         * @instance\n         */\n\n        ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * ServiceOptions .google.api.defaultHost.\n         * @member {string} .google.api.defaultHost\n         * @memberof google.protobuf.ServiceOptions\n         * @instance\n         */\n\n        ServiceOptions.prototype[\".google.api.defaultHost\"] = \"\";\n        /**\n         * ServiceOptions .google.api.oauthScopes.\n         * @member {string} .google.api.oauthScopes\n         * @memberof google.protobuf.ServiceOptions\n         * @instance\n         */\n\n        ServiceOptions.prototype[\".google.api.oauthScopes\"] = \"\";\n        /**\n         * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.ServiceOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.ServiceOptions} ServiceOptions\n         */\n\n        ServiceOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.ServiceOptions) return object;\n          var message = new $root.google.protobuf.ServiceOptions();\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.ServiceOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.ServiceOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          if (object[\".google.api.defaultHost\"] != null) message[\".google.api.defaultHost\"] = String(object[\".google.api.defaultHost\"]);\n          if (object[\".google.api.oauthScopes\"] != null) message[\".google.api.oauthScopes\"] = String(object[\".google.api.oauthScopes\"]);\n          return message;\n        };\n        /**\n         * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.ServiceOptions\n         * @static\n         * @param {google.protobuf.ServiceOptions} message ServiceOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        ServiceOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.uninterpretedOption = [];\n\n          if (options.defaults) {\n            object.deprecated = false;\n            object[\".google.api.defaultHost\"] = \"\";\n            object[\".google.api.oauthScopes\"] = \"\";\n          }\n\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) {\n              object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n            }\n          }\n\n          if (message[\".google.api.defaultHost\"] != null && message.hasOwnProperty(\".google.api.defaultHost\")) object[\".google.api.defaultHost\"] = message[\".google.api.defaultHost\"];\n          if (message[\".google.api.oauthScopes\"] != null && message.hasOwnProperty(\".google.api.oauthScopes\")) object[\".google.api.oauthScopes\"] = message[\".google.api.oauthScopes\"];\n          return object;\n        };\n        /**\n         * Converts this ServiceOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.ServiceOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        ServiceOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ServiceOptions;\n      }();\n\n      protobuf.MethodOptions = function () {\n        /**\n         * Properties of a MethodOptions.\n         * @memberof google.protobuf\n         * @interface IMethodOptions\n         * @property {boolean|null} [deprecated] MethodOptions deprecated\n         * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption\n         * @property {google.api.IHttpRule|null} [\".google.api.http\"] MethodOptions .google.api.http\n         * @property {Array.<string>|null} [\".google.api.methodSignature\"] MethodOptions .google.api.methodSignature\n         * @property {google.longrunning.IOperationInfo|null} [\".google.longrunning.operationInfo\"] MethodOptions .google.longrunning.operationInfo\n         */\n\n        /**\n         * Constructs a new MethodOptions.\n         * @memberof google.protobuf\n         * @classdesc Represents a MethodOptions.\n         * @implements IMethodOptions\n         * @constructor\n         * @param {google.protobuf.IMethodOptions=} [properties] Properties to set\n         */\n        function MethodOptions(properties) {\n          this.uninterpretedOption = [];\n          this[\".google.api.methodSignature\"] = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * MethodOptions deprecated.\n         * @member {boolean} deprecated\n         * @memberof google.protobuf.MethodOptions\n         * @instance\n         */\n\n\n        MethodOptions.prototype.deprecated = false;\n        /**\n         * MethodOptions uninterpretedOption.\n         * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption\n         * @memberof google.protobuf.MethodOptions\n         * @instance\n         */\n\n        MethodOptions.prototype.uninterpretedOption = $util.emptyArray;\n        /**\n         * MethodOptions .google.api.http.\n         * @member {google.api.IHttpRule|null|undefined} .google.api.http\n         * @memberof google.protobuf.MethodOptions\n         * @instance\n         */\n\n        MethodOptions.prototype[\".google.api.http\"] = null;\n        /**\n         * MethodOptions .google.api.methodSignature.\n         * @member {Array.<string>} .google.api.methodSignature\n         * @memberof google.protobuf.MethodOptions\n         * @instance\n         */\n\n        MethodOptions.prototype[\".google.api.methodSignature\"] = $util.emptyArray;\n        /**\n         * MethodOptions .google.longrunning.operationInfo.\n         * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo\n         * @memberof google.protobuf.MethodOptions\n         * @instance\n         */\n\n        MethodOptions.prototype[\".google.longrunning.operationInfo\"] = null;\n        /**\n         * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.MethodOptions\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.MethodOptions} MethodOptions\n         */\n\n        MethodOptions.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.MethodOptions) return object;\n          var message = new $root.google.protobuf.MethodOptions();\n          if (object.deprecated != null) message.deprecated = Boolean(object.deprecated);\n\n          if (object.uninterpretedOption) {\n            if (!Array.isArray(object.uninterpretedOption)) throw TypeError(\".google.protobuf.MethodOptions.uninterpretedOption: array expected\");\n            message.uninterpretedOption = [];\n\n            for (var i = 0; i < object.uninterpretedOption.length; ++i) {\n              if (typeof object.uninterpretedOption[i] !== \"object\") throw TypeError(\".google.protobuf.MethodOptions.uninterpretedOption: object expected\");\n              message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);\n            }\n          }\n\n          if (object[\".google.api.http\"] != null) {\n            if (typeof object[\".google.api.http\"] !== \"object\") throw TypeError(\".google.protobuf.MethodOptions..google.api.http: object expected\");\n            message[\".google.api.http\"] = $root.google.api.HttpRule.fromObject(object[\".google.api.http\"]);\n          }\n\n          if (object[\".google.api.methodSignature\"]) {\n            if (!Array.isArray(object[\".google.api.methodSignature\"])) throw TypeError(\".google.protobuf.MethodOptions..google.api.methodSignature: array expected\");\n            message[\".google.api.methodSignature\"] = [];\n\n            for (var i = 0; i < object[\".google.api.methodSignature\"].length; ++i) {\n              message[\".google.api.methodSignature\"][i] = String(object[\".google.api.methodSignature\"][i]);\n            }\n          }\n\n          if (object[\".google.longrunning.operationInfo\"] != null) {\n            if (typeof object[\".google.longrunning.operationInfo\"] !== \"object\") throw TypeError(\".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected\");\n            message[\".google.longrunning.operationInfo\"] = $root.google.longrunning.OperationInfo.fromObject(object[\".google.longrunning.operationInfo\"]);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.MethodOptions\n         * @static\n         * @param {google.protobuf.MethodOptions} message MethodOptions\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        MethodOptions.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.arrays || options.defaults) {\n            object.uninterpretedOption = [];\n            object[\".google.api.methodSignature\"] = [];\n          }\n\n          if (options.defaults) {\n            object.deprecated = false;\n            object[\".google.longrunning.operationInfo\"] = null;\n            object[\".google.api.http\"] = null;\n          }\n\n          if (message.deprecated != null && message.hasOwnProperty(\"deprecated\")) object.deprecated = message.deprecated;\n\n          if (message.uninterpretedOption && message.uninterpretedOption.length) {\n            object.uninterpretedOption = [];\n\n            for (var j = 0; j < message.uninterpretedOption.length; ++j) {\n              object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);\n            }\n          }\n\n          if (message[\".google.longrunning.operationInfo\"] != null && message.hasOwnProperty(\".google.longrunning.operationInfo\")) object[\".google.longrunning.operationInfo\"] = $root.google.longrunning.OperationInfo.toObject(message[\".google.longrunning.operationInfo\"], options);\n\n          if (message[\".google.api.methodSignature\"] && message[\".google.api.methodSignature\"].length) {\n            object[\".google.api.methodSignature\"] = [];\n\n            for (var j = 0; j < message[\".google.api.methodSignature\"].length; ++j) {\n              object[\".google.api.methodSignature\"][j] = message[\".google.api.methodSignature\"][j];\n            }\n          }\n\n          if (message[\".google.api.http\"] != null && message.hasOwnProperty(\".google.api.http\")) object[\".google.api.http\"] = $root.google.api.HttpRule.toObject(message[\".google.api.http\"], options);\n          return object;\n        };\n        /**\n         * Converts this MethodOptions to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.MethodOptions\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        MethodOptions.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return MethodOptions;\n      }();\n\n      protobuf.UninterpretedOption = function () {\n        /**\n         * Properties of an UninterpretedOption.\n         * @memberof google.protobuf\n         * @interface IUninterpretedOption\n         * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name\n         * @property {string|null} [identifierValue] UninterpretedOption identifierValue\n         * @property {number|string|null} [positiveIntValue] UninterpretedOption positiveIntValue\n         * @property {number|string|null} [negativeIntValue] UninterpretedOption negativeIntValue\n         * @property {number|null} [doubleValue] UninterpretedOption doubleValue\n         * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue\n         * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue\n         */\n\n        /**\n         * Constructs a new UninterpretedOption.\n         * @memberof google.protobuf\n         * @classdesc Represents an UninterpretedOption.\n         * @implements IUninterpretedOption\n         * @constructor\n         * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set\n         */\n        function UninterpretedOption(properties) {\n          this.name = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * UninterpretedOption name.\n         * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n\n        UninterpretedOption.prototype.name = $util.emptyArray;\n        /**\n         * UninterpretedOption identifierValue.\n         * @member {string} identifierValue\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n        UninterpretedOption.prototype.identifierValue = \"\";\n        /**\n         * UninterpretedOption positiveIntValue.\n         * @member {number|string} positiveIntValue\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n        UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n        /**\n         * UninterpretedOption negativeIntValue.\n         * @member {number|string} negativeIntValue\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n        UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n        /**\n         * UninterpretedOption doubleValue.\n         * @member {number} doubleValue\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n        UninterpretedOption.prototype.doubleValue = 0;\n        /**\n         * UninterpretedOption stringValue.\n         * @member {Uint8Array} stringValue\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n        UninterpretedOption.prototype.stringValue = $util.newBuffer([]);\n        /**\n         * UninterpretedOption aggregateValue.\n         * @member {string} aggregateValue\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         */\n\n        UninterpretedOption.prototype.aggregateValue = \"\";\n        /**\n         * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.UninterpretedOption\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.UninterpretedOption} UninterpretedOption\n         */\n\n        UninterpretedOption.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.UninterpretedOption) return object;\n          var message = new $root.google.protobuf.UninterpretedOption();\n\n          if (object.name) {\n            if (!Array.isArray(object.name)) throw TypeError(\".google.protobuf.UninterpretedOption.name: array expected\");\n            message.name = [];\n\n            for (var i = 0; i < object.name.length; ++i) {\n              if (typeof object.name[i] !== \"object\") throw TypeError(\".google.protobuf.UninterpretedOption.name: object expected\");\n              message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);\n            }\n          }\n\n          if (object.identifierValue != null) message.identifierValue = String(object.identifierValue);\n          if (object.positiveIntValue != null) if ($util.Long) (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;else if (typeof object.positiveIntValue === \"string\") message.positiveIntValue = parseInt(object.positiveIntValue, 10);else if (typeof object.positiveIntValue === \"number\") message.positiveIntValue = object.positiveIntValue;else if (typeof object.positiveIntValue === \"object\") message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);\n          if (object.negativeIntValue != null) if ($util.Long) (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;else if (typeof object.negativeIntValue === \"string\") message.negativeIntValue = parseInt(object.negativeIntValue, 10);else if (typeof object.negativeIntValue === \"number\") message.negativeIntValue = object.negativeIntValue;else if (typeof object.negativeIntValue === \"object\") message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();\n          if (object.doubleValue != null) message.doubleValue = Number(object.doubleValue);\n          if (object.stringValue != null) if (typeof object.stringValue === \"string\") $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);else if (object.stringValue.length) message.stringValue = object.stringValue;\n          if (object.aggregateValue != null) message.aggregateValue = String(object.aggregateValue);\n          return message;\n        };\n        /**\n         * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.UninterpretedOption\n         * @static\n         * @param {google.protobuf.UninterpretedOption} message UninterpretedOption\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        UninterpretedOption.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.name = [];\n\n          if (options.defaults) {\n            object.identifierValue = \"\";\n\n            if ($util.Long) {\n              var long = new $util.Long(0, 0, true);\n              object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else object.positiveIntValue = options.longs === String ? \"0\" : 0;\n\n            if ($util.Long) {\n              var long = new $util.Long(0, 0, false);\n              object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else object.negativeIntValue = options.longs === String ? \"0\" : 0;\n\n            object.doubleValue = 0;\n            if (options.bytes === String) object.stringValue = \"\";else {\n              object.stringValue = [];\n              if (options.bytes !== Array) object.stringValue = $util.newBuffer(object.stringValue);\n            }\n            object.aggregateValue = \"\";\n          }\n\n          if (message.name && message.name.length) {\n            object.name = [];\n\n            for (var j = 0; j < message.name.length; ++j) {\n              object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);\n            }\n          }\n\n          if (message.identifierValue != null && message.hasOwnProperty(\"identifierValue\")) object.identifierValue = message.identifierValue;\n          if (message.positiveIntValue != null && message.hasOwnProperty(\"positiveIntValue\")) if (typeof message.positiveIntValue === \"number\") object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;else object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;\n          if (message.negativeIntValue != null && message.hasOwnProperty(\"negativeIntValue\")) if (typeof message.negativeIntValue === \"number\") object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;else object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;\n          if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\")) object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n          if (message.stringValue != null && message.hasOwnProperty(\"stringValue\")) object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;\n          if (message.aggregateValue != null && message.hasOwnProperty(\"aggregateValue\")) object.aggregateValue = message.aggregateValue;\n          return object;\n        };\n        /**\n         * Converts this UninterpretedOption to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.UninterpretedOption\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        UninterpretedOption.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        UninterpretedOption.NamePart = function () {\n          /**\n           * Properties of a NamePart.\n           * @memberof google.protobuf.UninterpretedOption\n           * @interface INamePart\n           * @property {string} namePart NamePart namePart\n           * @property {boolean} isExtension NamePart isExtension\n           */\n\n          /**\n           * Constructs a new NamePart.\n           * @memberof google.protobuf.UninterpretedOption\n           * @classdesc Represents a NamePart.\n           * @implements INamePart\n           * @constructor\n           * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set\n           */\n          function NamePart(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * NamePart namePart.\n           * @member {string} namePart\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @instance\n           */\n\n\n          NamePart.prototype.namePart = \"\";\n          /**\n           * NamePart isExtension.\n           * @member {boolean} isExtension\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @instance\n           */\n\n          NamePart.prototype.isExtension = false;\n          /**\n           * Creates a NamePart message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart\n           */\n\n          NamePart.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart) return object;\n            var message = new $root.google.protobuf.UninterpretedOption.NamePart();\n            if (object.namePart != null) message.namePart = String(object.namePart);\n            if (object.isExtension != null) message.isExtension = Boolean(object.isExtension);\n            return message;\n          };\n          /**\n           * Creates a plain object from a NamePart message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @static\n           * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          NamePart.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.namePart = \"\";\n              object.isExtension = false;\n            }\n\n            if (message.namePart != null && message.hasOwnProperty(\"namePart\")) object.namePart = message.namePart;\n            if (message.isExtension != null && message.hasOwnProperty(\"isExtension\")) object.isExtension = message.isExtension;\n            return object;\n          };\n          /**\n           * Converts this NamePart to JSON.\n           * @function toJSON\n           * @memberof google.protobuf.UninterpretedOption.NamePart\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          NamePart.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return NamePart;\n        }();\n\n        return UninterpretedOption;\n      }();\n\n      protobuf.SourceCodeInfo = function () {\n        /**\n         * Properties of a SourceCodeInfo.\n         * @memberof google.protobuf\n         * @interface ISourceCodeInfo\n         * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location\n         */\n\n        /**\n         * Constructs a new SourceCodeInfo.\n         * @memberof google.protobuf\n         * @classdesc Represents a SourceCodeInfo.\n         * @implements ISourceCodeInfo\n         * @constructor\n         * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set\n         */\n        function SourceCodeInfo(properties) {\n          this.location = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * SourceCodeInfo location.\n         * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location\n         * @memberof google.protobuf.SourceCodeInfo\n         * @instance\n         */\n\n\n        SourceCodeInfo.prototype.location = $util.emptyArray;\n        /**\n         * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.SourceCodeInfo\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo\n         */\n\n        SourceCodeInfo.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.SourceCodeInfo) return object;\n          var message = new $root.google.protobuf.SourceCodeInfo();\n\n          if (object.location) {\n            if (!Array.isArray(object.location)) throw TypeError(\".google.protobuf.SourceCodeInfo.location: array expected\");\n            message.location = [];\n\n            for (var i = 0; i < object.location.length; ++i) {\n              if (typeof object.location[i] !== \"object\") throw TypeError(\".google.protobuf.SourceCodeInfo.location: object expected\");\n              message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.SourceCodeInfo\n         * @static\n         * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        SourceCodeInfo.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.location = [];\n\n          if (message.location && message.location.length) {\n            object.location = [];\n\n            for (var j = 0; j < message.location.length; ++j) {\n              object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this SourceCodeInfo to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.SourceCodeInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        SourceCodeInfo.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        SourceCodeInfo.Location = function () {\n          /**\n           * Properties of a Location.\n           * @memberof google.protobuf.SourceCodeInfo\n           * @interface ILocation\n           * @property {Array.<number>|null} [path] Location path\n           * @property {Array.<number>|null} [span] Location span\n           * @property {string|null} [leadingComments] Location leadingComments\n           * @property {string|null} [trailingComments] Location trailingComments\n           * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments\n           */\n\n          /**\n           * Constructs a new Location.\n           * @memberof google.protobuf.SourceCodeInfo\n           * @classdesc Represents a Location.\n           * @implements ILocation\n           * @constructor\n           * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set\n           */\n          function Location(properties) {\n            this.path = [];\n            this.span = [];\n            this.leadingDetachedComments = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * Location path.\n           * @member {Array.<number>} path\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @instance\n           */\n\n\n          Location.prototype.path = $util.emptyArray;\n          /**\n           * Location span.\n           * @member {Array.<number>} span\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @instance\n           */\n\n          Location.prototype.span = $util.emptyArray;\n          /**\n           * Location leadingComments.\n           * @member {string} leadingComments\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @instance\n           */\n\n          Location.prototype.leadingComments = \"\";\n          /**\n           * Location trailingComments.\n           * @member {string} trailingComments\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @instance\n           */\n\n          Location.prototype.trailingComments = \"\";\n          /**\n           * Location leadingDetachedComments.\n           * @member {Array.<string>} leadingDetachedComments\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @instance\n           */\n\n          Location.prototype.leadingDetachedComments = $util.emptyArray;\n          /**\n           * Creates a Location message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.protobuf.SourceCodeInfo.Location} Location\n           */\n\n          Location.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.protobuf.SourceCodeInfo.Location) return object;\n            var message = new $root.google.protobuf.SourceCodeInfo.Location();\n\n            if (object.path) {\n              if (!Array.isArray(object.path)) throw TypeError(\".google.protobuf.SourceCodeInfo.Location.path: array expected\");\n              message.path = [];\n\n              for (var i = 0; i < object.path.length; ++i) {\n                message.path[i] = object.path[i] | 0;\n              }\n            }\n\n            if (object.span) {\n              if (!Array.isArray(object.span)) throw TypeError(\".google.protobuf.SourceCodeInfo.Location.span: array expected\");\n              message.span = [];\n\n              for (var i = 0; i < object.span.length; ++i) {\n                message.span[i] = object.span[i] | 0;\n              }\n            }\n\n            if (object.leadingComments != null) message.leadingComments = String(object.leadingComments);\n            if (object.trailingComments != null) message.trailingComments = String(object.trailingComments);\n\n            if (object.leadingDetachedComments) {\n              if (!Array.isArray(object.leadingDetachedComments)) throw TypeError(\".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected\");\n              message.leadingDetachedComments = [];\n\n              for (var i = 0; i < object.leadingDetachedComments.length; ++i) {\n                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a Location message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @static\n           * @param {google.protobuf.SourceCodeInfo.Location} message Location\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          Location.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.arrays || options.defaults) {\n              object.path = [];\n              object.span = [];\n              object.leadingDetachedComments = [];\n            }\n\n            if (options.defaults) {\n              object.leadingComments = \"\";\n              object.trailingComments = \"\";\n            }\n\n            if (message.path && message.path.length) {\n              object.path = [];\n\n              for (var j = 0; j < message.path.length; ++j) {\n                object.path[j] = message.path[j];\n              }\n            }\n\n            if (message.span && message.span.length) {\n              object.span = [];\n\n              for (var j = 0; j < message.span.length; ++j) {\n                object.span[j] = message.span[j];\n              }\n            }\n\n            if (message.leadingComments != null && message.hasOwnProperty(\"leadingComments\")) object.leadingComments = message.leadingComments;\n            if (message.trailingComments != null && message.hasOwnProperty(\"trailingComments\")) object.trailingComments = message.trailingComments;\n\n            if (message.leadingDetachedComments && message.leadingDetachedComments.length) {\n              object.leadingDetachedComments = [];\n\n              for (var j = 0; j < message.leadingDetachedComments.length; ++j) {\n                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];\n              }\n            }\n\n            return object;\n          };\n          /**\n           * Converts this Location to JSON.\n           * @function toJSON\n           * @memberof google.protobuf.SourceCodeInfo.Location\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          Location.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return Location;\n        }();\n\n        return SourceCodeInfo;\n      }();\n\n      protobuf.GeneratedCodeInfo = function () {\n        /**\n         * Properties of a GeneratedCodeInfo.\n         * @memberof google.protobuf\n         * @interface IGeneratedCodeInfo\n         * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation\n         */\n\n        /**\n         * Constructs a new GeneratedCodeInfo.\n         * @memberof google.protobuf\n         * @classdesc Represents a GeneratedCodeInfo.\n         * @implements IGeneratedCodeInfo\n         * @constructor\n         * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set\n         */\n        function GeneratedCodeInfo(properties) {\n          this.annotation = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * GeneratedCodeInfo annotation.\n         * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @instance\n         */\n\n\n        GeneratedCodeInfo.prototype.annotation = $util.emptyArray;\n        /**\n         * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo\n         */\n\n        GeneratedCodeInfo.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.GeneratedCodeInfo) return object;\n          var message = new $root.google.protobuf.GeneratedCodeInfo();\n\n          if (object.annotation) {\n            if (!Array.isArray(object.annotation)) throw TypeError(\".google.protobuf.GeneratedCodeInfo.annotation: array expected\");\n            message.annotation = [];\n\n            for (var i = 0; i < object.annotation.length; ++i) {\n              if (typeof object.annotation[i] !== \"object\") throw TypeError(\".google.protobuf.GeneratedCodeInfo.annotation: object expected\");\n              message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @static\n         * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        GeneratedCodeInfo.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.annotation = [];\n\n          if (message.annotation && message.annotation.length) {\n            object.annotation = [];\n\n            for (var j = 0; j < message.annotation.length; ++j) {\n              object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this GeneratedCodeInfo to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.GeneratedCodeInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        GeneratedCodeInfo.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        GeneratedCodeInfo.Annotation = function () {\n          /**\n           * Properties of an Annotation.\n           * @memberof google.protobuf.GeneratedCodeInfo\n           * @interface IAnnotation\n           * @property {Array.<number>|null} [path] Annotation path\n           * @property {string|null} [sourceFile] Annotation sourceFile\n           * @property {number|null} [begin] Annotation begin\n           * @property {number|null} [end] Annotation end\n           */\n\n          /**\n           * Constructs a new Annotation.\n           * @memberof google.protobuf.GeneratedCodeInfo\n           * @classdesc Represents an Annotation.\n           * @implements IAnnotation\n           * @constructor\n           * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set\n           */\n          function Annotation(properties) {\n            this.path = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * Annotation path.\n           * @member {Array.<number>} path\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @instance\n           */\n\n\n          Annotation.prototype.path = $util.emptyArray;\n          /**\n           * Annotation sourceFile.\n           * @member {string} sourceFile\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @instance\n           */\n\n          Annotation.prototype.sourceFile = \"\";\n          /**\n           * Annotation begin.\n           * @member {number} begin\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @instance\n           */\n\n          Annotation.prototype.begin = 0;\n          /**\n           * Annotation end.\n           * @member {number} end\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @instance\n           */\n\n          Annotation.prototype.end = 0;\n          /**\n           * Creates an Annotation message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation\n           */\n\n          Annotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation) return object;\n            var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();\n\n            if (object.path) {\n              if (!Array.isArray(object.path)) throw TypeError(\".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected\");\n              message.path = [];\n\n              for (var i = 0; i < object.path.length; ++i) {\n                message.path[i] = object.path[i] | 0;\n              }\n            }\n\n            if (object.sourceFile != null) message.sourceFile = String(object.sourceFile);\n            if (object.begin != null) message.begin = object.begin | 0;\n            if (object.end != null) message.end = object.end | 0;\n            return message;\n          };\n          /**\n           * Creates a plain object from an Annotation message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @static\n           * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          Annotation.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.path = [];\n\n            if (options.defaults) {\n              object.sourceFile = \"\";\n              object.begin = 0;\n              object.end = 0;\n            }\n\n            if (message.path && message.path.length) {\n              object.path = [];\n\n              for (var j = 0; j < message.path.length; ++j) {\n                object.path[j] = message.path[j];\n              }\n            }\n\n            if (message.sourceFile != null && message.hasOwnProperty(\"sourceFile\")) object.sourceFile = message.sourceFile;\n            if (message.begin != null && message.hasOwnProperty(\"begin\")) object.begin = message.begin;\n            if (message.end != null && message.hasOwnProperty(\"end\")) object.end = message.end;\n            return object;\n          };\n          /**\n           * Converts this Annotation to JSON.\n           * @function toJSON\n           * @memberof google.protobuf.GeneratedCodeInfo.Annotation\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          Annotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return Annotation;\n        }();\n\n        return GeneratedCodeInfo;\n      }();\n\n      protobuf.Struct = function () {\n        /**\n         * Properties of a Struct.\n         * @memberof google.protobuf\n         * @interface IStruct\n         * @property {Object.<string,google.protobuf.IValue>|null} [fields] Struct fields\n         */\n\n        /**\n         * Constructs a new Struct.\n         * @memberof google.protobuf\n         * @classdesc Represents a Struct.\n         * @implements IStruct\n         * @constructor\n         * @param {google.protobuf.IStruct=} [properties] Properties to set\n         */\n        function Struct(properties) {\n          this.fields = {};\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * Struct fields.\n         * @member {Object.<string,google.protobuf.IValue>} fields\n         * @memberof google.protobuf.Struct\n         * @instance\n         */\n\n\n        Struct.prototype.fields = $util.emptyObject;\n        /**\n         * Creates a Struct message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.Struct\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.Struct} Struct\n         */\n\n        Struct.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.Struct) return object;\n          var message = new $root.google.protobuf.Struct();\n\n          if (object.fields) {\n            if (typeof object.fields !== \"object\") throw TypeError(\".google.protobuf.Struct.fields: object expected\");\n            message.fields = {};\n\n            for (var keys = Object.keys(object.fields), i = 0; i < keys.length; ++i) {\n              if (typeof object.fields[keys[i]] !== \"object\") throw TypeError(\".google.protobuf.Struct.fields: object expected\");\n              message.fields[keys[i]] = $root.google.protobuf.Value.fromObject(object.fields[keys[i]]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a Struct message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.Struct\n         * @static\n         * @param {google.protobuf.Struct} message Struct\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        Struct.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.objects || options.defaults) object.fields = {};\n          var keys2;\n\n          if (message.fields && (keys2 = Object.keys(message.fields)).length) {\n            object.fields = {};\n\n            for (var j = 0; j < keys2.length; ++j) {\n              object.fields[keys2[j]] = $root.google.protobuf.Value.toObject(message.fields[keys2[j]], options);\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this Struct to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.Struct\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        Struct.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Struct;\n      }();\n\n      protobuf.Value = function () {\n        /**\n         * Properties of a Value.\n         * @memberof google.protobuf\n         * @interface IValue\n         * @property {google.protobuf.NullValue|null} [nullValue] Value nullValue\n         * @property {number|null} [numberValue] Value numberValue\n         * @property {string|null} [stringValue] Value stringValue\n         * @property {boolean|null} [boolValue] Value boolValue\n         * @property {google.protobuf.IStruct|null} [structValue] Value structValue\n         * @property {google.protobuf.IListValue|null} [listValue] Value listValue\n         */\n\n        /**\n         * Constructs a new Value.\n         * @memberof google.protobuf\n         * @classdesc Represents a Value.\n         * @implements IValue\n         * @constructor\n         * @param {google.protobuf.IValue=} [properties] Properties to set\n         */\n        function Value(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * Value nullValue.\n         * @member {google.protobuf.NullValue|null|undefined} nullValue\n         * @memberof google.protobuf.Value\n         * @instance\n         */\n\n\n        Value.prototype.nullValue = null;\n        /**\n         * Value numberValue.\n         * @member {number|null|undefined} numberValue\n         * @memberof google.protobuf.Value\n         * @instance\n         */\n\n        Value.prototype.numberValue = null;\n        /**\n         * Value stringValue.\n         * @member {string|null|undefined} stringValue\n         * @memberof google.protobuf.Value\n         * @instance\n         */\n\n        Value.prototype.stringValue = null;\n        /**\n         * Value boolValue.\n         * @member {boolean|null|undefined} boolValue\n         * @memberof google.protobuf.Value\n         * @instance\n         */\n\n        Value.prototype.boolValue = null;\n        /**\n         * Value structValue.\n         * @member {google.protobuf.IStruct|null|undefined} structValue\n         * @memberof google.protobuf.Value\n         * @instance\n         */\n\n        Value.prototype.structValue = null;\n        /**\n         * Value listValue.\n         * @member {google.protobuf.IListValue|null|undefined} listValue\n         * @memberof google.protobuf.Value\n         * @instance\n         */\n\n        Value.prototype.listValue = null; // OneOf field names bound to virtual getters and setters\n\n        var $oneOfFields;\n        /**\n         * Value kind.\n         * @member {\"nullValue\"|\"numberValue\"|\"stringValue\"|\"boolValue\"|\"structValue\"|\"listValue\"|undefined} kind\n         * @memberof google.protobuf.Value\n         * @instance\n         */\n\n        Object.defineProperty(Value.prototype, \"kind\", {\n          get: $util.oneOfGetter($oneOfFields = [\"nullValue\", \"numberValue\", \"stringValue\", \"boolValue\", \"structValue\", \"listValue\"]),\n          set: $util.oneOfSetter($oneOfFields)\n        });\n        /**\n         * Creates a Value message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.Value\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.Value} Value\n         */\n\n        Value.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.Value) return object;\n          var message = new $root.google.protobuf.Value();\n\n          switch (object.nullValue) {\n            case \"NULL_VALUE\":\n            case 0:\n              message.nullValue = 0;\n              break;\n          }\n\n          if (object.numberValue != null) message.numberValue = Number(object.numberValue);\n          if (object.stringValue != null) message.stringValue = String(object.stringValue);\n          if (object.boolValue != null) message.boolValue = Boolean(object.boolValue);\n\n          if (object.structValue != null) {\n            if (typeof object.structValue !== \"object\") throw TypeError(\".google.protobuf.Value.structValue: object expected\");\n            message.structValue = $root.google.protobuf.Struct.fromObject(object.structValue);\n          }\n\n          if (object.listValue != null) {\n            if (typeof object.listValue !== \"object\") throw TypeError(\".google.protobuf.Value.listValue: object expected\");\n            message.listValue = $root.google.protobuf.ListValue.fromObject(object.listValue);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a Value message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.Value\n         * @static\n         * @param {google.protobuf.Value} message Value\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        Value.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (message.nullValue != null && message.hasOwnProperty(\"nullValue\")) {\n            object.nullValue = options.enums === String ? $root.google.protobuf.NullValue[message.nullValue] : message.nullValue;\n            if (options.oneofs) object.kind = \"nullValue\";\n          }\n\n          if (message.numberValue != null && message.hasOwnProperty(\"numberValue\")) {\n            object.numberValue = options.json && !isFinite(message.numberValue) ? String(message.numberValue) : message.numberValue;\n            if (options.oneofs) object.kind = \"numberValue\";\n          }\n\n          if (message.stringValue != null && message.hasOwnProperty(\"stringValue\")) {\n            object.stringValue = message.stringValue;\n            if (options.oneofs) object.kind = \"stringValue\";\n          }\n\n          if (message.boolValue != null && message.hasOwnProperty(\"boolValue\")) {\n            object.boolValue = message.boolValue;\n            if (options.oneofs) object.kind = \"boolValue\";\n          }\n\n          if (message.structValue != null && message.hasOwnProperty(\"structValue\")) {\n            object.structValue = $root.google.protobuf.Struct.toObject(message.structValue, options);\n            if (options.oneofs) object.kind = \"structValue\";\n          }\n\n          if (message.listValue != null && message.hasOwnProperty(\"listValue\")) {\n            object.listValue = $root.google.protobuf.ListValue.toObject(message.listValue, options);\n            if (options.oneofs) object.kind = \"listValue\";\n          }\n\n          return object;\n        };\n        /**\n         * Converts this Value to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.Value\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        Value.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Value;\n      }();\n      /**\n       * NullValue enum.\n       * @name google.protobuf.NullValue\n       * @enum {string}\n       * @property {string} NULL_VALUE=NULL_VALUE NULL_VALUE value\n       */\n\n\n      protobuf.NullValue = function () {\n        var valuesById = {},\n            values = Object.create(valuesById);\n        values[valuesById[0] = \"NULL_VALUE\"] = \"NULL_VALUE\";\n        return values;\n      }();\n\n      protobuf.ListValue = function () {\n        /**\n         * Properties of a ListValue.\n         * @memberof google.protobuf\n         * @interface IListValue\n         * @property {Array.<google.protobuf.IValue>|null} [values] ListValue values\n         */\n\n        /**\n         * Constructs a new ListValue.\n         * @memberof google.protobuf\n         * @classdesc Represents a ListValue.\n         * @implements IListValue\n         * @constructor\n         * @param {google.protobuf.IListValue=} [properties] Properties to set\n         */\n        function ListValue(properties) {\n          this.values = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * ListValue values.\n         * @member {Array.<google.protobuf.IValue>} values\n         * @memberof google.protobuf.ListValue\n         * @instance\n         */\n\n\n        ListValue.prototype.values = $util.emptyArray;\n        /**\n         * Creates a ListValue message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.ListValue\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.ListValue} ListValue\n         */\n\n        ListValue.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.ListValue) return object;\n          var message = new $root.google.protobuf.ListValue();\n\n          if (object.values) {\n            if (!Array.isArray(object.values)) throw TypeError(\".google.protobuf.ListValue.values: array expected\");\n            message.values = [];\n\n            for (var i = 0; i < object.values.length; ++i) {\n              if (typeof object.values[i] !== \"object\") throw TypeError(\".google.protobuf.ListValue.values: object expected\");\n              message.values[i] = $root.google.protobuf.Value.fromObject(object.values[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a ListValue message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.ListValue\n         * @static\n         * @param {google.protobuf.ListValue} message ListValue\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        ListValue.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.values = [];\n\n          if (message.values && message.values.length) {\n            object.values = [];\n\n            for (var j = 0; j < message.values.length; ++j) {\n              object.values[j] = $root.google.protobuf.Value.toObject(message.values[j], options);\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this ListValue to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.ListValue\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        ListValue.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ListValue;\n      }();\n\n      protobuf.Empty = function () {\n        /**\n         * Properties of an Empty.\n         * @memberof google.protobuf\n         * @interface IEmpty\n         */\n\n        /**\n         * Constructs a new Empty.\n         * @memberof google.protobuf\n         * @classdesc Represents an Empty.\n         * @implements IEmpty\n         * @constructor\n         * @param {google.protobuf.IEmpty=} [properties] Properties to set\n         */\n        function Empty(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * Creates an Empty message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.Empty\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.Empty} Empty\n         */\n\n\n        Empty.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.Empty) return object;\n          return new $root.google.protobuf.Empty();\n        };\n        /**\n         * Creates a plain object from an Empty message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.Empty\n         * @static\n         * @param {google.protobuf.Empty} message Empty\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        Empty.toObject = function toObject() {\n          return {};\n        };\n        /**\n         * Converts this Empty to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.Empty\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        Empty.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Empty;\n      }();\n\n      protobuf.DoubleValue = function () {\n        /**\n         * Properties of a DoubleValue.\n         * @memberof google.protobuf\n         * @interface IDoubleValue\n         * @property {number|null} [value] DoubleValue value\n         */\n\n        /**\n         * Constructs a new DoubleValue.\n         * @memberof google.protobuf\n         * @classdesc Represents a DoubleValue.\n         * @implements IDoubleValue\n         * @constructor\n         * @param {google.protobuf.IDoubleValue=} [properties] Properties to set\n         */\n        function DoubleValue(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * DoubleValue value.\n         * @member {number} value\n         * @memberof google.protobuf.DoubleValue\n         * @instance\n         */\n\n\n        DoubleValue.prototype.value = 0;\n        /**\n         * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.DoubleValue\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.DoubleValue} DoubleValue\n         */\n\n        DoubleValue.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.DoubleValue) return object;\n          var message = new $root.google.protobuf.DoubleValue();\n          if (object.value != null) message.value = Number(object.value);\n          return message;\n        };\n        /**\n         * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.DoubleValue\n         * @static\n         * @param {google.protobuf.DoubleValue} message DoubleValue\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        DoubleValue.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.defaults) object.value = 0;\n          if (message.value != null && message.hasOwnProperty(\"value\")) object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;\n          return object;\n        };\n        /**\n         * Converts this DoubleValue to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.DoubleValue\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        DoubleValue.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return DoubleValue;\n      }();\n\n      protobuf.FloatValue = function () {\n        /**\n         * Properties of a FloatValue.\n         * @memberof google.protobuf\n         * @interface IFloatValue\n         * @property {number|null} [value] FloatValue value\n         */\n\n        /**\n         * Constructs a new FloatValue.\n         * @memberof google.protobuf\n         * @classdesc Represents a FloatValue.\n         * @implements IFloatValue\n         * @constructor\n         * @param {google.protobuf.IFloatValue=} [properties] Properties to set\n         */\n        function FloatValue(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * FloatValue value.\n         * @member {number} value\n         * @memberof google.protobuf.FloatValue\n         * @instance\n         */\n\n\n        FloatValue.prototype.value = 0;\n        /**\n         * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.FloatValue\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.FloatValue} FloatValue\n         */\n\n        FloatValue.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.FloatValue) return object;\n          var message = new $root.google.protobuf.FloatValue();\n          if (object.value != null) message.value = Number(object.value);\n          return message;\n        };\n        /**\n         * Creates a plain object from a FloatValue message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.FloatValue\n         * @static\n         * @param {google.protobuf.FloatValue} message FloatValue\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        FloatValue.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.defaults) object.value = 0;\n          if (message.value != null && message.hasOwnProperty(\"value\")) object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;\n          return object;\n        };\n        /**\n         * Converts this FloatValue to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.FloatValue\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        FloatValue.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return FloatValue;\n      }();\n\n      protobuf.Int64Value = function () {\n        /**\n         * Properties of an Int64Value.\n         * @memberof google.protobuf\n         * @interface IInt64Value\n         * @property {number|string|null} [value] Int64Value value\n         */\n\n        /**\n         * Constructs a new Int64Value.\n         * @memberof google.protobuf\n         * @classdesc Represents an Int64Value.\n         * @implements IInt64Value\n         * @constructor\n         * @param {google.protobuf.IInt64Value=} [properties] Properties to set\n         */\n        function Int64Value(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * Int64Value value.\n         * @member {number|string} value\n         * @memberof google.protobuf.Int64Value\n         * @instance\n         */\n\n\n        Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n        /**\n         * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.Int64Value\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.Int64Value} Int64Value\n         */\n\n        Int64Value.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.Int64Value) return object;\n          var message = new $root.google.protobuf.Int64Value();\n          if (object.value != null) if ($util.Long) (message.value = $util.Long.fromValue(object.value)).unsigned = false;else if (typeof object.value === \"string\") message.value = parseInt(object.value, 10);else if (typeof object.value === \"number\") message.value = object.value;else if (typeof object.value === \"object\") message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();\n          return message;\n        };\n        /**\n         * Creates a plain object from an Int64Value message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.Int64Value\n         * @static\n         * @param {google.protobuf.Int64Value} message Int64Value\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        Int64Value.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.defaults) if ($util.Long) {\n            var long = new $util.Long(0, 0, false);\n            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n          } else object.value = options.longs === String ? \"0\" : 0;\n          if (message.value != null && message.hasOwnProperty(\"value\")) if (typeof message.value === \"number\") object.value = options.longs === String ? String(message.value) : message.value;else object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;\n          return object;\n        };\n        /**\n         * Converts this Int64Value to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.Int64Value\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        Int64Value.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Int64Value;\n      }();\n\n      protobuf.UInt64Value = function () {\n        /**\n         * Properties of a UInt64Value.\n         * @memberof google.protobuf\n         * @interface IUInt64Value\n         * @property {number|string|null} [value] UInt64Value value\n         */\n\n        /**\n         * Constructs a new UInt64Value.\n         * @memberof google.protobuf\n         * @classdesc Represents a UInt64Value.\n         * @implements IUInt64Value\n         * @constructor\n         * @param {google.protobuf.IUInt64Value=} [properties] Properties to set\n         */\n        function UInt64Value(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * UInt64Value value.\n         * @member {number|string} value\n         * @memberof google.protobuf.UInt64Value\n         * @instance\n         */\n\n\n        UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n        /**\n         * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.UInt64Value\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.UInt64Value} UInt64Value\n         */\n\n        UInt64Value.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.UInt64Value) return object;\n          var message = new $root.google.protobuf.UInt64Value();\n          if (object.value != null) if ($util.Long) (message.value = $util.Long.fromValue(object.value)).unsigned = true;else if (typeof object.value === \"string\") message.value = parseInt(object.value, 10);else if (typeof object.value === \"number\") message.value = object.value;else if (typeof object.value === \"object\") message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);\n          return message;\n        };\n        /**\n         * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.UInt64Value\n         * @static\n         * @param {google.protobuf.UInt64Value} message UInt64Value\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        UInt64Value.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.defaults) if ($util.Long) {\n            var long = new $util.Long(0, 0, true);\n            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n          } else object.value = options.longs === String ? \"0\" : 0;\n          if (message.value != null && message.hasOwnProperty(\"value\")) if (typeof message.value === \"number\") object.value = options.longs === String ? String(message.value) : message.value;else object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;\n          return object;\n        };\n        /**\n         * Converts this UInt64Value to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.UInt64Value\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        UInt64Value.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return UInt64Value;\n      }();\n\n      protobuf.Int32Value = function () {\n        /**\n         * Properties of an Int32Value.\n         * @memberof google.protobuf\n         * @interface IInt32Value\n         * @property {number|null} [value] Int32Value value\n         */\n\n        /**\n         * Constructs a new Int32Value.\n         * @memberof google.protobuf\n         * @classdesc Represents an Int32Value.\n         * @implements IInt32Value\n         * @constructor\n         * @param {google.protobuf.IInt32Value=} [properties] Properties to set\n         */\n        function Int32Value(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * Int32Value value.\n         * @member {number} value\n         * @memberof google.protobuf.Int32Value\n         * @instance\n         */\n\n\n        Int32Value.prototype.value = 0;\n        /**\n         * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.Int32Value\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.Int32Value} Int32Value\n         */\n\n        Int32Value.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.Int32Value) return object;\n          var message = new $root.google.protobuf.Int32Value();\n          if (object.value != null) message.value = object.value | 0;\n          return message;\n        };\n        /**\n         * Creates a plain object from an Int32Value message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.Int32Value\n         * @static\n         * @param {google.protobuf.Int32Value} message Int32Value\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        Int32Value.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.defaults) object.value = 0;\n          if (message.value != null && message.hasOwnProperty(\"value\")) object.value = message.value;\n          return object;\n        };\n        /**\n         * Converts this Int32Value to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.Int32Value\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        Int32Value.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Int32Value;\n      }();\n\n      protobuf.UInt32Value = function () {\n        /**\n         * Properties of a UInt32Value.\n         * @memberof google.protobuf\n         * @interface IUInt32Value\n         * @property {number|null} [value] UInt32Value value\n         */\n\n        /**\n         * Constructs a new UInt32Value.\n         * @memberof google.protobuf\n         * @classdesc Represents a UInt32Value.\n         * @implements IUInt32Value\n         * @constructor\n         * @param {google.protobuf.IUInt32Value=} [properties] Properties to set\n         */\n        function UInt32Value(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * UInt32Value value.\n         * @member {number} value\n         * @memberof google.protobuf.UInt32Value\n         * @instance\n         */\n\n\n        UInt32Value.prototype.value = 0;\n        /**\n         * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.UInt32Value\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.UInt32Value} UInt32Value\n         */\n\n        UInt32Value.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.UInt32Value) return object;\n          var message = new $root.google.protobuf.UInt32Value();\n          if (object.value != null) message.value = object.value >>> 0;\n          return message;\n        };\n        /**\n         * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.UInt32Value\n         * @static\n         * @param {google.protobuf.UInt32Value} message UInt32Value\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        UInt32Value.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.defaults) object.value = 0;\n          if (message.value != null && message.hasOwnProperty(\"value\")) object.value = message.value;\n          return object;\n        };\n        /**\n         * Converts this UInt32Value to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.UInt32Value\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        UInt32Value.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return UInt32Value;\n      }();\n\n      protobuf.BoolValue = function () {\n        /**\n         * Properties of a BoolValue.\n         * @memberof google.protobuf\n         * @interface IBoolValue\n         * @property {boolean|null} [value] BoolValue value\n         */\n\n        /**\n         * Constructs a new BoolValue.\n         * @memberof google.protobuf\n         * @classdesc Represents a BoolValue.\n         * @implements IBoolValue\n         * @constructor\n         * @param {google.protobuf.IBoolValue=} [properties] Properties to set\n         */\n        function BoolValue(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * BoolValue value.\n         * @member {boolean} value\n         * @memberof google.protobuf.BoolValue\n         * @instance\n         */\n\n\n        BoolValue.prototype.value = false;\n        /**\n         * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.BoolValue\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.BoolValue} BoolValue\n         */\n\n        BoolValue.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.BoolValue) return object;\n          var message = new $root.google.protobuf.BoolValue();\n          if (object.value != null) message.value = Boolean(object.value);\n          return message;\n        };\n        /**\n         * Creates a plain object from a BoolValue message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.BoolValue\n         * @static\n         * @param {google.protobuf.BoolValue} message BoolValue\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        BoolValue.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.defaults) object.value = false;\n          if (message.value != null && message.hasOwnProperty(\"value\")) object.value = message.value;\n          return object;\n        };\n        /**\n         * Converts this BoolValue to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.BoolValue\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        BoolValue.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return BoolValue;\n      }();\n\n      protobuf.StringValue = function () {\n        /**\n         * Properties of a StringValue.\n         * @memberof google.protobuf\n         * @interface IStringValue\n         * @property {string|null} [value] StringValue value\n         */\n\n        /**\n         * Constructs a new StringValue.\n         * @memberof google.protobuf\n         * @classdesc Represents a StringValue.\n         * @implements IStringValue\n         * @constructor\n         * @param {google.protobuf.IStringValue=} [properties] Properties to set\n         */\n        function StringValue(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * StringValue value.\n         * @member {string} value\n         * @memberof google.protobuf.StringValue\n         * @instance\n         */\n\n\n        StringValue.prototype.value = \"\";\n        /**\n         * Creates a StringValue message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.StringValue\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.StringValue} StringValue\n         */\n\n        StringValue.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.StringValue) return object;\n          var message = new $root.google.protobuf.StringValue();\n          if (object.value != null) message.value = String(object.value);\n          return message;\n        };\n        /**\n         * Creates a plain object from a StringValue message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.StringValue\n         * @static\n         * @param {google.protobuf.StringValue} message StringValue\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        StringValue.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.defaults) object.value = \"\";\n          if (message.value != null && message.hasOwnProperty(\"value\")) object.value = message.value;\n          return object;\n        };\n        /**\n         * Converts this StringValue to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.StringValue\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        StringValue.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringValue;\n      }();\n\n      protobuf.BytesValue = function () {\n        /**\n         * Properties of a BytesValue.\n         * @memberof google.protobuf\n         * @interface IBytesValue\n         * @property {Uint8Array|null} [value] BytesValue value\n         */\n\n        /**\n         * Constructs a new BytesValue.\n         * @memberof google.protobuf\n         * @classdesc Represents a BytesValue.\n         * @implements IBytesValue\n         * @constructor\n         * @param {google.protobuf.IBytesValue=} [properties] Properties to set\n         */\n        function BytesValue(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * BytesValue value.\n         * @member {Uint8Array} value\n         * @memberof google.protobuf.BytesValue\n         * @instance\n         */\n\n\n        BytesValue.prototype.value = $util.newBuffer([]);\n        /**\n         * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.BytesValue\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.BytesValue} BytesValue\n         */\n\n        BytesValue.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.BytesValue) return object;\n          var message = new $root.google.protobuf.BytesValue();\n          if (object.value != null) if (typeof object.value === \"string\") $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);else if (object.value.length) message.value = object.value;\n          return message;\n        };\n        /**\n         * Creates a plain object from a BytesValue message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.BytesValue\n         * @static\n         * @param {google.protobuf.BytesValue} message BytesValue\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        BytesValue.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.defaults) if (options.bytes === String) object.value = \"\";else {\n            object.value = [];\n            if (options.bytes !== Array) object.value = $util.newBuffer(object.value);\n          }\n          if (message.value != null && message.hasOwnProperty(\"value\")) object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;\n          return object;\n        };\n        /**\n         * Converts this BytesValue to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.BytesValue\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        BytesValue.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return BytesValue;\n      }();\n\n      protobuf.Any = function () {\n        /**\n         * Properties of an Any.\n         * @memberof google.protobuf\n         * @interface IAny\n         * @property {string|null} [type_url] Any type_url\n         * @property {Uint8Array|null} [value] Any value\n         */\n\n        /**\n         * Constructs a new Any.\n         * @memberof google.protobuf\n         * @classdesc Represents an Any.\n         * @implements IAny\n         * @constructor\n         * @param {google.protobuf.IAny=} [properties] Properties to set\n         */\n        function Any(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * Any type_url.\n         * @member {string} type_url\n         * @memberof google.protobuf.Any\n         * @instance\n         */\n\n\n        Any.prototype.type_url = \"\";\n        /**\n         * Any value.\n         * @member {Uint8Array} value\n         * @memberof google.protobuf.Any\n         * @instance\n         */\n\n        Any.prototype.value = $util.newBuffer([]);\n        /**\n         * Creates an Any message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.Any\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.Any} Any\n         */\n\n        Any.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.Any) return object;\n          var message = new $root.google.protobuf.Any();\n          if (object.type_url != null) message.type_url = String(object.type_url);\n          if (object.value != null) if (typeof object.value === \"string\") $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);else if (object.value.length) message.value = object.value;\n          return message;\n        };\n        /**\n         * Creates a plain object from an Any message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.Any\n         * @static\n         * @param {google.protobuf.Any} message Any\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        Any.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.type_url = \"\";\n            if (options.bytes === String) object.value = \"\";else {\n              object.value = [];\n              if (options.bytes !== Array) object.value = $util.newBuffer(object.value);\n            }\n          }\n\n          if (message.type_url != null && message.hasOwnProperty(\"type_url\")) object.type_url = message.type_url;\n          if (message.value != null && message.hasOwnProperty(\"value\")) object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;\n          return object;\n        };\n        /**\n         * Converts this Any to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.Any\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        Any.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Any;\n      }();\n\n      protobuf.FieldMask = function () {\n        /**\n         * Properties of a FieldMask.\n         * @memberof google.protobuf\n         * @interface IFieldMask\n         * @property {Array.<string>|null} [paths] FieldMask paths\n         */\n\n        /**\n         * Constructs a new FieldMask.\n         * @memberof google.protobuf\n         * @classdesc Represents a FieldMask.\n         * @implements IFieldMask\n         * @constructor\n         * @param {google.protobuf.IFieldMask=} [properties] Properties to set\n         */\n        function FieldMask(properties) {\n          this.paths = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * FieldMask paths.\n         * @member {Array.<string>} paths\n         * @memberof google.protobuf.FieldMask\n         * @instance\n         */\n\n\n        FieldMask.prototype.paths = $util.emptyArray;\n        /**\n         * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.FieldMask\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.FieldMask} FieldMask\n         */\n\n        FieldMask.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.FieldMask) return object;\n          var message = new $root.google.protobuf.FieldMask();\n\n          if (object.paths) {\n            if (!Array.isArray(object.paths)) throw TypeError(\".google.protobuf.FieldMask.paths: array expected\");\n            message.paths = [];\n\n            for (var i = 0; i < object.paths.length; ++i) {\n              message.paths[i] = String(object.paths[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a FieldMask message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.FieldMask\n         * @static\n         * @param {google.protobuf.FieldMask} message FieldMask\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        FieldMask.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.paths = [];\n\n          if (message.paths && message.paths.length) {\n            object.paths = [];\n\n            for (var j = 0; j < message.paths.length; ++j) {\n              object.paths[j] = message.paths[j];\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this FieldMask to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.FieldMask\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        FieldMask.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return FieldMask;\n      }();\n\n      protobuf.Duration = function () {\n        /**\n         * Properties of a Duration.\n         * @memberof google.protobuf\n         * @interface IDuration\n         * @property {number|string|null} [seconds] Duration seconds\n         * @property {number|null} [nanos] Duration nanos\n         */\n\n        /**\n         * Constructs a new Duration.\n         * @memberof google.protobuf\n         * @classdesc Represents a Duration.\n         * @implements IDuration\n         * @constructor\n         * @param {google.protobuf.IDuration=} [properties] Properties to set\n         */\n        function Duration(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * Duration seconds.\n         * @member {number|string} seconds\n         * @memberof google.protobuf.Duration\n         * @instance\n         */\n\n\n        Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n        /**\n         * Duration nanos.\n         * @member {number} nanos\n         * @memberof google.protobuf.Duration\n         * @instance\n         */\n\n        Duration.prototype.nanos = 0;\n        /**\n         * Creates a Duration message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.protobuf.Duration\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.protobuf.Duration} Duration\n         */\n\n        Duration.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.protobuf.Duration) return object;\n          var message = new $root.google.protobuf.Duration();\n          if (object.seconds != null) if ($util.Long) (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;else if (typeof object.seconds === \"string\") message.seconds = parseInt(object.seconds, 10);else if (typeof object.seconds === \"number\") message.seconds = object.seconds;else if (typeof object.seconds === \"object\") message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();\n          if (object.nanos != null) message.nanos = object.nanos | 0;\n          return message;\n        };\n        /**\n         * Creates a plain object from a Duration message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.protobuf.Duration\n         * @static\n         * @param {google.protobuf.Duration} message Duration\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        Duration.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            if ($util.Long) {\n              var long = new $util.Long(0, 0, false);\n              object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else object.seconds = options.longs === String ? \"0\" : 0;\n\n            object.nanos = 0;\n          }\n\n          if (message.seconds != null && message.hasOwnProperty(\"seconds\")) if (typeof message.seconds === \"number\") object.seconds = options.longs === String ? String(message.seconds) : message.seconds;else object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;\n          if (message.nanos != null && message.hasOwnProperty(\"nanos\")) object.nanos = message.nanos;\n          return object;\n        };\n        /**\n         * Converts this Duration to JSON.\n         * @function toJSON\n         * @memberof google.protobuf.Duration\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        Duration.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Duration;\n      }();\n\n      return protobuf;\n    }();\n\n    google.firestore = function () {\n      /**\n       * Namespace firestore.\n       * @memberof google\n       * @namespace\n       */\n      var firestore = {};\n\n      firestore.v1 = function () {\n        /**\n         * Namespace v1.\n         * @memberof google.firestore\n         * @namespace\n         */\n        var v1 = {};\n\n        v1.DocumentMask = function () {\n          /**\n           * Properties of a DocumentMask.\n           * @memberof google.firestore.v1\n           * @interface IDocumentMask\n           * @property {Array.<string>|null} [fieldPaths] DocumentMask fieldPaths\n           */\n\n          /**\n           * Constructs a new DocumentMask.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a DocumentMask.\n           * @implements IDocumentMask\n           * @constructor\n           * @param {google.firestore.v1.IDocumentMask=} [properties] Properties to set\n           */\n          function DocumentMask(properties) {\n            this.fieldPaths = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * DocumentMask fieldPaths.\n           * @member {Array.<string>} fieldPaths\n           * @memberof google.firestore.v1.DocumentMask\n           * @instance\n           */\n\n\n          DocumentMask.prototype.fieldPaths = $util.emptyArray;\n          /**\n           * Creates a DocumentMask message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.DocumentMask\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.DocumentMask} DocumentMask\n           */\n\n          DocumentMask.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.DocumentMask) return object;\n            var message = new $root.google.firestore.v1.DocumentMask();\n\n            if (object.fieldPaths) {\n              if (!Array.isArray(object.fieldPaths)) throw TypeError(\".google.firestore.v1.DocumentMask.fieldPaths: array expected\");\n              message.fieldPaths = [];\n\n              for (var i = 0; i < object.fieldPaths.length; ++i) {\n                message.fieldPaths[i] = String(object.fieldPaths[i]);\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a DocumentMask message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.DocumentMask\n           * @static\n           * @param {google.firestore.v1.DocumentMask} message DocumentMask\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          DocumentMask.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.fieldPaths = [];\n\n            if (message.fieldPaths && message.fieldPaths.length) {\n              object.fieldPaths = [];\n\n              for (var j = 0; j < message.fieldPaths.length; ++j) {\n                object.fieldPaths[j] = message.fieldPaths[j];\n              }\n            }\n\n            return object;\n          };\n          /**\n           * Converts this DocumentMask to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.DocumentMask\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          DocumentMask.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return DocumentMask;\n        }();\n\n        v1.Precondition = function () {\n          /**\n           * Properties of a Precondition.\n           * @memberof google.firestore.v1\n           * @interface IPrecondition\n           * @property {boolean|null} [exists] Precondition exists\n           * @property {google.protobuf.ITimestamp|null} [updateTime] Precondition updateTime\n           */\n\n          /**\n           * Constructs a new Precondition.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a Precondition.\n           * @implements IPrecondition\n           * @constructor\n           * @param {google.firestore.v1.IPrecondition=} [properties] Properties to set\n           */\n          function Precondition(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * Precondition exists.\n           * @member {boolean|null|undefined} exists\n           * @memberof google.firestore.v1.Precondition\n           * @instance\n           */\n\n\n          Precondition.prototype.exists = null;\n          /**\n           * Precondition updateTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} updateTime\n           * @memberof google.firestore.v1.Precondition\n           * @instance\n           */\n\n          Precondition.prototype.updateTime = null; // OneOf field names bound to virtual getters and setters\n\n          var $oneOfFields;\n          /**\n           * Precondition conditionType.\n           * @member {\"exists\"|\"updateTime\"|undefined} conditionType\n           * @memberof google.firestore.v1.Precondition\n           * @instance\n           */\n\n          Object.defineProperty(Precondition.prototype, \"conditionType\", {\n            get: $util.oneOfGetter($oneOfFields = [\"exists\", \"updateTime\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Creates a Precondition message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.Precondition\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.Precondition} Precondition\n           */\n\n          Precondition.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.Precondition) return object;\n            var message = new $root.google.firestore.v1.Precondition();\n            if (object.exists != null) message.exists = Boolean(object.exists);\n\n            if (object.updateTime != null) {\n              if (typeof object.updateTime !== \"object\") throw TypeError(\".google.firestore.v1.Precondition.updateTime: object expected\");\n              message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a Precondition message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.Precondition\n           * @static\n           * @param {google.firestore.v1.Precondition} message Precondition\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          Precondition.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (message.exists != null && message.hasOwnProperty(\"exists\")) {\n              object.exists = message.exists;\n              if (options.oneofs) object.conditionType = \"exists\";\n            }\n\n            if (message.updateTime != null && message.hasOwnProperty(\"updateTime\")) {\n              object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);\n              if (options.oneofs) object.conditionType = \"updateTime\";\n            }\n\n            return object;\n          };\n          /**\n           * Converts this Precondition to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.Precondition\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          Precondition.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return Precondition;\n        }();\n\n        v1.TransactionOptions = function () {\n          /**\n           * Properties of a TransactionOptions.\n           * @memberof google.firestore.v1\n           * @interface ITransactionOptions\n           * @property {google.firestore.v1.TransactionOptions.IReadOnly|null} [readOnly] TransactionOptions readOnly\n           * @property {google.firestore.v1.TransactionOptions.IReadWrite|null} [readWrite] TransactionOptions readWrite\n           */\n\n          /**\n           * Constructs a new TransactionOptions.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a TransactionOptions.\n           * @implements ITransactionOptions\n           * @constructor\n           * @param {google.firestore.v1.ITransactionOptions=} [properties] Properties to set\n           */\n          function TransactionOptions(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * TransactionOptions readOnly.\n           * @member {google.firestore.v1.TransactionOptions.IReadOnly|null|undefined} readOnly\n           * @memberof google.firestore.v1.TransactionOptions\n           * @instance\n           */\n\n\n          TransactionOptions.prototype.readOnly = null;\n          /**\n           * TransactionOptions readWrite.\n           * @member {google.firestore.v1.TransactionOptions.IReadWrite|null|undefined} readWrite\n           * @memberof google.firestore.v1.TransactionOptions\n           * @instance\n           */\n\n          TransactionOptions.prototype.readWrite = null; // OneOf field names bound to virtual getters and setters\n\n          var $oneOfFields;\n          /**\n           * TransactionOptions mode.\n           * @member {\"readOnly\"|\"readWrite\"|undefined} mode\n           * @memberof google.firestore.v1.TransactionOptions\n           * @instance\n           */\n\n          Object.defineProperty(TransactionOptions.prototype, \"mode\", {\n            get: $util.oneOfGetter($oneOfFields = [\"readOnly\", \"readWrite\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Creates a TransactionOptions message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.TransactionOptions\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.TransactionOptions} TransactionOptions\n           */\n\n          TransactionOptions.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.TransactionOptions) return object;\n            var message = new $root.google.firestore.v1.TransactionOptions();\n\n            if (object.readOnly != null) {\n              if (typeof object.readOnly !== \"object\") throw TypeError(\".google.firestore.v1.TransactionOptions.readOnly: object expected\");\n              message.readOnly = $root.google.firestore.v1.TransactionOptions.ReadOnly.fromObject(object.readOnly);\n            }\n\n            if (object.readWrite != null) {\n              if (typeof object.readWrite !== \"object\") throw TypeError(\".google.firestore.v1.TransactionOptions.readWrite: object expected\");\n              message.readWrite = $root.google.firestore.v1.TransactionOptions.ReadWrite.fromObject(object.readWrite);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a TransactionOptions message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.TransactionOptions\n           * @static\n           * @param {google.firestore.v1.TransactionOptions} message TransactionOptions\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          TransactionOptions.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (message.readOnly != null && message.hasOwnProperty(\"readOnly\")) {\n              object.readOnly = $root.google.firestore.v1.TransactionOptions.ReadOnly.toObject(message.readOnly, options);\n              if (options.oneofs) object.mode = \"readOnly\";\n            }\n\n            if (message.readWrite != null && message.hasOwnProperty(\"readWrite\")) {\n              object.readWrite = $root.google.firestore.v1.TransactionOptions.ReadWrite.toObject(message.readWrite, options);\n              if (options.oneofs) object.mode = \"readWrite\";\n            }\n\n            return object;\n          };\n          /**\n           * Converts this TransactionOptions to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.TransactionOptions\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          TransactionOptions.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          TransactionOptions.ReadWrite = function () {\n            /**\n             * Properties of a ReadWrite.\n             * @memberof google.firestore.v1.TransactionOptions\n             * @interface IReadWrite\n             * @property {Uint8Array|null} [retryTransaction] ReadWrite retryTransaction\n             */\n\n            /**\n             * Constructs a new ReadWrite.\n             * @memberof google.firestore.v1.TransactionOptions\n             * @classdesc Represents a ReadWrite.\n             * @implements IReadWrite\n             * @constructor\n             * @param {google.firestore.v1.TransactionOptions.IReadWrite=} [properties] Properties to set\n             */\n            function ReadWrite(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n            }\n            /**\n             * ReadWrite retryTransaction.\n             * @member {Uint8Array} retryTransaction\n             * @memberof google.firestore.v1.TransactionOptions.ReadWrite\n             * @instance\n             */\n\n\n            ReadWrite.prototype.retryTransaction = $util.newBuffer([]);\n            /**\n             * Creates a ReadWrite message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.firestore.v1.TransactionOptions.ReadWrite\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.firestore.v1.TransactionOptions.ReadWrite} ReadWrite\n             */\n\n            ReadWrite.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.firestore.v1.TransactionOptions.ReadWrite) return object;\n              var message = new $root.google.firestore.v1.TransactionOptions.ReadWrite();\n              if (object.retryTransaction != null) if (typeof object.retryTransaction === \"string\") $util.base64.decode(object.retryTransaction, message.retryTransaction = $util.newBuffer($util.base64.length(object.retryTransaction)), 0);else if (object.retryTransaction.length) message.retryTransaction = object.retryTransaction;\n              return message;\n            };\n            /**\n             * Creates a plain object from a ReadWrite message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.firestore.v1.TransactionOptions.ReadWrite\n             * @static\n             * @param {google.firestore.v1.TransactionOptions.ReadWrite} message ReadWrite\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            ReadWrite.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.defaults) if (options.bytes === String) object.retryTransaction = \"\";else {\n                object.retryTransaction = [];\n                if (options.bytes !== Array) object.retryTransaction = $util.newBuffer(object.retryTransaction);\n              }\n              if (message.retryTransaction != null && message.hasOwnProperty(\"retryTransaction\")) object.retryTransaction = options.bytes === String ? $util.base64.encode(message.retryTransaction, 0, message.retryTransaction.length) : options.bytes === Array ? Array.prototype.slice.call(message.retryTransaction) : message.retryTransaction;\n              return object;\n            };\n            /**\n             * Converts this ReadWrite to JSON.\n             * @function toJSON\n             * @memberof google.firestore.v1.TransactionOptions.ReadWrite\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            ReadWrite.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ReadWrite;\n          }();\n\n          TransactionOptions.ReadOnly = function () {\n            /**\n             * Properties of a ReadOnly.\n             * @memberof google.firestore.v1.TransactionOptions\n             * @interface IReadOnly\n             * @property {google.protobuf.ITimestamp|null} [readTime] ReadOnly readTime\n             */\n\n            /**\n             * Constructs a new ReadOnly.\n             * @memberof google.firestore.v1.TransactionOptions\n             * @classdesc Represents a ReadOnly.\n             * @implements IReadOnly\n             * @constructor\n             * @param {google.firestore.v1.TransactionOptions.IReadOnly=} [properties] Properties to set\n             */\n            function ReadOnly(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n            }\n            /**\n             * ReadOnly readTime.\n             * @member {google.protobuf.ITimestamp|null|undefined} readTime\n             * @memberof google.firestore.v1.TransactionOptions.ReadOnly\n             * @instance\n             */\n\n\n            ReadOnly.prototype.readTime = null; // OneOf field names bound to virtual getters and setters\n\n            var $oneOfFields;\n            /**\n             * ReadOnly consistencySelector.\n             * @member {\"readTime\"|undefined} consistencySelector\n             * @memberof google.firestore.v1.TransactionOptions.ReadOnly\n             * @instance\n             */\n\n            Object.defineProperty(ReadOnly.prototype, \"consistencySelector\", {\n              get: $util.oneOfGetter($oneOfFields = [\"readTime\"]),\n              set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Creates a ReadOnly message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.firestore.v1.TransactionOptions.ReadOnly\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.firestore.v1.TransactionOptions.ReadOnly} ReadOnly\n             */\n\n            ReadOnly.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.firestore.v1.TransactionOptions.ReadOnly) return object;\n              var message = new $root.google.firestore.v1.TransactionOptions.ReadOnly();\n\n              if (object.readTime != null) {\n                if (typeof object.readTime !== \"object\") throw TypeError(\".google.firestore.v1.TransactionOptions.ReadOnly.readTime: object expected\");\n                message.readTime = $root.google.protobuf.Timestamp.fromObject(object.readTime);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a ReadOnly message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.firestore.v1.TransactionOptions.ReadOnly\n             * @static\n             * @param {google.firestore.v1.TransactionOptions.ReadOnly} message ReadOnly\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            ReadOnly.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (message.readTime != null && message.hasOwnProperty(\"readTime\")) {\n                object.readTime = $root.google.protobuf.Timestamp.toObject(message.readTime, options);\n                if (options.oneofs) object.consistencySelector = \"readTime\";\n              }\n\n              return object;\n            };\n            /**\n             * Converts this ReadOnly to JSON.\n             * @function toJSON\n             * @memberof google.firestore.v1.TransactionOptions.ReadOnly\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            ReadOnly.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ReadOnly;\n          }();\n\n          return TransactionOptions;\n        }();\n\n        v1.Document = function () {\n          /**\n           * Properties of a Document.\n           * @memberof google.firestore.v1\n           * @interface IDocument\n           * @property {string|null} [name] Document name\n           * @property {Object.<string,google.firestore.v1.IValue>|null} [fields] Document fields\n           * @property {google.protobuf.ITimestamp|null} [createTime] Document createTime\n           * @property {google.protobuf.ITimestamp|null} [updateTime] Document updateTime\n           */\n\n          /**\n           * Constructs a new Document.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a Document.\n           * @implements IDocument\n           * @constructor\n           * @param {google.firestore.v1.IDocument=} [properties] Properties to set\n           */\n          function Document(properties) {\n            this.fields = {};\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * Document name.\n           * @member {string} name\n           * @memberof google.firestore.v1.Document\n           * @instance\n           */\n\n\n          Document.prototype.name = \"\";\n          /**\n           * Document fields.\n           * @member {Object.<string,google.firestore.v1.IValue>} fields\n           * @memberof google.firestore.v1.Document\n           * @instance\n           */\n\n          Document.prototype.fields = $util.emptyObject;\n          /**\n           * Document createTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} createTime\n           * @memberof google.firestore.v1.Document\n           * @instance\n           */\n\n          Document.prototype.createTime = null;\n          /**\n           * Document updateTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} updateTime\n           * @memberof google.firestore.v1.Document\n           * @instance\n           */\n\n          Document.prototype.updateTime = null;\n          /**\n           * Creates a Document message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.Document\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.Document} Document\n           */\n\n          Document.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.Document) return object;\n            var message = new $root.google.firestore.v1.Document();\n            if (object.name != null) message.name = String(object.name);\n\n            if (object.fields) {\n              if (typeof object.fields !== \"object\") throw TypeError(\".google.firestore.v1.Document.fields: object expected\");\n              message.fields = {};\n\n              for (var keys = Object.keys(object.fields), i = 0; i < keys.length; ++i) {\n                if (typeof object.fields[keys[i]] !== \"object\") throw TypeError(\".google.firestore.v1.Document.fields: object expected\");\n                message.fields[keys[i]] = $root.google.firestore.v1.Value.fromObject(object.fields[keys[i]]);\n              }\n            }\n\n            if (object.createTime != null) {\n              if (typeof object.createTime !== \"object\") throw TypeError(\".google.firestore.v1.Document.createTime: object expected\");\n              message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);\n            }\n\n            if (object.updateTime != null) {\n              if (typeof object.updateTime !== \"object\") throw TypeError(\".google.firestore.v1.Document.updateTime: object expected\");\n              message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a Document message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.Document\n           * @static\n           * @param {google.firestore.v1.Document} message Document\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          Document.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.objects || options.defaults) object.fields = {};\n\n            if (options.defaults) {\n              object.name = \"\";\n              object.createTime = null;\n              object.updateTime = null;\n            }\n\n            if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n            var keys2;\n\n            if (message.fields && (keys2 = Object.keys(message.fields)).length) {\n              object.fields = {};\n\n              for (var j = 0; j < keys2.length; ++j) {\n                object.fields[keys2[j]] = $root.google.firestore.v1.Value.toObject(message.fields[keys2[j]], options);\n              }\n            }\n\n            if (message.createTime != null && message.hasOwnProperty(\"createTime\")) object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);\n            if (message.updateTime != null && message.hasOwnProperty(\"updateTime\")) object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);\n            return object;\n          };\n          /**\n           * Converts this Document to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.Document\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          Document.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return Document;\n        }();\n\n        v1.Value = function () {\n          /**\n           * Properties of a Value.\n           * @memberof google.firestore.v1\n           * @interface IValue\n           * @property {google.protobuf.NullValue|null} [nullValue] Value nullValue\n           * @property {boolean|null} [booleanValue] Value booleanValue\n           * @property {number|string|null} [integerValue] Value integerValue\n           * @property {number|null} [doubleValue] Value doubleValue\n           * @property {google.protobuf.ITimestamp|null} [timestampValue] Value timestampValue\n           * @property {string|null} [stringValue] Value stringValue\n           * @property {Uint8Array|null} [bytesValue] Value bytesValue\n           * @property {string|null} [referenceValue] Value referenceValue\n           * @property {google.type.ILatLng|null} [geoPointValue] Value geoPointValue\n           * @property {google.firestore.v1.IArrayValue|null} [arrayValue] Value arrayValue\n           * @property {google.firestore.v1.IMapValue|null} [mapValue] Value mapValue\n           */\n\n          /**\n           * Constructs a new Value.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a Value.\n           * @implements IValue\n           * @constructor\n           * @param {google.firestore.v1.IValue=} [properties] Properties to set\n           */\n          function Value(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * Value nullValue.\n           * @member {google.protobuf.NullValue|null|undefined} nullValue\n           * @memberof google.firestore.v1.Value\n           * @instance\n           */\n\n\n          Value.prototype.nullValue = null;\n          /**\n           * Value booleanValue.\n           * @member {boolean|null|undefined} booleanValue\n           * @memberof google.firestore.v1.Value\n           * @instance\n           */\n\n          Value.prototype.booleanValue = null;\n          /**\n           * Value integerValue.\n           * @member {number|string|null|undefined} integerValue\n           * @memberof google.firestore.v1.Value\n           * @instance\n           */\n\n          Value.prototype.integerValue = null;\n          /**\n           * Value doubleValue.\n           * @member {number|null|undefined} doubleValue\n           * @memberof google.firestore.v1.Value\n           * @instance\n           */\n\n          Value.prototype.doubleValue = null;\n          /**\n           * Value timestampValue.\n           * @member {google.protobuf.ITimestamp|null|undefined} timestampValue\n           * @memberof google.firestore.v1.Value\n           * @instance\n           */\n\n          Value.prototype.timestampValue = null;\n          /**\n           * Value stringValue.\n           * @member {string|null|undefined} stringValue\n           * @memberof google.firestore.v1.Value\n           * @instance\n           */\n\n          Value.prototype.stringValue = null;\n          /**\n           * Value bytesValue.\n           * @member {Uint8Array|null|undefined} bytesValue\n           * @memberof google.firestore.v1.Value\n           * @instance\n           */\n\n          Value.prototype.bytesValue = null;\n          /**\n           * Value referenceValue.\n           * @member {string|null|undefined} referenceValue\n           * @memberof google.firestore.v1.Value\n           * @instance\n           */\n\n          Value.prototype.referenceValue = null;\n          /**\n           * Value geoPointValue.\n           * @member {google.type.ILatLng|null|undefined} geoPointValue\n           * @memberof google.firestore.v1.Value\n           * @instance\n           */\n\n          Value.prototype.geoPointValue = null;\n          /**\n           * Value arrayValue.\n           * @member {google.firestore.v1.IArrayValue|null|undefined} arrayValue\n           * @memberof google.firestore.v1.Value\n           * @instance\n           */\n\n          Value.prototype.arrayValue = null;\n          /**\n           * Value mapValue.\n           * @member {google.firestore.v1.IMapValue|null|undefined} mapValue\n           * @memberof google.firestore.v1.Value\n           * @instance\n           */\n\n          Value.prototype.mapValue = null; // OneOf field names bound to virtual getters and setters\n\n          var $oneOfFields;\n          /**\n           * Value valueType.\n           * @member {\"nullValue\"|\"booleanValue\"|\"integerValue\"|\"doubleValue\"|\"timestampValue\"|\"stringValue\"|\"bytesValue\"|\"referenceValue\"|\"geoPointValue\"|\"arrayValue\"|\"mapValue\"|undefined} valueType\n           * @memberof google.firestore.v1.Value\n           * @instance\n           */\n\n          Object.defineProperty(Value.prototype, \"valueType\", {\n            get: $util.oneOfGetter($oneOfFields = [\"nullValue\", \"booleanValue\", \"integerValue\", \"doubleValue\", \"timestampValue\", \"stringValue\", \"bytesValue\", \"referenceValue\", \"geoPointValue\", \"arrayValue\", \"mapValue\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Creates a Value message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.Value\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.Value} Value\n           */\n\n          Value.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.Value) return object;\n            var message = new $root.google.firestore.v1.Value();\n\n            switch (object.nullValue) {\n              case \"NULL_VALUE\":\n              case 0:\n                message.nullValue = 0;\n                break;\n            }\n\n            if (object.booleanValue != null) message.booleanValue = Boolean(object.booleanValue);\n            if (object.integerValue != null) if ($util.Long) (message.integerValue = $util.Long.fromValue(object.integerValue)).unsigned = false;else if (typeof object.integerValue === \"string\") message.integerValue = parseInt(object.integerValue, 10);else if (typeof object.integerValue === \"number\") message.integerValue = object.integerValue;else if (typeof object.integerValue === \"object\") message.integerValue = new $util.LongBits(object.integerValue.low >>> 0, object.integerValue.high >>> 0).toNumber();\n            if (object.doubleValue != null) message.doubleValue = Number(object.doubleValue);\n\n            if (object.timestampValue != null) {\n              if (typeof object.timestampValue !== \"object\") throw TypeError(\".google.firestore.v1.Value.timestampValue: object expected\");\n              message.timestampValue = $root.google.protobuf.Timestamp.fromObject(object.timestampValue);\n            }\n\n            if (object.stringValue != null) message.stringValue = String(object.stringValue);\n            if (object.bytesValue != null) if (typeof object.bytesValue === \"string\") $util.base64.decode(object.bytesValue, message.bytesValue = $util.newBuffer($util.base64.length(object.bytesValue)), 0);else if (object.bytesValue.length) message.bytesValue = object.bytesValue;\n            if (object.referenceValue != null) message.referenceValue = String(object.referenceValue);\n\n            if (object.geoPointValue != null) {\n              if (typeof object.geoPointValue !== \"object\") throw TypeError(\".google.firestore.v1.Value.geoPointValue: object expected\");\n              message.geoPointValue = $root.google.type.LatLng.fromObject(object.geoPointValue);\n            }\n\n            if (object.arrayValue != null) {\n              if (typeof object.arrayValue !== \"object\") throw TypeError(\".google.firestore.v1.Value.arrayValue: object expected\");\n              message.arrayValue = $root.google.firestore.v1.ArrayValue.fromObject(object.arrayValue);\n            }\n\n            if (object.mapValue != null) {\n              if (typeof object.mapValue !== \"object\") throw TypeError(\".google.firestore.v1.Value.mapValue: object expected\");\n              message.mapValue = $root.google.firestore.v1.MapValue.fromObject(object.mapValue);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a Value message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.Value\n           * @static\n           * @param {google.firestore.v1.Value} message Value\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          Value.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (message.booleanValue != null && message.hasOwnProperty(\"booleanValue\")) {\n              object.booleanValue = message.booleanValue;\n              if (options.oneofs) object.valueType = \"booleanValue\";\n            }\n\n            if (message.integerValue != null && message.hasOwnProperty(\"integerValue\")) {\n              if (typeof message.integerValue === \"number\") object.integerValue = options.longs === String ? String(message.integerValue) : message.integerValue;else object.integerValue = options.longs === String ? $util.Long.prototype.toString.call(message.integerValue) : options.longs === Number ? new $util.LongBits(message.integerValue.low >>> 0, message.integerValue.high >>> 0).toNumber() : message.integerValue;\n              if (options.oneofs) object.valueType = \"integerValue\";\n            }\n\n            if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\")) {\n              object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n              if (options.oneofs) object.valueType = \"doubleValue\";\n            }\n\n            if (message.referenceValue != null && message.hasOwnProperty(\"referenceValue\")) {\n              object.referenceValue = message.referenceValue;\n              if (options.oneofs) object.valueType = \"referenceValue\";\n            }\n\n            if (message.mapValue != null && message.hasOwnProperty(\"mapValue\")) {\n              object.mapValue = $root.google.firestore.v1.MapValue.toObject(message.mapValue, options);\n              if (options.oneofs) object.valueType = \"mapValue\";\n            }\n\n            if (message.geoPointValue != null && message.hasOwnProperty(\"geoPointValue\")) {\n              object.geoPointValue = $root.google.type.LatLng.toObject(message.geoPointValue, options);\n              if (options.oneofs) object.valueType = \"geoPointValue\";\n            }\n\n            if (message.arrayValue != null && message.hasOwnProperty(\"arrayValue\")) {\n              object.arrayValue = $root.google.firestore.v1.ArrayValue.toObject(message.arrayValue, options);\n              if (options.oneofs) object.valueType = \"arrayValue\";\n            }\n\n            if (message.timestampValue != null && message.hasOwnProperty(\"timestampValue\")) {\n              object.timestampValue = $root.google.protobuf.Timestamp.toObject(message.timestampValue, options);\n              if (options.oneofs) object.valueType = \"timestampValue\";\n            }\n\n            if (message.nullValue != null && message.hasOwnProperty(\"nullValue\")) {\n              object.nullValue = options.enums === String ? $root.google.protobuf.NullValue[message.nullValue] : message.nullValue;\n              if (options.oneofs) object.valueType = \"nullValue\";\n            }\n\n            if (message.stringValue != null && message.hasOwnProperty(\"stringValue\")) {\n              object.stringValue = message.stringValue;\n              if (options.oneofs) object.valueType = \"stringValue\";\n            }\n\n            if (message.bytesValue != null && message.hasOwnProperty(\"bytesValue\")) {\n              object.bytesValue = options.bytes === String ? $util.base64.encode(message.bytesValue, 0, message.bytesValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.bytesValue) : message.bytesValue;\n              if (options.oneofs) object.valueType = \"bytesValue\";\n            }\n\n            return object;\n          };\n          /**\n           * Converts this Value to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.Value\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          Value.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return Value;\n        }();\n\n        v1.ArrayValue = function () {\n          /**\n           * Properties of an ArrayValue.\n           * @memberof google.firestore.v1\n           * @interface IArrayValue\n           * @property {Array.<google.firestore.v1.IValue>|null} [values] ArrayValue values\n           */\n\n          /**\n           * Constructs a new ArrayValue.\n           * @memberof google.firestore.v1\n           * @classdesc Represents an ArrayValue.\n           * @implements IArrayValue\n           * @constructor\n           * @param {google.firestore.v1.IArrayValue=} [properties] Properties to set\n           */\n          function ArrayValue(properties) {\n            this.values = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * ArrayValue values.\n           * @member {Array.<google.firestore.v1.IValue>} values\n           * @memberof google.firestore.v1.ArrayValue\n           * @instance\n           */\n\n\n          ArrayValue.prototype.values = $util.emptyArray;\n          /**\n           * Creates an ArrayValue message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.ArrayValue\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.ArrayValue} ArrayValue\n           */\n\n          ArrayValue.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.ArrayValue) return object;\n            var message = new $root.google.firestore.v1.ArrayValue();\n\n            if (object.values) {\n              if (!Array.isArray(object.values)) throw TypeError(\".google.firestore.v1.ArrayValue.values: array expected\");\n              message.values = [];\n\n              for (var i = 0; i < object.values.length; ++i) {\n                if (typeof object.values[i] !== \"object\") throw TypeError(\".google.firestore.v1.ArrayValue.values: object expected\");\n                message.values[i] = $root.google.firestore.v1.Value.fromObject(object.values[i]);\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from an ArrayValue message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.ArrayValue\n           * @static\n           * @param {google.firestore.v1.ArrayValue} message ArrayValue\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          ArrayValue.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.values = [];\n\n            if (message.values && message.values.length) {\n              object.values = [];\n\n              for (var j = 0; j < message.values.length; ++j) {\n                object.values[j] = $root.google.firestore.v1.Value.toObject(message.values[j], options);\n              }\n            }\n\n            return object;\n          };\n          /**\n           * Converts this ArrayValue to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.ArrayValue\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          ArrayValue.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return ArrayValue;\n        }();\n\n        v1.MapValue = function () {\n          /**\n           * Properties of a MapValue.\n           * @memberof google.firestore.v1\n           * @interface IMapValue\n           * @property {Object.<string,google.firestore.v1.IValue>|null} [fields] MapValue fields\n           */\n\n          /**\n           * Constructs a new MapValue.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a MapValue.\n           * @implements IMapValue\n           * @constructor\n           * @param {google.firestore.v1.IMapValue=} [properties] Properties to set\n           */\n          function MapValue(properties) {\n            this.fields = {};\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * MapValue fields.\n           * @member {Object.<string,google.firestore.v1.IValue>} fields\n           * @memberof google.firestore.v1.MapValue\n           * @instance\n           */\n\n\n          MapValue.prototype.fields = $util.emptyObject;\n          /**\n           * Creates a MapValue message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.MapValue\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.MapValue} MapValue\n           */\n\n          MapValue.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.MapValue) return object;\n            var message = new $root.google.firestore.v1.MapValue();\n\n            if (object.fields) {\n              if (typeof object.fields !== \"object\") throw TypeError(\".google.firestore.v1.MapValue.fields: object expected\");\n              message.fields = {};\n\n              for (var keys = Object.keys(object.fields), i = 0; i < keys.length; ++i) {\n                if (typeof object.fields[keys[i]] !== \"object\") throw TypeError(\".google.firestore.v1.MapValue.fields: object expected\");\n                message.fields[keys[i]] = $root.google.firestore.v1.Value.fromObject(object.fields[keys[i]]);\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a MapValue message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.MapValue\n           * @static\n           * @param {google.firestore.v1.MapValue} message MapValue\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          MapValue.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.objects || options.defaults) object.fields = {};\n            var keys2;\n\n            if (message.fields && (keys2 = Object.keys(message.fields)).length) {\n              object.fields = {};\n\n              for (var j = 0; j < keys2.length; ++j) {\n                object.fields[keys2[j]] = $root.google.firestore.v1.Value.toObject(message.fields[keys2[j]], options);\n              }\n            }\n\n            return object;\n          };\n          /**\n           * Converts this MapValue to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.MapValue\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          MapValue.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return MapValue;\n        }();\n\n        v1.Firestore = function () {\n          /**\n           * Constructs a new Firestore service.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a Firestore\n           * @extends $protobuf.rpc.Service\n           * @constructor\n           * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n           * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n           * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n           */\n          function Firestore(rpcImpl, requestDelimited, responseDelimited) {\n            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);\n          }\n\n          (Firestore.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Firestore;\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#getDocument}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef GetDocumentCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.firestore.v1.Document} [response] Document\n           */\n\n          /**\n           * Calls GetDocument.\n           * @function getDocument\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IGetDocumentRequest} request GetDocumentRequest message or plain object\n           * @param {google.firestore.v1.Firestore.GetDocumentCallback} callback Node-style callback called with the error, if any, and Document\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.getDocument = function getDocument(request, callback) {\n            return this.rpcCall(getDocument, $root.google.firestore.v1.GetDocumentRequest, $root.google.firestore.v1.Document, request, callback);\n          }, \"name\", {\n            value: \"GetDocument\"\n          });\n          /**\n           * Calls GetDocument.\n           * @function getDocument\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IGetDocumentRequest} request GetDocumentRequest message or plain object\n           * @returns {Promise<google.firestore.v1.Document>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#listDocuments}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef ListDocumentsCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.firestore.v1.ListDocumentsResponse} [response] ListDocumentsResponse\n           */\n\n          /**\n           * Calls ListDocuments.\n           * @function listDocuments\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IListDocumentsRequest} request ListDocumentsRequest message or plain object\n           * @param {google.firestore.v1.Firestore.ListDocumentsCallback} callback Node-style callback called with the error, if any, and ListDocumentsResponse\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.listDocuments = function listDocuments(request, callback) {\n            return this.rpcCall(listDocuments, $root.google.firestore.v1.ListDocumentsRequest, $root.google.firestore.v1.ListDocumentsResponse, request, callback);\n          }, \"name\", {\n            value: \"ListDocuments\"\n          });\n          /**\n           * Calls ListDocuments.\n           * @function listDocuments\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IListDocumentsRequest} request ListDocumentsRequest message or plain object\n           * @returns {Promise<google.firestore.v1.ListDocumentsResponse>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#updateDocument}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef UpdateDocumentCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.firestore.v1.Document} [response] Document\n           */\n\n          /**\n           * Calls UpdateDocument.\n           * @function updateDocument\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IUpdateDocumentRequest} request UpdateDocumentRequest message or plain object\n           * @param {google.firestore.v1.Firestore.UpdateDocumentCallback} callback Node-style callback called with the error, if any, and Document\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.updateDocument = function updateDocument(request, callback) {\n            return this.rpcCall(updateDocument, $root.google.firestore.v1.UpdateDocumentRequest, $root.google.firestore.v1.Document, request, callback);\n          }, \"name\", {\n            value: \"UpdateDocument\"\n          });\n          /**\n           * Calls UpdateDocument.\n           * @function updateDocument\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IUpdateDocumentRequest} request UpdateDocumentRequest message or plain object\n           * @returns {Promise<google.firestore.v1.Document>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#deleteDocument}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef DeleteDocumentCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.protobuf.Empty} [response] Empty\n           */\n\n          /**\n           * Calls DeleteDocument.\n           * @function deleteDocument\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IDeleteDocumentRequest} request DeleteDocumentRequest message or plain object\n           * @param {google.firestore.v1.Firestore.DeleteDocumentCallback} callback Node-style callback called with the error, if any, and Empty\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.deleteDocument = function deleteDocument(request, callback) {\n            return this.rpcCall(deleteDocument, $root.google.firestore.v1.DeleteDocumentRequest, $root.google.protobuf.Empty, request, callback);\n          }, \"name\", {\n            value: \"DeleteDocument\"\n          });\n          /**\n           * Calls DeleteDocument.\n           * @function deleteDocument\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IDeleteDocumentRequest} request DeleteDocumentRequest message or plain object\n           * @returns {Promise<google.protobuf.Empty>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#batchGetDocuments}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef BatchGetDocumentsCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.firestore.v1.BatchGetDocumentsResponse} [response] BatchGetDocumentsResponse\n           */\n\n          /**\n           * Calls BatchGetDocuments.\n           * @function batchGetDocuments\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IBatchGetDocumentsRequest} request BatchGetDocumentsRequest message or plain object\n           * @param {google.firestore.v1.Firestore.BatchGetDocumentsCallback} callback Node-style callback called with the error, if any, and BatchGetDocumentsResponse\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.batchGetDocuments = function batchGetDocuments(request, callback) {\n            return this.rpcCall(batchGetDocuments, $root.google.firestore.v1.BatchGetDocumentsRequest, $root.google.firestore.v1.BatchGetDocumentsResponse, request, callback);\n          }, \"name\", {\n            value: \"BatchGetDocuments\"\n          });\n          /**\n           * Calls BatchGetDocuments.\n           * @function batchGetDocuments\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IBatchGetDocumentsRequest} request BatchGetDocumentsRequest message or plain object\n           * @returns {Promise<google.firestore.v1.BatchGetDocumentsResponse>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#beginTransaction}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef BeginTransactionCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.firestore.v1.BeginTransactionResponse} [response] BeginTransactionResponse\n           */\n\n          /**\n           * Calls BeginTransaction.\n           * @function beginTransaction\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IBeginTransactionRequest} request BeginTransactionRequest message or plain object\n           * @param {google.firestore.v1.Firestore.BeginTransactionCallback} callback Node-style callback called with the error, if any, and BeginTransactionResponse\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.beginTransaction = function beginTransaction(request, callback) {\n            return this.rpcCall(beginTransaction, $root.google.firestore.v1.BeginTransactionRequest, $root.google.firestore.v1.BeginTransactionResponse, request, callback);\n          }, \"name\", {\n            value: \"BeginTransaction\"\n          });\n          /**\n           * Calls BeginTransaction.\n           * @function beginTransaction\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IBeginTransactionRequest} request BeginTransactionRequest message or plain object\n           * @returns {Promise<google.firestore.v1.BeginTransactionResponse>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#commit}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef CommitCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.firestore.v1.CommitResponse} [response] CommitResponse\n           */\n\n          /**\n           * Calls Commit.\n           * @function commit\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.ICommitRequest} request CommitRequest message or plain object\n           * @param {google.firestore.v1.Firestore.CommitCallback} callback Node-style callback called with the error, if any, and CommitResponse\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.commit = function commit(request, callback) {\n            return this.rpcCall(commit, $root.google.firestore.v1.CommitRequest, $root.google.firestore.v1.CommitResponse, request, callback);\n          }, \"name\", {\n            value: \"Commit\"\n          });\n          /**\n           * Calls Commit.\n           * @function commit\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.ICommitRequest} request CommitRequest message or plain object\n           * @returns {Promise<google.firestore.v1.CommitResponse>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#rollback}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef RollbackCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.protobuf.Empty} [response] Empty\n           */\n\n          /**\n           * Calls Rollback.\n           * @function rollback\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IRollbackRequest} request RollbackRequest message or plain object\n           * @param {google.firestore.v1.Firestore.RollbackCallback} callback Node-style callback called with the error, if any, and Empty\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.rollback = function rollback(request, callback) {\n            return this.rpcCall(rollback, $root.google.firestore.v1.RollbackRequest, $root.google.protobuf.Empty, request, callback);\n          }, \"name\", {\n            value: \"Rollback\"\n          });\n          /**\n           * Calls Rollback.\n           * @function rollback\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IRollbackRequest} request RollbackRequest message or plain object\n           * @returns {Promise<google.protobuf.Empty>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#runQuery}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef RunQueryCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.firestore.v1.RunQueryResponse} [response] RunQueryResponse\n           */\n\n          /**\n           * Calls RunQuery.\n           * @function runQuery\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IRunQueryRequest} request RunQueryRequest message or plain object\n           * @param {google.firestore.v1.Firestore.RunQueryCallback} callback Node-style callback called with the error, if any, and RunQueryResponse\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.runQuery = function runQuery(request, callback) {\n            return this.rpcCall(runQuery, $root.google.firestore.v1.RunQueryRequest, $root.google.firestore.v1.RunQueryResponse, request, callback);\n          }, \"name\", {\n            value: \"RunQuery\"\n          });\n          /**\n           * Calls RunQuery.\n           * @function runQuery\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IRunQueryRequest} request RunQueryRequest message or plain object\n           * @returns {Promise<google.firestore.v1.RunQueryResponse>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#partitionQuery}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef PartitionQueryCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.firestore.v1.PartitionQueryResponse} [response] PartitionQueryResponse\n           */\n\n          /**\n           * Calls PartitionQuery.\n           * @function partitionQuery\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IPartitionQueryRequest} request PartitionQueryRequest message or plain object\n           * @param {google.firestore.v1.Firestore.PartitionQueryCallback} callback Node-style callback called with the error, if any, and PartitionQueryResponse\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.partitionQuery = function partitionQuery(request, callback) {\n            return this.rpcCall(partitionQuery, $root.google.firestore.v1.PartitionQueryRequest, $root.google.firestore.v1.PartitionQueryResponse, request, callback);\n          }, \"name\", {\n            value: \"PartitionQuery\"\n          });\n          /**\n           * Calls PartitionQuery.\n           * @function partitionQuery\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IPartitionQueryRequest} request PartitionQueryRequest message or plain object\n           * @returns {Promise<google.firestore.v1.PartitionQueryResponse>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#write}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef WriteCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.firestore.v1.WriteResponse} [response] WriteResponse\n           */\n\n          /**\n           * Calls Write.\n           * @function write\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IWriteRequest} request WriteRequest message or plain object\n           * @param {google.firestore.v1.Firestore.WriteCallback} callback Node-style callback called with the error, if any, and WriteResponse\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.write = function write(request, callback) {\n            return this.rpcCall(write, $root.google.firestore.v1.WriteRequest, $root.google.firestore.v1.WriteResponse, request, callback);\n          }, \"name\", {\n            value: \"Write\"\n          });\n          /**\n           * Calls Write.\n           * @function write\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IWriteRequest} request WriteRequest message or plain object\n           * @returns {Promise<google.firestore.v1.WriteResponse>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#listen}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef ListenCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.firestore.v1.ListenResponse} [response] ListenResponse\n           */\n\n          /**\n           * Calls Listen.\n           * @function listen\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IListenRequest} request ListenRequest message or plain object\n           * @param {google.firestore.v1.Firestore.ListenCallback} callback Node-style callback called with the error, if any, and ListenResponse\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.listen = function listen(request, callback) {\n            return this.rpcCall(listen, $root.google.firestore.v1.ListenRequest, $root.google.firestore.v1.ListenResponse, request, callback);\n          }, \"name\", {\n            value: \"Listen\"\n          });\n          /**\n           * Calls Listen.\n           * @function listen\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IListenRequest} request ListenRequest message or plain object\n           * @returns {Promise<google.firestore.v1.ListenResponse>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#listCollectionIds}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef ListCollectionIdsCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.firestore.v1.ListCollectionIdsResponse} [response] ListCollectionIdsResponse\n           */\n\n          /**\n           * Calls ListCollectionIds.\n           * @function listCollectionIds\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IListCollectionIdsRequest} request ListCollectionIdsRequest message or plain object\n           * @param {google.firestore.v1.Firestore.ListCollectionIdsCallback} callback Node-style callback called with the error, if any, and ListCollectionIdsResponse\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.listCollectionIds = function listCollectionIds(request, callback) {\n            return this.rpcCall(listCollectionIds, $root.google.firestore.v1.ListCollectionIdsRequest, $root.google.firestore.v1.ListCollectionIdsResponse, request, callback);\n          }, \"name\", {\n            value: \"ListCollectionIds\"\n          });\n          /**\n           * Calls ListCollectionIds.\n           * @function listCollectionIds\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IListCollectionIdsRequest} request ListCollectionIdsRequest message or plain object\n           * @returns {Promise<google.firestore.v1.ListCollectionIdsResponse>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#batchWrite}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef BatchWriteCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.firestore.v1.BatchWriteResponse} [response] BatchWriteResponse\n           */\n\n          /**\n           * Calls BatchWrite.\n           * @function batchWrite\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IBatchWriteRequest} request BatchWriteRequest message or plain object\n           * @param {google.firestore.v1.Firestore.BatchWriteCallback} callback Node-style callback called with the error, if any, and BatchWriteResponse\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.batchWrite = function batchWrite(request, callback) {\n            return this.rpcCall(batchWrite, $root.google.firestore.v1.BatchWriteRequest, $root.google.firestore.v1.BatchWriteResponse, request, callback);\n          }, \"name\", {\n            value: \"BatchWrite\"\n          });\n          /**\n           * Calls BatchWrite.\n           * @function batchWrite\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.IBatchWriteRequest} request BatchWriteRequest message or plain object\n           * @returns {Promise<google.firestore.v1.BatchWriteResponse>} Promise\n           * @variation 2\n           */\n\n          /**\n           * Callback as used by {@link google.firestore.v1.Firestore#createDocument}.\n           * @memberof google.firestore.v1.Firestore\n           * @typedef CreateDocumentCallback\n           * @type {function}\n           * @param {Error|null} error Error, if any\n           * @param {google.firestore.v1.Document} [response] Document\n           */\n\n          /**\n           * Calls CreateDocument.\n           * @function createDocument\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.ICreateDocumentRequest} request CreateDocumentRequest message or plain object\n           * @param {google.firestore.v1.Firestore.CreateDocumentCallback} callback Node-style callback called with the error, if any, and Document\n           * @returns {undefined}\n           * @variation 1\n           */\n\n          Object.defineProperty(Firestore.prototype.createDocument = function createDocument(request, callback) {\n            return this.rpcCall(createDocument, $root.google.firestore.v1.CreateDocumentRequest, $root.google.firestore.v1.Document, request, callback);\n          }, \"name\", {\n            value: \"CreateDocument\"\n          });\n          /**\n           * Calls CreateDocument.\n           * @function createDocument\n           * @memberof google.firestore.v1.Firestore\n           * @instance\n           * @param {google.firestore.v1.ICreateDocumentRequest} request CreateDocumentRequest message or plain object\n           * @returns {Promise<google.firestore.v1.Document>} Promise\n           * @variation 2\n           */\n\n          return Firestore;\n        }();\n\n        v1.GetDocumentRequest = function () {\n          /**\n           * Properties of a GetDocumentRequest.\n           * @memberof google.firestore.v1\n           * @interface IGetDocumentRequest\n           * @property {string|null} [name] GetDocumentRequest name\n           * @property {google.firestore.v1.IDocumentMask|null} [mask] GetDocumentRequest mask\n           * @property {Uint8Array|null} [transaction] GetDocumentRequest transaction\n           * @property {google.protobuf.ITimestamp|null} [readTime] GetDocumentRequest readTime\n           */\n\n          /**\n           * Constructs a new GetDocumentRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a GetDocumentRequest.\n           * @implements IGetDocumentRequest\n           * @constructor\n           * @param {google.firestore.v1.IGetDocumentRequest=} [properties] Properties to set\n           */\n          function GetDocumentRequest(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * GetDocumentRequest name.\n           * @member {string} name\n           * @memberof google.firestore.v1.GetDocumentRequest\n           * @instance\n           */\n\n\n          GetDocumentRequest.prototype.name = \"\";\n          /**\n           * GetDocumentRequest mask.\n           * @member {google.firestore.v1.IDocumentMask|null|undefined} mask\n           * @memberof google.firestore.v1.GetDocumentRequest\n           * @instance\n           */\n\n          GetDocumentRequest.prototype.mask = null;\n          /**\n           * GetDocumentRequest transaction.\n           * @member {Uint8Array|null|undefined} transaction\n           * @memberof google.firestore.v1.GetDocumentRequest\n           * @instance\n           */\n\n          GetDocumentRequest.prototype.transaction = null;\n          /**\n           * GetDocumentRequest readTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} readTime\n           * @memberof google.firestore.v1.GetDocumentRequest\n           * @instance\n           */\n\n          GetDocumentRequest.prototype.readTime = null; // OneOf field names bound to virtual getters and setters\n\n          var $oneOfFields;\n          /**\n           * GetDocumentRequest consistencySelector.\n           * @member {\"transaction\"|\"readTime\"|undefined} consistencySelector\n           * @memberof google.firestore.v1.GetDocumentRequest\n           * @instance\n           */\n\n          Object.defineProperty(GetDocumentRequest.prototype, \"consistencySelector\", {\n            get: $util.oneOfGetter($oneOfFields = [\"transaction\", \"readTime\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Creates a GetDocumentRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.GetDocumentRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.GetDocumentRequest} GetDocumentRequest\n           */\n\n          GetDocumentRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.GetDocumentRequest) return object;\n            var message = new $root.google.firestore.v1.GetDocumentRequest();\n            if (object.name != null) message.name = String(object.name);\n\n            if (object.mask != null) {\n              if (typeof object.mask !== \"object\") throw TypeError(\".google.firestore.v1.GetDocumentRequest.mask: object expected\");\n              message.mask = $root.google.firestore.v1.DocumentMask.fromObject(object.mask);\n            }\n\n            if (object.transaction != null) if (typeof object.transaction === \"string\") $util.base64.decode(object.transaction, message.transaction = $util.newBuffer($util.base64.length(object.transaction)), 0);else if (object.transaction.length) message.transaction = object.transaction;\n\n            if (object.readTime != null) {\n              if (typeof object.readTime !== \"object\") throw TypeError(\".google.firestore.v1.GetDocumentRequest.readTime: object expected\");\n              message.readTime = $root.google.protobuf.Timestamp.fromObject(object.readTime);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a GetDocumentRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.GetDocumentRequest\n           * @static\n           * @param {google.firestore.v1.GetDocumentRequest} message GetDocumentRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          GetDocumentRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.name = \"\";\n              object.mask = null;\n            }\n\n            if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n            if (message.mask != null && message.hasOwnProperty(\"mask\")) object.mask = $root.google.firestore.v1.DocumentMask.toObject(message.mask, options);\n\n            if (message.transaction != null && message.hasOwnProperty(\"transaction\")) {\n              object.transaction = options.bytes === String ? $util.base64.encode(message.transaction, 0, message.transaction.length) : options.bytes === Array ? Array.prototype.slice.call(message.transaction) : message.transaction;\n              if (options.oneofs) object.consistencySelector = \"transaction\";\n            }\n\n            if (message.readTime != null && message.hasOwnProperty(\"readTime\")) {\n              object.readTime = $root.google.protobuf.Timestamp.toObject(message.readTime, options);\n              if (options.oneofs) object.consistencySelector = \"readTime\";\n            }\n\n            return object;\n          };\n          /**\n           * Converts this GetDocumentRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.GetDocumentRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          GetDocumentRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return GetDocumentRequest;\n        }();\n\n        v1.ListDocumentsRequest = function () {\n          /**\n           * Properties of a ListDocumentsRequest.\n           * @memberof google.firestore.v1\n           * @interface IListDocumentsRequest\n           * @property {string|null} [parent] ListDocumentsRequest parent\n           * @property {string|null} [collectionId] ListDocumentsRequest collectionId\n           * @property {number|null} [pageSize] ListDocumentsRequest pageSize\n           * @property {string|null} [pageToken] ListDocumentsRequest pageToken\n           * @property {string|null} [orderBy] ListDocumentsRequest orderBy\n           * @property {google.firestore.v1.IDocumentMask|null} [mask] ListDocumentsRequest mask\n           * @property {Uint8Array|null} [transaction] ListDocumentsRequest transaction\n           * @property {google.protobuf.ITimestamp|null} [readTime] ListDocumentsRequest readTime\n           * @property {boolean|null} [showMissing] ListDocumentsRequest showMissing\n           */\n\n          /**\n           * Constructs a new ListDocumentsRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a ListDocumentsRequest.\n           * @implements IListDocumentsRequest\n           * @constructor\n           * @param {google.firestore.v1.IListDocumentsRequest=} [properties] Properties to set\n           */\n          function ListDocumentsRequest(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * ListDocumentsRequest parent.\n           * @member {string} parent\n           * @memberof google.firestore.v1.ListDocumentsRequest\n           * @instance\n           */\n\n\n          ListDocumentsRequest.prototype.parent = \"\";\n          /**\n           * ListDocumentsRequest collectionId.\n           * @member {string} collectionId\n           * @memberof google.firestore.v1.ListDocumentsRequest\n           * @instance\n           */\n\n          ListDocumentsRequest.prototype.collectionId = \"\";\n          /**\n           * ListDocumentsRequest pageSize.\n           * @member {number} pageSize\n           * @memberof google.firestore.v1.ListDocumentsRequest\n           * @instance\n           */\n\n          ListDocumentsRequest.prototype.pageSize = 0;\n          /**\n           * ListDocumentsRequest pageToken.\n           * @member {string} pageToken\n           * @memberof google.firestore.v1.ListDocumentsRequest\n           * @instance\n           */\n\n          ListDocumentsRequest.prototype.pageToken = \"\";\n          /**\n           * ListDocumentsRequest orderBy.\n           * @member {string} orderBy\n           * @memberof google.firestore.v1.ListDocumentsRequest\n           * @instance\n           */\n\n          ListDocumentsRequest.prototype.orderBy = \"\";\n          /**\n           * ListDocumentsRequest mask.\n           * @member {google.firestore.v1.IDocumentMask|null|undefined} mask\n           * @memberof google.firestore.v1.ListDocumentsRequest\n           * @instance\n           */\n\n          ListDocumentsRequest.prototype.mask = null;\n          /**\n           * ListDocumentsRequest transaction.\n           * @member {Uint8Array|null|undefined} transaction\n           * @memberof google.firestore.v1.ListDocumentsRequest\n           * @instance\n           */\n\n          ListDocumentsRequest.prototype.transaction = null;\n          /**\n           * ListDocumentsRequest readTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} readTime\n           * @memberof google.firestore.v1.ListDocumentsRequest\n           * @instance\n           */\n\n          ListDocumentsRequest.prototype.readTime = null;\n          /**\n           * ListDocumentsRequest showMissing.\n           * @member {boolean} showMissing\n           * @memberof google.firestore.v1.ListDocumentsRequest\n           * @instance\n           */\n\n          ListDocumentsRequest.prototype.showMissing = false; // OneOf field names bound to virtual getters and setters\n\n          var $oneOfFields;\n          /**\n           * ListDocumentsRequest consistencySelector.\n           * @member {\"transaction\"|\"readTime\"|undefined} consistencySelector\n           * @memberof google.firestore.v1.ListDocumentsRequest\n           * @instance\n           */\n\n          Object.defineProperty(ListDocumentsRequest.prototype, \"consistencySelector\", {\n            get: $util.oneOfGetter($oneOfFields = [\"transaction\", \"readTime\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Creates a ListDocumentsRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.ListDocumentsRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.ListDocumentsRequest} ListDocumentsRequest\n           */\n\n          ListDocumentsRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.ListDocumentsRequest) return object;\n            var message = new $root.google.firestore.v1.ListDocumentsRequest();\n            if (object.parent != null) message.parent = String(object.parent);\n            if (object.collectionId != null) message.collectionId = String(object.collectionId);\n            if (object.pageSize != null) message.pageSize = object.pageSize | 0;\n            if (object.pageToken != null) message.pageToken = String(object.pageToken);\n            if (object.orderBy != null) message.orderBy = String(object.orderBy);\n\n            if (object.mask != null) {\n              if (typeof object.mask !== \"object\") throw TypeError(\".google.firestore.v1.ListDocumentsRequest.mask: object expected\");\n              message.mask = $root.google.firestore.v1.DocumentMask.fromObject(object.mask);\n            }\n\n            if (object.transaction != null) if (typeof object.transaction === \"string\") $util.base64.decode(object.transaction, message.transaction = $util.newBuffer($util.base64.length(object.transaction)), 0);else if (object.transaction.length) message.transaction = object.transaction;\n\n            if (object.readTime != null) {\n              if (typeof object.readTime !== \"object\") throw TypeError(\".google.firestore.v1.ListDocumentsRequest.readTime: object expected\");\n              message.readTime = $root.google.protobuf.Timestamp.fromObject(object.readTime);\n            }\n\n            if (object.showMissing != null) message.showMissing = Boolean(object.showMissing);\n            return message;\n          };\n          /**\n           * Creates a plain object from a ListDocumentsRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.ListDocumentsRequest\n           * @static\n           * @param {google.firestore.v1.ListDocumentsRequest} message ListDocumentsRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          ListDocumentsRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.parent = \"\";\n              object.collectionId = \"\";\n              object.pageSize = 0;\n              object.pageToken = \"\";\n              object.orderBy = \"\";\n              object.mask = null;\n              object.showMissing = false;\n            }\n\n            if (message.parent != null && message.hasOwnProperty(\"parent\")) object.parent = message.parent;\n            if (message.collectionId != null && message.hasOwnProperty(\"collectionId\")) object.collectionId = message.collectionId;\n            if (message.pageSize != null && message.hasOwnProperty(\"pageSize\")) object.pageSize = message.pageSize;\n            if (message.pageToken != null && message.hasOwnProperty(\"pageToken\")) object.pageToken = message.pageToken;\n            if (message.orderBy != null && message.hasOwnProperty(\"orderBy\")) object.orderBy = message.orderBy;\n            if (message.mask != null && message.hasOwnProperty(\"mask\")) object.mask = $root.google.firestore.v1.DocumentMask.toObject(message.mask, options);\n\n            if (message.transaction != null && message.hasOwnProperty(\"transaction\")) {\n              object.transaction = options.bytes === String ? $util.base64.encode(message.transaction, 0, message.transaction.length) : options.bytes === Array ? Array.prototype.slice.call(message.transaction) : message.transaction;\n              if (options.oneofs) object.consistencySelector = \"transaction\";\n            }\n\n            if (message.readTime != null && message.hasOwnProperty(\"readTime\")) {\n              object.readTime = $root.google.protobuf.Timestamp.toObject(message.readTime, options);\n              if (options.oneofs) object.consistencySelector = \"readTime\";\n            }\n\n            if (message.showMissing != null && message.hasOwnProperty(\"showMissing\")) object.showMissing = message.showMissing;\n            return object;\n          };\n          /**\n           * Converts this ListDocumentsRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.ListDocumentsRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          ListDocumentsRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return ListDocumentsRequest;\n        }();\n\n        v1.ListDocumentsResponse = function () {\n          /**\n           * Properties of a ListDocumentsResponse.\n           * @memberof google.firestore.v1\n           * @interface IListDocumentsResponse\n           * @property {Array.<google.firestore.v1.IDocument>|null} [documents] ListDocumentsResponse documents\n           * @property {string|null} [nextPageToken] ListDocumentsResponse nextPageToken\n           */\n\n          /**\n           * Constructs a new ListDocumentsResponse.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a ListDocumentsResponse.\n           * @implements IListDocumentsResponse\n           * @constructor\n           * @param {google.firestore.v1.IListDocumentsResponse=} [properties] Properties to set\n           */\n          function ListDocumentsResponse(properties) {\n            this.documents = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * ListDocumentsResponse documents.\n           * @member {Array.<google.firestore.v1.IDocument>} documents\n           * @memberof google.firestore.v1.ListDocumentsResponse\n           * @instance\n           */\n\n\n          ListDocumentsResponse.prototype.documents = $util.emptyArray;\n          /**\n           * ListDocumentsResponse nextPageToken.\n           * @member {string} nextPageToken\n           * @memberof google.firestore.v1.ListDocumentsResponse\n           * @instance\n           */\n\n          ListDocumentsResponse.prototype.nextPageToken = \"\";\n          /**\n           * Creates a ListDocumentsResponse message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.ListDocumentsResponse\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.ListDocumentsResponse} ListDocumentsResponse\n           */\n\n          ListDocumentsResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.ListDocumentsResponse) return object;\n            var message = new $root.google.firestore.v1.ListDocumentsResponse();\n\n            if (object.documents) {\n              if (!Array.isArray(object.documents)) throw TypeError(\".google.firestore.v1.ListDocumentsResponse.documents: array expected\");\n              message.documents = [];\n\n              for (var i = 0; i < object.documents.length; ++i) {\n                if (typeof object.documents[i] !== \"object\") throw TypeError(\".google.firestore.v1.ListDocumentsResponse.documents: object expected\");\n                message.documents[i] = $root.google.firestore.v1.Document.fromObject(object.documents[i]);\n              }\n            }\n\n            if (object.nextPageToken != null) message.nextPageToken = String(object.nextPageToken);\n            return message;\n          };\n          /**\n           * Creates a plain object from a ListDocumentsResponse message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.ListDocumentsResponse\n           * @static\n           * @param {google.firestore.v1.ListDocumentsResponse} message ListDocumentsResponse\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          ListDocumentsResponse.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.documents = [];\n            if (options.defaults) object.nextPageToken = \"\";\n\n            if (message.documents && message.documents.length) {\n              object.documents = [];\n\n              for (var j = 0; j < message.documents.length; ++j) {\n                object.documents[j] = $root.google.firestore.v1.Document.toObject(message.documents[j], options);\n              }\n            }\n\n            if (message.nextPageToken != null && message.hasOwnProperty(\"nextPageToken\")) object.nextPageToken = message.nextPageToken;\n            return object;\n          };\n          /**\n           * Converts this ListDocumentsResponse to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.ListDocumentsResponse\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          ListDocumentsResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return ListDocumentsResponse;\n        }();\n\n        v1.CreateDocumentRequest = function () {\n          /**\n           * Properties of a CreateDocumentRequest.\n           * @memberof google.firestore.v1\n           * @interface ICreateDocumentRequest\n           * @property {string|null} [parent] CreateDocumentRequest parent\n           * @property {string|null} [collectionId] CreateDocumentRequest collectionId\n           * @property {string|null} [documentId] CreateDocumentRequest documentId\n           * @property {google.firestore.v1.IDocument|null} [document] CreateDocumentRequest document\n           * @property {google.firestore.v1.IDocumentMask|null} [mask] CreateDocumentRequest mask\n           */\n\n          /**\n           * Constructs a new CreateDocumentRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a CreateDocumentRequest.\n           * @implements ICreateDocumentRequest\n           * @constructor\n           * @param {google.firestore.v1.ICreateDocumentRequest=} [properties] Properties to set\n           */\n          function CreateDocumentRequest(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * CreateDocumentRequest parent.\n           * @member {string} parent\n           * @memberof google.firestore.v1.CreateDocumentRequest\n           * @instance\n           */\n\n\n          CreateDocumentRequest.prototype.parent = \"\";\n          /**\n           * CreateDocumentRequest collectionId.\n           * @member {string} collectionId\n           * @memberof google.firestore.v1.CreateDocumentRequest\n           * @instance\n           */\n\n          CreateDocumentRequest.prototype.collectionId = \"\";\n          /**\n           * CreateDocumentRequest documentId.\n           * @member {string} documentId\n           * @memberof google.firestore.v1.CreateDocumentRequest\n           * @instance\n           */\n\n          CreateDocumentRequest.prototype.documentId = \"\";\n          /**\n           * CreateDocumentRequest document.\n           * @member {google.firestore.v1.IDocument|null|undefined} document\n           * @memberof google.firestore.v1.CreateDocumentRequest\n           * @instance\n           */\n\n          CreateDocumentRequest.prototype.document = null;\n          /**\n           * CreateDocumentRequest mask.\n           * @member {google.firestore.v1.IDocumentMask|null|undefined} mask\n           * @memberof google.firestore.v1.CreateDocumentRequest\n           * @instance\n           */\n\n          CreateDocumentRequest.prototype.mask = null;\n          /**\n           * Creates a CreateDocumentRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.CreateDocumentRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.CreateDocumentRequest} CreateDocumentRequest\n           */\n\n          CreateDocumentRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.CreateDocumentRequest) return object;\n            var message = new $root.google.firestore.v1.CreateDocumentRequest();\n            if (object.parent != null) message.parent = String(object.parent);\n            if (object.collectionId != null) message.collectionId = String(object.collectionId);\n            if (object.documentId != null) message.documentId = String(object.documentId);\n\n            if (object.document != null) {\n              if (typeof object.document !== \"object\") throw TypeError(\".google.firestore.v1.CreateDocumentRequest.document: object expected\");\n              message.document = $root.google.firestore.v1.Document.fromObject(object.document);\n            }\n\n            if (object.mask != null) {\n              if (typeof object.mask !== \"object\") throw TypeError(\".google.firestore.v1.CreateDocumentRequest.mask: object expected\");\n              message.mask = $root.google.firestore.v1.DocumentMask.fromObject(object.mask);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a CreateDocumentRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.CreateDocumentRequest\n           * @static\n           * @param {google.firestore.v1.CreateDocumentRequest} message CreateDocumentRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          CreateDocumentRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.parent = \"\";\n              object.collectionId = \"\";\n              object.documentId = \"\";\n              object.document = null;\n              object.mask = null;\n            }\n\n            if (message.parent != null && message.hasOwnProperty(\"parent\")) object.parent = message.parent;\n            if (message.collectionId != null && message.hasOwnProperty(\"collectionId\")) object.collectionId = message.collectionId;\n            if (message.documentId != null && message.hasOwnProperty(\"documentId\")) object.documentId = message.documentId;\n            if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.firestore.v1.Document.toObject(message.document, options);\n            if (message.mask != null && message.hasOwnProperty(\"mask\")) object.mask = $root.google.firestore.v1.DocumentMask.toObject(message.mask, options);\n            return object;\n          };\n          /**\n           * Converts this CreateDocumentRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.CreateDocumentRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          CreateDocumentRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return CreateDocumentRequest;\n        }();\n\n        v1.UpdateDocumentRequest = function () {\n          /**\n           * Properties of an UpdateDocumentRequest.\n           * @memberof google.firestore.v1\n           * @interface IUpdateDocumentRequest\n           * @property {google.firestore.v1.IDocument|null} [document] UpdateDocumentRequest document\n           * @property {google.firestore.v1.IDocumentMask|null} [updateMask] UpdateDocumentRequest updateMask\n           * @property {google.firestore.v1.IDocumentMask|null} [mask] UpdateDocumentRequest mask\n           * @property {google.firestore.v1.IPrecondition|null} [currentDocument] UpdateDocumentRequest currentDocument\n           */\n\n          /**\n           * Constructs a new UpdateDocumentRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents an UpdateDocumentRequest.\n           * @implements IUpdateDocumentRequest\n           * @constructor\n           * @param {google.firestore.v1.IUpdateDocumentRequest=} [properties] Properties to set\n           */\n          function UpdateDocumentRequest(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * UpdateDocumentRequest document.\n           * @member {google.firestore.v1.IDocument|null|undefined} document\n           * @memberof google.firestore.v1.UpdateDocumentRequest\n           * @instance\n           */\n\n\n          UpdateDocumentRequest.prototype.document = null;\n          /**\n           * UpdateDocumentRequest updateMask.\n           * @member {google.firestore.v1.IDocumentMask|null|undefined} updateMask\n           * @memberof google.firestore.v1.UpdateDocumentRequest\n           * @instance\n           */\n\n          UpdateDocumentRequest.prototype.updateMask = null;\n          /**\n           * UpdateDocumentRequest mask.\n           * @member {google.firestore.v1.IDocumentMask|null|undefined} mask\n           * @memberof google.firestore.v1.UpdateDocumentRequest\n           * @instance\n           */\n\n          UpdateDocumentRequest.prototype.mask = null;\n          /**\n           * UpdateDocumentRequest currentDocument.\n           * @member {google.firestore.v1.IPrecondition|null|undefined} currentDocument\n           * @memberof google.firestore.v1.UpdateDocumentRequest\n           * @instance\n           */\n\n          UpdateDocumentRequest.prototype.currentDocument = null;\n          /**\n           * Creates an UpdateDocumentRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.UpdateDocumentRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.UpdateDocumentRequest} UpdateDocumentRequest\n           */\n\n          UpdateDocumentRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.UpdateDocumentRequest) return object;\n            var message = new $root.google.firestore.v1.UpdateDocumentRequest();\n\n            if (object.document != null) {\n              if (typeof object.document !== \"object\") throw TypeError(\".google.firestore.v1.UpdateDocumentRequest.document: object expected\");\n              message.document = $root.google.firestore.v1.Document.fromObject(object.document);\n            }\n\n            if (object.updateMask != null) {\n              if (typeof object.updateMask !== \"object\") throw TypeError(\".google.firestore.v1.UpdateDocumentRequest.updateMask: object expected\");\n              message.updateMask = $root.google.firestore.v1.DocumentMask.fromObject(object.updateMask);\n            }\n\n            if (object.mask != null) {\n              if (typeof object.mask !== \"object\") throw TypeError(\".google.firestore.v1.UpdateDocumentRequest.mask: object expected\");\n              message.mask = $root.google.firestore.v1.DocumentMask.fromObject(object.mask);\n            }\n\n            if (object.currentDocument != null) {\n              if (typeof object.currentDocument !== \"object\") throw TypeError(\".google.firestore.v1.UpdateDocumentRequest.currentDocument: object expected\");\n              message.currentDocument = $root.google.firestore.v1.Precondition.fromObject(object.currentDocument);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from an UpdateDocumentRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.UpdateDocumentRequest\n           * @static\n           * @param {google.firestore.v1.UpdateDocumentRequest} message UpdateDocumentRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          UpdateDocumentRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.document = null;\n              object.updateMask = null;\n              object.mask = null;\n              object.currentDocument = null;\n            }\n\n            if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.firestore.v1.Document.toObject(message.document, options);\n            if (message.updateMask != null && message.hasOwnProperty(\"updateMask\")) object.updateMask = $root.google.firestore.v1.DocumentMask.toObject(message.updateMask, options);\n            if (message.mask != null && message.hasOwnProperty(\"mask\")) object.mask = $root.google.firestore.v1.DocumentMask.toObject(message.mask, options);\n            if (message.currentDocument != null && message.hasOwnProperty(\"currentDocument\")) object.currentDocument = $root.google.firestore.v1.Precondition.toObject(message.currentDocument, options);\n            return object;\n          };\n          /**\n           * Converts this UpdateDocumentRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.UpdateDocumentRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          UpdateDocumentRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return UpdateDocumentRequest;\n        }();\n\n        v1.DeleteDocumentRequest = function () {\n          /**\n           * Properties of a DeleteDocumentRequest.\n           * @memberof google.firestore.v1\n           * @interface IDeleteDocumentRequest\n           * @property {string|null} [name] DeleteDocumentRequest name\n           * @property {google.firestore.v1.IPrecondition|null} [currentDocument] DeleteDocumentRequest currentDocument\n           */\n\n          /**\n           * Constructs a new DeleteDocumentRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a DeleteDocumentRequest.\n           * @implements IDeleteDocumentRequest\n           * @constructor\n           * @param {google.firestore.v1.IDeleteDocumentRequest=} [properties] Properties to set\n           */\n          function DeleteDocumentRequest(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * DeleteDocumentRequest name.\n           * @member {string} name\n           * @memberof google.firestore.v1.DeleteDocumentRequest\n           * @instance\n           */\n\n\n          DeleteDocumentRequest.prototype.name = \"\";\n          /**\n           * DeleteDocumentRequest currentDocument.\n           * @member {google.firestore.v1.IPrecondition|null|undefined} currentDocument\n           * @memberof google.firestore.v1.DeleteDocumentRequest\n           * @instance\n           */\n\n          DeleteDocumentRequest.prototype.currentDocument = null;\n          /**\n           * Creates a DeleteDocumentRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.DeleteDocumentRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.DeleteDocumentRequest} DeleteDocumentRequest\n           */\n\n          DeleteDocumentRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.DeleteDocumentRequest) return object;\n            var message = new $root.google.firestore.v1.DeleteDocumentRequest();\n            if (object.name != null) message.name = String(object.name);\n\n            if (object.currentDocument != null) {\n              if (typeof object.currentDocument !== \"object\") throw TypeError(\".google.firestore.v1.DeleteDocumentRequest.currentDocument: object expected\");\n              message.currentDocument = $root.google.firestore.v1.Precondition.fromObject(object.currentDocument);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a DeleteDocumentRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.DeleteDocumentRequest\n           * @static\n           * @param {google.firestore.v1.DeleteDocumentRequest} message DeleteDocumentRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          DeleteDocumentRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.name = \"\";\n              object.currentDocument = null;\n            }\n\n            if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n            if (message.currentDocument != null && message.hasOwnProperty(\"currentDocument\")) object.currentDocument = $root.google.firestore.v1.Precondition.toObject(message.currentDocument, options);\n            return object;\n          };\n          /**\n           * Converts this DeleteDocumentRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.DeleteDocumentRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          DeleteDocumentRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return DeleteDocumentRequest;\n        }();\n\n        v1.BatchGetDocumentsRequest = function () {\n          /**\n           * Properties of a BatchGetDocumentsRequest.\n           * @memberof google.firestore.v1\n           * @interface IBatchGetDocumentsRequest\n           * @property {string|null} [database] BatchGetDocumentsRequest database\n           * @property {Array.<string>|null} [documents] BatchGetDocumentsRequest documents\n           * @property {google.firestore.v1.IDocumentMask|null} [mask] BatchGetDocumentsRequest mask\n           * @property {Uint8Array|null} [transaction] BatchGetDocumentsRequest transaction\n           * @property {google.firestore.v1.ITransactionOptions|null} [newTransaction] BatchGetDocumentsRequest newTransaction\n           * @property {google.protobuf.ITimestamp|null} [readTime] BatchGetDocumentsRequest readTime\n           */\n\n          /**\n           * Constructs a new BatchGetDocumentsRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a BatchGetDocumentsRequest.\n           * @implements IBatchGetDocumentsRequest\n           * @constructor\n           * @param {google.firestore.v1.IBatchGetDocumentsRequest=} [properties] Properties to set\n           */\n          function BatchGetDocumentsRequest(properties) {\n            this.documents = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * BatchGetDocumentsRequest database.\n           * @member {string} database\n           * @memberof google.firestore.v1.BatchGetDocumentsRequest\n           * @instance\n           */\n\n\n          BatchGetDocumentsRequest.prototype.database = \"\";\n          /**\n           * BatchGetDocumentsRequest documents.\n           * @member {Array.<string>} documents\n           * @memberof google.firestore.v1.BatchGetDocumentsRequest\n           * @instance\n           */\n\n          BatchGetDocumentsRequest.prototype.documents = $util.emptyArray;\n          /**\n           * BatchGetDocumentsRequest mask.\n           * @member {google.firestore.v1.IDocumentMask|null|undefined} mask\n           * @memberof google.firestore.v1.BatchGetDocumentsRequest\n           * @instance\n           */\n\n          BatchGetDocumentsRequest.prototype.mask = null;\n          /**\n           * BatchGetDocumentsRequest transaction.\n           * @member {Uint8Array|null|undefined} transaction\n           * @memberof google.firestore.v1.BatchGetDocumentsRequest\n           * @instance\n           */\n\n          BatchGetDocumentsRequest.prototype.transaction = null;\n          /**\n           * BatchGetDocumentsRequest newTransaction.\n           * @member {google.firestore.v1.ITransactionOptions|null|undefined} newTransaction\n           * @memberof google.firestore.v1.BatchGetDocumentsRequest\n           * @instance\n           */\n\n          BatchGetDocumentsRequest.prototype.newTransaction = null;\n          /**\n           * BatchGetDocumentsRequest readTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} readTime\n           * @memberof google.firestore.v1.BatchGetDocumentsRequest\n           * @instance\n           */\n\n          BatchGetDocumentsRequest.prototype.readTime = null; // OneOf field names bound to virtual getters and setters\n\n          var $oneOfFields;\n          /**\n           * BatchGetDocumentsRequest consistencySelector.\n           * @member {\"transaction\"|\"newTransaction\"|\"readTime\"|undefined} consistencySelector\n           * @memberof google.firestore.v1.BatchGetDocumentsRequest\n           * @instance\n           */\n\n          Object.defineProperty(BatchGetDocumentsRequest.prototype, \"consistencySelector\", {\n            get: $util.oneOfGetter($oneOfFields = [\"transaction\", \"newTransaction\", \"readTime\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Creates a BatchGetDocumentsRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.BatchGetDocumentsRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.BatchGetDocumentsRequest} BatchGetDocumentsRequest\n           */\n\n          BatchGetDocumentsRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.BatchGetDocumentsRequest) return object;\n            var message = new $root.google.firestore.v1.BatchGetDocumentsRequest();\n            if (object.database != null) message.database = String(object.database);\n\n            if (object.documents) {\n              if (!Array.isArray(object.documents)) throw TypeError(\".google.firestore.v1.BatchGetDocumentsRequest.documents: array expected\");\n              message.documents = [];\n\n              for (var i = 0; i < object.documents.length; ++i) {\n                message.documents[i] = String(object.documents[i]);\n              }\n            }\n\n            if (object.mask != null) {\n              if (typeof object.mask !== \"object\") throw TypeError(\".google.firestore.v1.BatchGetDocumentsRequest.mask: object expected\");\n              message.mask = $root.google.firestore.v1.DocumentMask.fromObject(object.mask);\n            }\n\n            if (object.transaction != null) if (typeof object.transaction === \"string\") $util.base64.decode(object.transaction, message.transaction = $util.newBuffer($util.base64.length(object.transaction)), 0);else if (object.transaction.length) message.transaction = object.transaction;\n\n            if (object.newTransaction != null) {\n              if (typeof object.newTransaction !== \"object\") throw TypeError(\".google.firestore.v1.BatchGetDocumentsRequest.newTransaction: object expected\");\n              message.newTransaction = $root.google.firestore.v1.TransactionOptions.fromObject(object.newTransaction);\n            }\n\n            if (object.readTime != null) {\n              if (typeof object.readTime !== \"object\") throw TypeError(\".google.firestore.v1.BatchGetDocumentsRequest.readTime: object expected\");\n              message.readTime = $root.google.protobuf.Timestamp.fromObject(object.readTime);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a BatchGetDocumentsRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.BatchGetDocumentsRequest\n           * @static\n           * @param {google.firestore.v1.BatchGetDocumentsRequest} message BatchGetDocumentsRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          BatchGetDocumentsRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.documents = [];\n\n            if (options.defaults) {\n              object.database = \"\";\n              object.mask = null;\n            }\n\n            if (message.database != null && message.hasOwnProperty(\"database\")) object.database = message.database;\n\n            if (message.documents && message.documents.length) {\n              object.documents = [];\n\n              for (var j = 0; j < message.documents.length; ++j) {\n                object.documents[j] = message.documents[j];\n              }\n            }\n\n            if (message.mask != null && message.hasOwnProperty(\"mask\")) object.mask = $root.google.firestore.v1.DocumentMask.toObject(message.mask, options);\n\n            if (message.transaction != null && message.hasOwnProperty(\"transaction\")) {\n              object.transaction = options.bytes === String ? $util.base64.encode(message.transaction, 0, message.transaction.length) : options.bytes === Array ? Array.prototype.slice.call(message.transaction) : message.transaction;\n              if (options.oneofs) object.consistencySelector = \"transaction\";\n            }\n\n            if (message.newTransaction != null && message.hasOwnProperty(\"newTransaction\")) {\n              object.newTransaction = $root.google.firestore.v1.TransactionOptions.toObject(message.newTransaction, options);\n              if (options.oneofs) object.consistencySelector = \"newTransaction\";\n            }\n\n            if (message.readTime != null && message.hasOwnProperty(\"readTime\")) {\n              object.readTime = $root.google.protobuf.Timestamp.toObject(message.readTime, options);\n              if (options.oneofs) object.consistencySelector = \"readTime\";\n            }\n\n            return object;\n          };\n          /**\n           * Converts this BatchGetDocumentsRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.BatchGetDocumentsRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          BatchGetDocumentsRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return BatchGetDocumentsRequest;\n        }();\n\n        v1.BatchGetDocumentsResponse = function () {\n          /**\n           * Properties of a BatchGetDocumentsResponse.\n           * @memberof google.firestore.v1\n           * @interface IBatchGetDocumentsResponse\n           * @property {google.firestore.v1.IDocument|null} [found] BatchGetDocumentsResponse found\n           * @property {string|null} [missing] BatchGetDocumentsResponse missing\n           * @property {Uint8Array|null} [transaction] BatchGetDocumentsResponse transaction\n           * @property {google.protobuf.ITimestamp|null} [readTime] BatchGetDocumentsResponse readTime\n           */\n\n          /**\n           * Constructs a new BatchGetDocumentsResponse.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a BatchGetDocumentsResponse.\n           * @implements IBatchGetDocumentsResponse\n           * @constructor\n           * @param {google.firestore.v1.IBatchGetDocumentsResponse=} [properties] Properties to set\n           */\n          function BatchGetDocumentsResponse(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * BatchGetDocumentsResponse found.\n           * @member {google.firestore.v1.IDocument|null|undefined} found\n           * @memberof google.firestore.v1.BatchGetDocumentsResponse\n           * @instance\n           */\n\n\n          BatchGetDocumentsResponse.prototype.found = null;\n          /**\n           * BatchGetDocumentsResponse missing.\n           * @member {string|null|undefined} missing\n           * @memberof google.firestore.v1.BatchGetDocumentsResponse\n           * @instance\n           */\n\n          BatchGetDocumentsResponse.prototype.missing = null;\n          /**\n           * BatchGetDocumentsResponse transaction.\n           * @member {Uint8Array} transaction\n           * @memberof google.firestore.v1.BatchGetDocumentsResponse\n           * @instance\n           */\n\n          BatchGetDocumentsResponse.prototype.transaction = $util.newBuffer([]);\n          /**\n           * BatchGetDocumentsResponse readTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} readTime\n           * @memberof google.firestore.v1.BatchGetDocumentsResponse\n           * @instance\n           */\n\n          BatchGetDocumentsResponse.prototype.readTime = null; // OneOf field names bound to virtual getters and setters\n\n          var $oneOfFields;\n          /**\n           * BatchGetDocumentsResponse result.\n           * @member {\"found\"|\"missing\"|undefined} result\n           * @memberof google.firestore.v1.BatchGetDocumentsResponse\n           * @instance\n           */\n\n          Object.defineProperty(BatchGetDocumentsResponse.prototype, \"result\", {\n            get: $util.oneOfGetter($oneOfFields = [\"found\", \"missing\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Creates a BatchGetDocumentsResponse message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.BatchGetDocumentsResponse\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.BatchGetDocumentsResponse} BatchGetDocumentsResponse\n           */\n\n          BatchGetDocumentsResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.BatchGetDocumentsResponse) return object;\n            var message = new $root.google.firestore.v1.BatchGetDocumentsResponse();\n\n            if (object.found != null) {\n              if (typeof object.found !== \"object\") throw TypeError(\".google.firestore.v1.BatchGetDocumentsResponse.found: object expected\");\n              message.found = $root.google.firestore.v1.Document.fromObject(object.found);\n            }\n\n            if (object.missing != null) message.missing = String(object.missing);\n            if (object.transaction != null) if (typeof object.transaction === \"string\") $util.base64.decode(object.transaction, message.transaction = $util.newBuffer($util.base64.length(object.transaction)), 0);else if (object.transaction.length) message.transaction = object.transaction;\n\n            if (object.readTime != null) {\n              if (typeof object.readTime !== \"object\") throw TypeError(\".google.firestore.v1.BatchGetDocumentsResponse.readTime: object expected\");\n              message.readTime = $root.google.protobuf.Timestamp.fromObject(object.readTime);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a BatchGetDocumentsResponse message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.BatchGetDocumentsResponse\n           * @static\n           * @param {google.firestore.v1.BatchGetDocumentsResponse} message BatchGetDocumentsResponse\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          BatchGetDocumentsResponse.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              if (options.bytes === String) object.transaction = \"\";else {\n                object.transaction = [];\n                if (options.bytes !== Array) object.transaction = $util.newBuffer(object.transaction);\n              }\n              object.readTime = null;\n            }\n\n            if (message.found != null && message.hasOwnProperty(\"found\")) {\n              object.found = $root.google.firestore.v1.Document.toObject(message.found, options);\n              if (options.oneofs) object.result = \"found\";\n            }\n\n            if (message.missing != null && message.hasOwnProperty(\"missing\")) {\n              object.missing = message.missing;\n              if (options.oneofs) object.result = \"missing\";\n            }\n\n            if (message.transaction != null && message.hasOwnProperty(\"transaction\")) object.transaction = options.bytes === String ? $util.base64.encode(message.transaction, 0, message.transaction.length) : options.bytes === Array ? Array.prototype.slice.call(message.transaction) : message.transaction;\n            if (message.readTime != null && message.hasOwnProperty(\"readTime\")) object.readTime = $root.google.protobuf.Timestamp.toObject(message.readTime, options);\n            return object;\n          };\n          /**\n           * Converts this BatchGetDocumentsResponse to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.BatchGetDocumentsResponse\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          BatchGetDocumentsResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return BatchGetDocumentsResponse;\n        }();\n\n        v1.BeginTransactionRequest = function () {\n          /**\n           * Properties of a BeginTransactionRequest.\n           * @memberof google.firestore.v1\n           * @interface IBeginTransactionRequest\n           * @property {string|null} [database] BeginTransactionRequest database\n           * @property {google.firestore.v1.ITransactionOptions|null} [options] BeginTransactionRequest options\n           */\n\n          /**\n           * Constructs a new BeginTransactionRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a BeginTransactionRequest.\n           * @implements IBeginTransactionRequest\n           * @constructor\n           * @param {google.firestore.v1.IBeginTransactionRequest=} [properties] Properties to set\n           */\n          function BeginTransactionRequest(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * BeginTransactionRequest database.\n           * @member {string} database\n           * @memberof google.firestore.v1.BeginTransactionRequest\n           * @instance\n           */\n\n\n          BeginTransactionRequest.prototype.database = \"\";\n          /**\n           * BeginTransactionRequest options.\n           * @member {google.firestore.v1.ITransactionOptions|null|undefined} options\n           * @memberof google.firestore.v1.BeginTransactionRequest\n           * @instance\n           */\n\n          BeginTransactionRequest.prototype.options = null;\n          /**\n           * Creates a BeginTransactionRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.BeginTransactionRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.BeginTransactionRequest} BeginTransactionRequest\n           */\n\n          BeginTransactionRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.BeginTransactionRequest) return object;\n            var message = new $root.google.firestore.v1.BeginTransactionRequest();\n            if (object.database != null) message.database = String(object.database);\n\n            if (object.options != null) {\n              if (typeof object.options !== \"object\") throw TypeError(\".google.firestore.v1.BeginTransactionRequest.options: object expected\");\n              message.options = $root.google.firestore.v1.TransactionOptions.fromObject(object.options);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a BeginTransactionRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.BeginTransactionRequest\n           * @static\n           * @param {google.firestore.v1.BeginTransactionRequest} message BeginTransactionRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          BeginTransactionRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.database = \"\";\n              object.options = null;\n            }\n\n            if (message.database != null && message.hasOwnProperty(\"database\")) object.database = message.database;\n            if (message.options != null && message.hasOwnProperty(\"options\")) object.options = $root.google.firestore.v1.TransactionOptions.toObject(message.options, options);\n            return object;\n          };\n          /**\n           * Converts this BeginTransactionRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.BeginTransactionRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          BeginTransactionRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return BeginTransactionRequest;\n        }();\n\n        v1.BeginTransactionResponse = function () {\n          /**\n           * Properties of a BeginTransactionResponse.\n           * @memberof google.firestore.v1\n           * @interface IBeginTransactionResponse\n           * @property {Uint8Array|null} [transaction] BeginTransactionResponse transaction\n           */\n\n          /**\n           * Constructs a new BeginTransactionResponse.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a BeginTransactionResponse.\n           * @implements IBeginTransactionResponse\n           * @constructor\n           * @param {google.firestore.v1.IBeginTransactionResponse=} [properties] Properties to set\n           */\n          function BeginTransactionResponse(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * BeginTransactionResponse transaction.\n           * @member {Uint8Array} transaction\n           * @memberof google.firestore.v1.BeginTransactionResponse\n           * @instance\n           */\n\n\n          BeginTransactionResponse.prototype.transaction = $util.newBuffer([]);\n          /**\n           * Creates a BeginTransactionResponse message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.BeginTransactionResponse\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.BeginTransactionResponse} BeginTransactionResponse\n           */\n\n          BeginTransactionResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.BeginTransactionResponse) return object;\n            var message = new $root.google.firestore.v1.BeginTransactionResponse();\n            if (object.transaction != null) if (typeof object.transaction === \"string\") $util.base64.decode(object.transaction, message.transaction = $util.newBuffer($util.base64.length(object.transaction)), 0);else if (object.transaction.length) message.transaction = object.transaction;\n            return message;\n          };\n          /**\n           * Creates a plain object from a BeginTransactionResponse message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.BeginTransactionResponse\n           * @static\n           * @param {google.firestore.v1.BeginTransactionResponse} message BeginTransactionResponse\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          BeginTransactionResponse.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.defaults) if (options.bytes === String) object.transaction = \"\";else {\n              object.transaction = [];\n              if (options.bytes !== Array) object.transaction = $util.newBuffer(object.transaction);\n            }\n            if (message.transaction != null && message.hasOwnProperty(\"transaction\")) object.transaction = options.bytes === String ? $util.base64.encode(message.transaction, 0, message.transaction.length) : options.bytes === Array ? Array.prototype.slice.call(message.transaction) : message.transaction;\n            return object;\n          };\n          /**\n           * Converts this BeginTransactionResponse to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.BeginTransactionResponse\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          BeginTransactionResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return BeginTransactionResponse;\n        }();\n\n        v1.CommitRequest = function () {\n          /**\n           * Properties of a CommitRequest.\n           * @memberof google.firestore.v1\n           * @interface ICommitRequest\n           * @property {string|null} [database] CommitRequest database\n           * @property {Array.<google.firestore.v1.IWrite>|null} [writes] CommitRequest writes\n           * @property {Uint8Array|null} [transaction] CommitRequest transaction\n           */\n\n          /**\n           * Constructs a new CommitRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a CommitRequest.\n           * @implements ICommitRequest\n           * @constructor\n           * @param {google.firestore.v1.ICommitRequest=} [properties] Properties to set\n           */\n          function CommitRequest(properties) {\n            this.writes = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * CommitRequest database.\n           * @member {string} database\n           * @memberof google.firestore.v1.CommitRequest\n           * @instance\n           */\n\n\n          CommitRequest.prototype.database = \"\";\n          /**\n           * CommitRequest writes.\n           * @member {Array.<google.firestore.v1.IWrite>} writes\n           * @memberof google.firestore.v1.CommitRequest\n           * @instance\n           */\n\n          CommitRequest.prototype.writes = $util.emptyArray;\n          /**\n           * CommitRequest transaction.\n           * @member {Uint8Array} transaction\n           * @memberof google.firestore.v1.CommitRequest\n           * @instance\n           */\n\n          CommitRequest.prototype.transaction = $util.newBuffer([]);\n          /**\n           * Creates a CommitRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.CommitRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.CommitRequest} CommitRequest\n           */\n\n          CommitRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.CommitRequest) return object;\n            var message = new $root.google.firestore.v1.CommitRequest();\n            if (object.database != null) message.database = String(object.database);\n\n            if (object.writes) {\n              if (!Array.isArray(object.writes)) throw TypeError(\".google.firestore.v1.CommitRequest.writes: array expected\");\n              message.writes = [];\n\n              for (var i = 0; i < object.writes.length; ++i) {\n                if (typeof object.writes[i] !== \"object\") throw TypeError(\".google.firestore.v1.CommitRequest.writes: object expected\");\n                message.writes[i] = $root.google.firestore.v1.Write.fromObject(object.writes[i]);\n              }\n            }\n\n            if (object.transaction != null) if (typeof object.transaction === \"string\") $util.base64.decode(object.transaction, message.transaction = $util.newBuffer($util.base64.length(object.transaction)), 0);else if (object.transaction.length) message.transaction = object.transaction;\n            return message;\n          };\n          /**\n           * Creates a plain object from a CommitRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.CommitRequest\n           * @static\n           * @param {google.firestore.v1.CommitRequest} message CommitRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          CommitRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.writes = [];\n\n            if (options.defaults) {\n              object.database = \"\";\n              if (options.bytes === String) object.transaction = \"\";else {\n                object.transaction = [];\n                if (options.bytes !== Array) object.transaction = $util.newBuffer(object.transaction);\n              }\n            }\n\n            if (message.database != null && message.hasOwnProperty(\"database\")) object.database = message.database;\n\n            if (message.writes && message.writes.length) {\n              object.writes = [];\n\n              for (var j = 0; j < message.writes.length; ++j) {\n                object.writes[j] = $root.google.firestore.v1.Write.toObject(message.writes[j], options);\n              }\n            }\n\n            if (message.transaction != null && message.hasOwnProperty(\"transaction\")) object.transaction = options.bytes === String ? $util.base64.encode(message.transaction, 0, message.transaction.length) : options.bytes === Array ? Array.prototype.slice.call(message.transaction) : message.transaction;\n            return object;\n          };\n          /**\n           * Converts this CommitRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.CommitRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          CommitRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return CommitRequest;\n        }();\n\n        v1.CommitResponse = function () {\n          /**\n           * Properties of a CommitResponse.\n           * @memberof google.firestore.v1\n           * @interface ICommitResponse\n           * @property {Array.<google.firestore.v1.IWriteResult>|null} [writeResults] CommitResponse writeResults\n           * @property {google.protobuf.ITimestamp|null} [commitTime] CommitResponse commitTime\n           */\n\n          /**\n           * Constructs a new CommitResponse.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a CommitResponse.\n           * @implements ICommitResponse\n           * @constructor\n           * @param {google.firestore.v1.ICommitResponse=} [properties] Properties to set\n           */\n          function CommitResponse(properties) {\n            this.writeResults = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * CommitResponse writeResults.\n           * @member {Array.<google.firestore.v1.IWriteResult>} writeResults\n           * @memberof google.firestore.v1.CommitResponse\n           * @instance\n           */\n\n\n          CommitResponse.prototype.writeResults = $util.emptyArray;\n          /**\n           * CommitResponse commitTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} commitTime\n           * @memberof google.firestore.v1.CommitResponse\n           * @instance\n           */\n\n          CommitResponse.prototype.commitTime = null;\n          /**\n           * Creates a CommitResponse message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.CommitResponse\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.CommitResponse} CommitResponse\n           */\n\n          CommitResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.CommitResponse) return object;\n            var message = new $root.google.firestore.v1.CommitResponse();\n\n            if (object.writeResults) {\n              if (!Array.isArray(object.writeResults)) throw TypeError(\".google.firestore.v1.CommitResponse.writeResults: array expected\");\n              message.writeResults = [];\n\n              for (var i = 0; i < object.writeResults.length; ++i) {\n                if (typeof object.writeResults[i] !== \"object\") throw TypeError(\".google.firestore.v1.CommitResponse.writeResults: object expected\");\n                message.writeResults[i] = $root.google.firestore.v1.WriteResult.fromObject(object.writeResults[i]);\n              }\n            }\n\n            if (object.commitTime != null) {\n              if (typeof object.commitTime !== \"object\") throw TypeError(\".google.firestore.v1.CommitResponse.commitTime: object expected\");\n              message.commitTime = $root.google.protobuf.Timestamp.fromObject(object.commitTime);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a CommitResponse message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.CommitResponse\n           * @static\n           * @param {google.firestore.v1.CommitResponse} message CommitResponse\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          CommitResponse.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.writeResults = [];\n            if (options.defaults) object.commitTime = null;\n\n            if (message.writeResults && message.writeResults.length) {\n              object.writeResults = [];\n\n              for (var j = 0; j < message.writeResults.length; ++j) {\n                object.writeResults[j] = $root.google.firestore.v1.WriteResult.toObject(message.writeResults[j], options);\n              }\n            }\n\n            if (message.commitTime != null && message.hasOwnProperty(\"commitTime\")) object.commitTime = $root.google.protobuf.Timestamp.toObject(message.commitTime, options);\n            return object;\n          };\n          /**\n           * Converts this CommitResponse to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.CommitResponse\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          CommitResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return CommitResponse;\n        }();\n\n        v1.RollbackRequest = function () {\n          /**\n           * Properties of a RollbackRequest.\n           * @memberof google.firestore.v1\n           * @interface IRollbackRequest\n           * @property {string|null} [database] RollbackRequest database\n           * @property {Uint8Array|null} [transaction] RollbackRequest transaction\n           */\n\n          /**\n           * Constructs a new RollbackRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a RollbackRequest.\n           * @implements IRollbackRequest\n           * @constructor\n           * @param {google.firestore.v1.IRollbackRequest=} [properties] Properties to set\n           */\n          function RollbackRequest(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * RollbackRequest database.\n           * @member {string} database\n           * @memberof google.firestore.v1.RollbackRequest\n           * @instance\n           */\n\n\n          RollbackRequest.prototype.database = \"\";\n          /**\n           * RollbackRequest transaction.\n           * @member {Uint8Array} transaction\n           * @memberof google.firestore.v1.RollbackRequest\n           * @instance\n           */\n\n          RollbackRequest.prototype.transaction = $util.newBuffer([]);\n          /**\n           * Creates a RollbackRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.RollbackRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.RollbackRequest} RollbackRequest\n           */\n\n          RollbackRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.RollbackRequest) return object;\n            var message = new $root.google.firestore.v1.RollbackRequest();\n            if (object.database != null) message.database = String(object.database);\n            if (object.transaction != null) if (typeof object.transaction === \"string\") $util.base64.decode(object.transaction, message.transaction = $util.newBuffer($util.base64.length(object.transaction)), 0);else if (object.transaction.length) message.transaction = object.transaction;\n            return message;\n          };\n          /**\n           * Creates a plain object from a RollbackRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.RollbackRequest\n           * @static\n           * @param {google.firestore.v1.RollbackRequest} message RollbackRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          RollbackRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.database = \"\";\n              if (options.bytes === String) object.transaction = \"\";else {\n                object.transaction = [];\n                if (options.bytes !== Array) object.transaction = $util.newBuffer(object.transaction);\n              }\n            }\n\n            if (message.database != null && message.hasOwnProperty(\"database\")) object.database = message.database;\n            if (message.transaction != null && message.hasOwnProperty(\"transaction\")) object.transaction = options.bytes === String ? $util.base64.encode(message.transaction, 0, message.transaction.length) : options.bytes === Array ? Array.prototype.slice.call(message.transaction) : message.transaction;\n            return object;\n          };\n          /**\n           * Converts this RollbackRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.RollbackRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          RollbackRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return RollbackRequest;\n        }();\n\n        v1.RunQueryRequest = function () {\n          /**\n           * Properties of a RunQueryRequest.\n           * @memberof google.firestore.v1\n           * @interface IRunQueryRequest\n           * @property {string|null} [parent] RunQueryRequest parent\n           * @property {google.firestore.v1.IStructuredQuery|null} [structuredQuery] RunQueryRequest structuredQuery\n           * @property {Uint8Array|null} [transaction] RunQueryRequest transaction\n           * @property {google.firestore.v1.ITransactionOptions|null} [newTransaction] RunQueryRequest newTransaction\n           * @property {google.protobuf.ITimestamp|null} [readTime] RunQueryRequest readTime\n           */\n\n          /**\n           * Constructs a new RunQueryRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a RunQueryRequest.\n           * @implements IRunQueryRequest\n           * @constructor\n           * @param {google.firestore.v1.IRunQueryRequest=} [properties] Properties to set\n           */\n          function RunQueryRequest(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * RunQueryRequest parent.\n           * @member {string} parent\n           * @memberof google.firestore.v1.RunQueryRequest\n           * @instance\n           */\n\n\n          RunQueryRequest.prototype.parent = \"\";\n          /**\n           * RunQueryRequest structuredQuery.\n           * @member {google.firestore.v1.IStructuredQuery|null|undefined} structuredQuery\n           * @memberof google.firestore.v1.RunQueryRequest\n           * @instance\n           */\n\n          RunQueryRequest.prototype.structuredQuery = null;\n          /**\n           * RunQueryRequest transaction.\n           * @member {Uint8Array|null|undefined} transaction\n           * @memberof google.firestore.v1.RunQueryRequest\n           * @instance\n           */\n\n          RunQueryRequest.prototype.transaction = null;\n          /**\n           * RunQueryRequest newTransaction.\n           * @member {google.firestore.v1.ITransactionOptions|null|undefined} newTransaction\n           * @memberof google.firestore.v1.RunQueryRequest\n           * @instance\n           */\n\n          RunQueryRequest.prototype.newTransaction = null;\n          /**\n           * RunQueryRequest readTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} readTime\n           * @memberof google.firestore.v1.RunQueryRequest\n           * @instance\n           */\n\n          RunQueryRequest.prototype.readTime = null; // OneOf field names bound to virtual getters and setters\n\n          var $oneOfFields;\n          /**\n           * RunQueryRequest queryType.\n           * @member {\"structuredQuery\"|undefined} queryType\n           * @memberof google.firestore.v1.RunQueryRequest\n           * @instance\n           */\n\n          Object.defineProperty(RunQueryRequest.prototype, \"queryType\", {\n            get: $util.oneOfGetter($oneOfFields = [\"structuredQuery\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * RunQueryRequest consistencySelector.\n           * @member {\"transaction\"|\"newTransaction\"|\"readTime\"|undefined} consistencySelector\n           * @memberof google.firestore.v1.RunQueryRequest\n           * @instance\n           */\n\n          Object.defineProperty(RunQueryRequest.prototype, \"consistencySelector\", {\n            get: $util.oneOfGetter($oneOfFields = [\"transaction\", \"newTransaction\", \"readTime\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Creates a RunQueryRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.RunQueryRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.RunQueryRequest} RunQueryRequest\n           */\n\n          RunQueryRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.RunQueryRequest) return object;\n            var message = new $root.google.firestore.v1.RunQueryRequest();\n            if (object.parent != null) message.parent = String(object.parent);\n\n            if (object.structuredQuery != null) {\n              if (typeof object.structuredQuery !== \"object\") throw TypeError(\".google.firestore.v1.RunQueryRequest.structuredQuery: object expected\");\n              message.structuredQuery = $root.google.firestore.v1.StructuredQuery.fromObject(object.structuredQuery);\n            }\n\n            if (object.transaction != null) if (typeof object.transaction === \"string\") $util.base64.decode(object.transaction, message.transaction = $util.newBuffer($util.base64.length(object.transaction)), 0);else if (object.transaction.length) message.transaction = object.transaction;\n\n            if (object.newTransaction != null) {\n              if (typeof object.newTransaction !== \"object\") throw TypeError(\".google.firestore.v1.RunQueryRequest.newTransaction: object expected\");\n              message.newTransaction = $root.google.firestore.v1.TransactionOptions.fromObject(object.newTransaction);\n            }\n\n            if (object.readTime != null) {\n              if (typeof object.readTime !== \"object\") throw TypeError(\".google.firestore.v1.RunQueryRequest.readTime: object expected\");\n              message.readTime = $root.google.protobuf.Timestamp.fromObject(object.readTime);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a RunQueryRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.RunQueryRequest\n           * @static\n           * @param {google.firestore.v1.RunQueryRequest} message RunQueryRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          RunQueryRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.defaults) object.parent = \"\";\n            if (message.parent != null && message.hasOwnProperty(\"parent\")) object.parent = message.parent;\n\n            if (message.structuredQuery != null && message.hasOwnProperty(\"structuredQuery\")) {\n              object.structuredQuery = $root.google.firestore.v1.StructuredQuery.toObject(message.structuredQuery, options);\n              if (options.oneofs) object.queryType = \"structuredQuery\";\n            }\n\n            if (message.transaction != null && message.hasOwnProperty(\"transaction\")) {\n              object.transaction = options.bytes === String ? $util.base64.encode(message.transaction, 0, message.transaction.length) : options.bytes === Array ? Array.prototype.slice.call(message.transaction) : message.transaction;\n              if (options.oneofs) object.consistencySelector = \"transaction\";\n            }\n\n            if (message.newTransaction != null && message.hasOwnProperty(\"newTransaction\")) {\n              object.newTransaction = $root.google.firestore.v1.TransactionOptions.toObject(message.newTransaction, options);\n              if (options.oneofs) object.consistencySelector = \"newTransaction\";\n            }\n\n            if (message.readTime != null && message.hasOwnProperty(\"readTime\")) {\n              object.readTime = $root.google.protobuf.Timestamp.toObject(message.readTime, options);\n              if (options.oneofs) object.consistencySelector = \"readTime\";\n            }\n\n            return object;\n          };\n          /**\n           * Converts this RunQueryRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.RunQueryRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          RunQueryRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return RunQueryRequest;\n        }();\n\n        v1.RunQueryResponse = function () {\n          /**\n           * Properties of a RunQueryResponse.\n           * @memberof google.firestore.v1\n           * @interface IRunQueryResponse\n           * @property {Uint8Array|null} [transaction] RunQueryResponse transaction\n           * @property {google.firestore.v1.IDocument|null} [document] RunQueryResponse document\n           * @property {google.protobuf.ITimestamp|null} [readTime] RunQueryResponse readTime\n           * @property {number|null} [skippedResults] RunQueryResponse skippedResults\n           */\n\n          /**\n           * Constructs a new RunQueryResponse.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a RunQueryResponse.\n           * @implements IRunQueryResponse\n           * @constructor\n           * @param {google.firestore.v1.IRunQueryResponse=} [properties] Properties to set\n           */\n          function RunQueryResponse(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * RunQueryResponse transaction.\n           * @member {Uint8Array} transaction\n           * @memberof google.firestore.v1.RunQueryResponse\n           * @instance\n           */\n\n\n          RunQueryResponse.prototype.transaction = $util.newBuffer([]);\n          /**\n           * RunQueryResponse document.\n           * @member {google.firestore.v1.IDocument|null|undefined} document\n           * @memberof google.firestore.v1.RunQueryResponse\n           * @instance\n           */\n\n          RunQueryResponse.prototype.document = null;\n          /**\n           * RunQueryResponse readTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} readTime\n           * @memberof google.firestore.v1.RunQueryResponse\n           * @instance\n           */\n\n          RunQueryResponse.prototype.readTime = null;\n          /**\n           * RunQueryResponse skippedResults.\n           * @member {number} skippedResults\n           * @memberof google.firestore.v1.RunQueryResponse\n           * @instance\n           */\n\n          RunQueryResponse.prototype.skippedResults = 0;\n          /**\n           * Creates a RunQueryResponse message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.RunQueryResponse\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.RunQueryResponse} RunQueryResponse\n           */\n\n          RunQueryResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.RunQueryResponse) return object;\n            var message = new $root.google.firestore.v1.RunQueryResponse();\n            if (object.transaction != null) if (typeof object.transaction === \"string\") $util.base64.decode(object.transaction, message.transaction = $util.newBuffer($util.base64.length(object.transaction)), 0);else if (object.transaction.length) message.transaction = object.transaction;\n\n            if (object.document != null) {\n              if (typeof object.document !== \"object\") throw TypeError(\".google.firestore.v1.RunQueryResponse.document: object expected\");\n              message.document = $root.google.firestore.v1.Document.fromObject(object.document);\n            }\n\n            if (object.readTime != null) {\n              if (typeof object.readTime !== \"object\") throw TypeError(\".google.firestore.v1.RunQueryResponse.readTime: object expected\");\n              message.readTime = $root.google.protobuf.Timestamp.fromObject(object.readTime);\n            }\n\n            if (object.skippedResults != null) message.skippedResults = object.skippedResults | 0;\n            return message;\n          };\n          /**\n           * Creates a plain object from a RunQueryResponse message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.RunQueryResponse\n           * @static\n           * @param {google.firestore.v1.RunQueryResponse} message RunQueryResponse\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          RunQueryResponse.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.document = null;\n              if (options.bytes === String) object.transaction = \"\";else {\n                object.transaction = [];\n                if (options.bytes !== Array) object.transaction = $util.newBuffer(object.transaction);\n              }\n              object.readTime = null;\n              object.skippedResults = 0;\n            }\n\n            if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.firestore.v1.Document.toObject(message.document, options);\n            if (message.transaction != null && message.hasOwnProperty(\"transaction\")) object.transaction = options.bytes === String ? $util.base64.encode(message.transaction, 0, message.transaction.length) : options.bytes === Array ? Array.prototype.slice.call(message.transaction) : message.transaction;\n            if (message.readTime != null && message.hasOwnProperty(\"readTime\")) object.readTime = $root.google.protobuf.Timestamp.toObject(message.readTime, options);\n            if (message.skippedResults != null && message.hasOwnProperty(\"skippedResults\")) object.skippedResults = message.skippedResults;\n            return object;\n          };\n          /**\n           * Converts this RunQueryResponse to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.RunQueryResponse\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          RunQueryResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return RunQueryResponse;\n        }();\n\n        v1.PartitionQueryRequest = function () {\n          /**\n           * Properties of a PartitionQueryRequest.\n           * @memberof google.firestore.v1\n           * @interface IPartitionQueryRequest\n           * @property {string|null} [parent] PartitionQueryRequest parent\n           * @property {google.firestore.v1.IStructuredQuery|null} [structuredQuery] PartitionQueryRequest structuredQuery\n           * @property {number|string|null} [partitionCount] PartitionQueryRequest partitionCount\n           * @property {string|null} [pageToken] PartitionQueryRequest pageToken\n           * @property {number|null} [pageSize] PartitionQueryRequest pageSize\n           */\n\n          /**\n           * Constructs a new PartitionQueryRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a PartitionQueryRequest.\n           * @implements IPartitionQueryRequest\n           * @constructor\n           * @param {google.firestore.v1.IPartitionQueryRequest=} [properties] Properties to set\n           */\n          function PartitionQueryRequest(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * PartitionQueryRequest parent.\n           * @member {string} parent\n           * @memberof google.firestore.v1.PartitionQueryRequest\n           * @instance\n           */\n\n\n          PartitionQueryRequest.prototype.parent = \"\";\n          /**\n           * PartitionQueryRequest structuredQuery.\n           * @member {google.firestore.v1.IStructuredQuery|null|undefined} structuredQuery\n           * @memberof google.firestore.v1.PartitionQueryRequest\n           * @instance\n           */\n\n          PartitionQueryRequest.prototype.structuredQuery = null;\n          /**\n           * PartitionQueryRequest partitionCount.\n           * @member {number|string} partitionCount\n           * @memberof google.firestore.v1.PartitionQueryRequest\n           * @instance\n           */\n\n          PartitionQueryRequest.prototype.partitionCount = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n          /**\n           * PartitionQueryRequest pageToken.\n           * @member {string} pageToken\n           * @memberof google.firestore.v1.PartitionQueryRequest\n           * @instance\n           */\n\n          PartitionQueryRequest.prototype.pageToken = \"\";\n          /**\n           * PartitionQueryRequest pageSize.\n           * @member {number} pageSize\n           * @memberof google.firestore.v1.PartitionQueryRequest\n           * @instance\n           */\n\n          PartitionQueryRequest.prototype.pageSize = 0; // OneOf field names bound to virtual getters and setters\n\n          var $oneOfFields;\n          /**\n           * PartitionQueryRequest queryType.\n           * @member {\"structuredQuery\"|undefined} queryType\n           * @memberof google.firestore.v1.PartitionQueryRequest\n           * @instance\n           */\n\n          Object.defineProperty(PartitionQueryRequest.prototype, \"queryType\", {\n            get: $util.oneOfGetter($oneOfFields = [\"structuredQuery\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Creates a PartitionQueryRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.PartitionQueryRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.PartitionQueryRequest} PartitionQueryRequest\n           */\n\n          PartitionQueryRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.PartitionQueryRequest) return object;\n            var message = new $root.google.firestore.v1.PartitionQueryRequest();\n            if (object.parent != null) message.parent = String(object.parent);\n\n            if (object.structuredQuery != null) {\n              if (typeof object.structuredQuery !== \"object\") throw TypeError(\".google.firestore.v1.PartitionQueryRequest.structuredQuery: object expected\");\n              message.structuredQuery = $root.google.firestore.v1.StructuredQuery.fromObject(object.structuredQuery);\n            }\n\n            if (object.partitionCount != null) if ($util.Long) (message.partitionCount = $util.Long.fromValue(object.partitionCount)).unsigned = false;else if (typeof object.partitionCount === \"string\") message.partitionCount = parseInt(object.partitionCount, 10);else if (typeof object.partitionCount === \"number\") message.partitionCount = object.partitionCount;else if (typeof object.partitionCount === \"object\") message.partitionCount = new $util.LongBits(object.partitionCount.low >>> 0, object.partitionCount.high >>> 0).toNumber();\n            if (object.pageToken != null) message.pageToken = String(object.pageToken);\n            if (object.pageSize != null) message.pageSize = object.pageSize | 0;\n            return message;\n          };\n          /**\n           * Creates a plain object from a PartitionQueryRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.PartitionQueryRequest\n           * @static\n           * @param {google.firestore.v1.PartitionQueryRequest} message PartitionQueryRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          PartitionQueryRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.parent = \"\";\n\n              if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.partitionCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n              } else object.partitionCount = options.longs === String ? \"0\" : 0;\n\n              object.pageToken = \"\";\n              object.pageSize = 0;\n            }\n\n            if (message.parent != null && message.hasOwnProperty(\"parent\")) object.parent = message.parent;\n\n            if (message.structuredQuery != null && message.hasOwnProperty(\"structuredQuery\")) {\n              object.structuredQuery = $root.google.firestore.v1.StructuredQuery.toObject(message.structuredQuery, options);\n              if (options.oneofs) object.queryType = \"structuredQuery\";\n            }\n\n            if (message.partitionCount != null && message.hasOwnProperty(\"partitionCount\")) if (typeof message.partitionCount === \"number\") object.partitionCount = options.longs === String ? String(message.partitionCount) : message.partitionCount;else object.partitionCount = options.longs === String ? $util.Long.prototype.toString.call(message.partitionCount) : options.longs === Number ? new $util.LongBits(message.partitionCount.low >>> 0, message.partitionCount.high >>> 0).toNumber() : message.partitionCount;\n            if (message.pageToken != null && message.hasOwnProperty(\"pageToken\")) object.pageToken = message.pageToken;\n            if (message.pageSize != null && message.hasOwnProperty(\"pageSize\")) object.pageSize = message.pageSize;\n            return object;\n          };\n          /**\n           * Converts this PartitionQueryRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.PartitionQueryRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          PartitionQueryRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return PartitionQueryRequest;\n        }();\n\n        v1.PartitionQueryResponse = function () {\n          /**\n           * Properties of a PartitionQueryResponse.\n           * @memberof google.firestore.v1\n           * @interface IPartitionQueryResponse\n           * @property {Array.<google.firestore.v1.ICursor>|null} [partitions] PartitionQueryResponse partitions\n           * @property {string|null} [nextPageToken] PartitionQueryResponse nextPageToken\n           */\n\n          /**\n           * Constructs a new PartitionQueryResponse.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a PartitionQueryResponse.\n           * @implements IPartitionQueryResponse\n           * @constructor\n           * @param {google.firestore.v1.IPartitionQueryResponse=} [properties] Properties to set\n           */\n          function PartitionQueryResponse(properties) {\n            this.partitions = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * PartitionQueryResponse partitions.\n           * @member {Array.<google.firestore.v1.ICursor>} partitions\n           * @memberof google.firestore.v1.PartitionQueryResponse\n           * @instance\n           */\n\n\n          PartitionQueryResponse.prototype.partitions = $util.emptyArray;\n          /**\n           * PartitionQueryResponse nextPageToken.\n           * @member {string} nextPageToken\n           * @memberof google.firestore.v1.PartitionQueryResponse\n           * @instance\n           */\n\n          PartitionQueryResponse.prototype.nextPageToken = \"\";\n          /**\n           * Creates a PartitionQueryResponse message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.PartitionQueryResponse\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.PartitionQueryResponse} PartitionQueryResponse\n           */\n\n          PartitionQueryResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.PartitionQueryResponse) return object;\n            var message = new $root.google.firestore.v1.PartitionQueryResponse();\n\n            if (object.partitions) {\n              if (!Array.isArray(object.partitions)) throw TypeError(\".google.firestore.v1.PartitionQueryResponse.partitions: array expected\");\n              message.partitions = [];\n\n              for (var i = 0; i < object.partitions.length; ++i) {\n                if (typeof object.partitions[i] !== \"object\") throw TypeError(\".google.firestore.v1.PartitionQueryResponse.partitions: object expected\");\n                message.partitions[i] = $root.google.firestore.v1.Cursor.fromObject(object.partitions[i]);\n              }\n            }\n\n            if (object.nextPageToken != null) message.nextPageToken = String(object.nextPageToken);\n            return message;\n          };\n          /**\n           * Creates a plain object from a PartitionQueryResponse message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.PartitionQueryResponse\n           * @static\n           * @param {google.firestore.v1.PartitionQueryResponse} message PartitionQueryResponse\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          PartitionQueryResponse.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.partitions = [];\n            if (options.defaults) object.nextPageToken = \"\";\n\n            if (message.partitions && message.partitions.length) {\n              object.partitions = [];\n\n              for (var j = 0; j < message.partitions.length; ++j) {\n                object.partitions[j] = $root.google.firestore.v1.Cursor.toObject(message.partitions[j], options);\n              }\n            }\n\n            if (message.nextPageToken != null && message.hasOwnProperty(\"nextPageToken\")) object.nextPageToken = message.nextPageToken;\n            return object;\n          };\n          /**\n           * Converts this PartitionQueryResponse to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.PartitionQueryResponse\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          PartitionQueryResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return PartitionQueryResponse;\n        }();\n\n        v1.WriteRequest = function () {\n          /**\n           * Properties of a WriteRequest.\n           * @memberof google.firestore.v1\n           * @interface IWriteRequest\n           * @property {string|null} [database] WriteRequest database\n           * @property {string|null} [streamId] WriteRequest streamId\n           * @property {Array.<google.firestore.v1.IWrite>|null} [writes] WriteRequest writes\n           * @property {Uint8Array|null} [streamToken] WriteRequest streamToken\n           * @property {Object.<string,string>|null} [labels] WriteRequest labels\n           */\n\n          /**\n           * Constructs a new WriteRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a WriteRequest.\n           * @implements IWriteRequest\n           * @constructor\n           * @param {google.firestore.v1.IWriteRequest=} [properties] Properties to set\n           */\n          function WriteRequest(properties) {\n            this.writes = [];\n            this.labels = {};\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * WriteRequest database.\n           * @member {string} database\n           * @memberof google.firestore.v1.WriteRequest\n           * @instance\n           */\n\n\n          WriteRequest.prototype.database = \"\";\n          /**\n           * WriteRequest streamId.\n           * @member {string} streamId\n           * @memberof google.firestore.v1.WriteRequest\n           * @instance\n           */\n\n          WriteRequest.prototype.streamId = \"\";\n          /**\n           * WriteRequest writes.\n           * @member {Array.<google.firestore.v1.IWrite>} writes\n           * @memberof google.firestore.v1.WriteRequest\n           * @instance\n           */\n\n          WriteRequest.prototype.writes = $util.emptyArray;\n          /**\n           * WriteRequest streamToken.\n           * @member {Uint8Array} streamToken\n           * @memberof google.firestore.v1.WriteRequest\n           * @instance\n           */\n\n          WriteRequest.prototype.streamToken = $util.newBuffer([]);\n          /**\n           * WriteRequest labels.\n           * @member {Object.<string,string>} labels\n           * @memberof google.firestore.v1.WriteRequest\n           * @instance\n           */\n\n          WriteRequest.prototype.labels = $util.emptyObject;\n          /**\n           * Creates a WriteRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.WriteRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.WriteRequest} WriteRequest\n           */\n\n          WriteRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.WriteRequest) return object;\n            var message = new $root.google.firestore.v1.WriteRequest();\n            if (object.database != null) message.database = String(object.database);\n            if (object.streamId != null) message.streamId = String(object.streamId);\n\n            if (object.writes) {\n              if (!Array.isArray(object.writes)) throw TypeError(\".google.firestore.v1.WriteRequest.writes: array expected\");\n              message.writes = [];\n\n              for (var i = 0; i < object.writes.length; ++i) {\n                if (typeof object.writes[i] !== \"object\") throw TypeError(\".google.firestore.v1.WriteRequest.writes: object expected\");\n                message.writes[i] = $root.google.firestore.v1.Write.fromObject(object.writes[i]);\n              }\n            }\n\n            if (object.streamToken != null) if (typeof object.streamToken === \"string\") $util.base64.decode(object.streamToken, message.streamToken = $util.newBuffer($util.base64.length(object.streamToken)), 0);else if (object.streamToken.length) message.streamToken = object.streamToken;\n\n            if (object.labels) {\n              if (typeof object.labels !== \"object\") throw TypeError(\".google.firestore.v1.WriteRequest.labels: object expected\");\n              message.labels = {};\n\n              for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i) {\n                message.labels[keys[i]] = String(object.labels[keys[i]]);\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a WriteRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.WriteRequest\n           * @static\n           * @param {google.firestore.v1.WriteRequest} message WriteRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          WriteRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.writes = [];\n            if (options.objects || options.defaults) object.labels = {};\n\n            if (options.defaults) {\n              object.database = \"\";\n              object.streamId = \"\";\n              if (options.bytes === String) object.streamToken = \"\";else {\n                object.streamToken = [];\n                if (options.bytes !== Array) object.streamToken = $util.newBuffer(object.streamToken);\n              }\n            }\n\n            if (message.database != null && message.hasOwnProperty(\"database\")) object.database = message.database;\n            if (message.streamId != null && message.hasOwnProperty(\"streamId\")) object.streamId = message.streamId;\n\n            if (message.writes && message.writes.length) {\n              object.writes = [];\n\n              for (var j = 0; j < message.writes.length; ++j) {\n                object.writes[j] = $root.google.firestore.v1.Write.toObject(message.writes[j], options);\n              }\n            }\n\n            if (message.streamToken != null && message.hasOwnProperty(\"streamToken\")) object.streamToken = options.bytes === String ? $util.base64.encode(message.streamToken, 0, message.streamToken.length) : options.bytes === Array ? Array.prototype.slice.call(message.streamToken) : message.streamToken;\n            var keys2;\n\n            if (message.labels && (keys2 = Object.keys(message.labels)).length) {\n              object.labels = {};\n\n              for (var j = 0; j < keys2.length; ++j) {\n                object.labels[keys2[j]] = message.labels[keys2[j]];\n              }\n            }\n\n            return object;\n          };\n          /**\n           * Converts this WriteRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.WriteRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          WriteRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return WriteRequest;\n        }();\n\n        v1.WriteResponse = function () {\n          /**\n           * Properties of a WriteResponse.\n           * @memberof google.firestore.v1\n           * @interface IWriteResponse\n           * @property {string|null} [streamId] WriteResponse streamId\n           * @property {Uint8Array|null} [streamToken] WriteResponse streamToken\n           * @property {Array.<google.firestore.v1.IWriteResult>|null} [writeResults] WriteResponse writeResults\n           * @property {google.protobuf.ITimestamp|null} [commitTime] WriteResponse commitTime\n           */\n\n          /**\n           * Constructs a new WriteResponse.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a WriteResponse.\n           * @implements IWriteResponse\n           * @constructor\n           * @param {google.firestore.v1.IWriteResponse=} [properties] Properties to set\n           */\n          function WriteResponse(properties) {\n            this.writeResults = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * WriteResponse streamId.\n           * @member {string} streamId\n           * @memberof google.firestore.v1.WriteResponse\n           * @instance\n           */\n\n\n          WriteResponse.prototype.streamId = \"\";\n          /**\n           * WriteResponse streamToken.\n           * @member {Uint8Array} streamToken\n           * @memberof google.firestore.v1.WriteResponse\n           * @instance\n           */\n\n          WriteResponse.prototype.streamToken = $util.newBuffer([]);\n          /**\n           * WriteResponse writeResults.\n           * @member {Array.<google.firestore.v1.IWriteResult>} writeResults\n           * @memberof google.firestore.v1.WriteResponse\n           * @instance\n           */\n\n          WriteResponse.prototype.writeResults = $util.emptyArray;\n          /**\n           * WriteResponse commitTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} commitTime\n           * @memberof google.firestore.v1.WriteResponse\n           * @instance\n           */\n\n          WriteResponse.prototype.commitTime = null;\n          /**\n           * Creates a WriteResponse message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.WriteResponse\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.WriteResponse} WriteResponse\n           */\n\n          WriteResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.WriteResponse) return object;\n            var message = new $root.google.firestore.v1.WriteResponse();\n            if (object.streamId != null) message.streamId = String(object.streamId);\n            if (object.streamToken != null) if (typeof object.streamToken === \"string\") $util.base64.decode(object.streamToken, message.streamToken = $util.newBuffer($util.base64.length(object.streamToken)), 0);else if (object.streamToken.length) message.streamToken = object.streamToken;\n\n            if (object.writeResults) {\n              if (!Array.isArray(object.writeResults)) throw TypeError(\".google.firestore.v1.WriteResponse.writeResults: array expected\");\n              message.writeResults = [];\n\n              for (var i = 0; i < object.writeResults.length; ++i) {\n                if (typeof object.writeResults[i] !== \"object\") throw TypeError(\".google.firestore.v1.WriteResponse.writeResults: object expected\");\n                message.writeResults[i] = $root.google.firestore.v1.WriteResult.fromObject(object.writeResults[i]);\n              }\n            }\n\n            if (object.commitTime != null) {\n              if (typeof object.commitTime !== \"object\") throw TypeError(\".google.firestore.v1.WriteResponse.commitTime: object expected\");\n              message.commitTime = $root.google.protobuf.Timestamp.fromObject(object.commitTime);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a WriteResponse message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.WriteResponse\n           * @static\n           * @param {google.firestore.v1.WriteResponse} message WriteResponse\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          WriteResponse.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.writeResults = [];\n\n            if (options.defaults) {\n              object.streamId = \"\";\n              if (options.bytes === String) object.streamToken = \"\";else {\n                object.streamToken = [];\n                if (options.bytes !== Array) object.streamToken = $util.newBuffer(object.streamToken);\n              }\n              object.commitTime = null;\n            }\n\n            if (message.streamId != null && message.hasOwnProperty(\"streamId\")) object.streamId = message.streamId;\n            if (message.streamToken != null && message.hasOwnProperty(\"streamToken\")) object.streamToken = options.bytes === String ? $util.base64.encode(message.streamToken, 0, message.streamToken.length) : options.bytes === Array ? Array.prototype.slice.call(message.streamToken) : message.streamToken;\n\n            if (message.writeResults && message.writeResults.length) {\n              object.writeResults = [];\n\n              for (var j = 0; j < message.writeResults.length; ++j) {\n                object.writeResults[j] = $root.google.firestore.v1.WriteResult.toObject(message.writeResults[j], options);\n              }\n            }\n\n            if (message.commitTime != null && message.hasOwnProperty(\"commitTime\")) object.commitTime = $root.google.protobuf.Timestamp.toObject(message.commitTime, options);\n            return object;\n          };\n          /**\n           * Converts this WriteResponse to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.WriteResponse\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          WriteResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return WriteResponse;\n        }();\n\n        v1.ListenRequest = function () {\n          /**\n           * Properties of a ListenRequest.\n           * @memberof google.firestore.v1\n           * @interface IListenRequest\n           * @property {string|null} [database] ListenRequest database\n           * @property {google.firestore.v1.ITarget|null} [addTarget] ListenRequest addTarget\n           * @property {number|null} [removeTarget] ListenRequest removeTarget\n           * @property {Object.<string,string>|null} [labels] ListenRequest labels\n           */\n\n          /**\n           * Constructs a new ListenRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a ListenRequest.\n           * @implements IListenRequest\n           * @constructor\n           * @param {google.firestore.v1.IListenRequest=} [properties] Properties to set\n           */\n          function ListenRequest(properties) {\n            this.labels = {};\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * ListenRequest database.\n           * @member {string} database\n           * @memberof google.firestore.v1.ListenRequest\n           * @instance\n           */\n\n\n          ListenRequest.prototype.database = \"\";\n          /**\n           * ListenRequest addTarget.\n           * @member {google.firestore.v1.ITarget|null|undefined} addTarget\n           * @memberof google.firestore.v1.ListenRequest\n           * @instance\n           */\n\n          ListenRequest.prototype.addTarget = null;\n          /**\n           * ListenRequest removeTarget.\n           * @member {number|null|undefined} removeTarget\n           * @memberof google.firestore.v1.ListenRequest\n           * @instance\n           */\n\n          ListenRequest.prototype.removeTarget = null;\n          /**\n           * ListenRequest labels.\n           * @member {Object.<string,string>} labels\n           * @memberof google.firestore.v1.ListenRequest\n           * @instance\n           */\n\n          ListenRequest.prototype.labels = $util.emptyObject; // OneOf field names bound to virtual getters and setters\n\n          var $oneOfFields;\n          /**\n           * ListenRequest targetChange.\n           * @member {\"addTarget\"|\"removeTarget\"|undefined} targetChange\n           * @memberof google.firestore.v1.ListenRequest\n           * @instance\n           */\n\n          Object.defineProperty(ListenRequest.prototype, \"targetChange\", {\n            get: $util.oneOfGetter($oneOfFields = [\"addTarget\", \"removeTarget\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Creates a ListenRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.ListenRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.ListenRequest} ListenRequest\n           */\n\n          ListenRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.ListenRequest) return object;\n            var message = new $root.google.firestore.v1.ListenRequest();\n            if (object.database != null) message.database = String(object.database);\n\n            if (object.addTarget != null) {\n              if (typeof object.addTarget !== \"object\") throw TypeError(\".google.firestore.v1.ListenRequest.addTarget: object expected\");\n              message.addTarget = $root.google.firestore.v1.Target.fromObject(object.addTarget);\n            }\n\n            if (object.removeTarget != null) message.removeTarget = object.removeTarget | 0;\n\n            if (object.labels) {\n              if (typeof object.labels !== \"object\") throw TypeError(\".google.firestore.v1.ListenRequest.labels: object expected\");\n              message.labels = {};\n\n              for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i) {\n                message.labels[keys[i]] = String(object.labels[keys[i]]);\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a ListenRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.ListenRequest\n           * @static\n           * @param {google.firestore.v1.ListenRequest} message ListenRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          ListenRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.objects || options.defaults) object.labels = {};\n            if (options.defaults) object.database = \"\";\n            if (message.database != null && message.hasOwnProperty(\"database\")) object.database = message.database;\n\n            if (message.addTarget != null && message.hasOwnProperty(\"addTarget\")) {\n              object.addTarget = $root.google.firestore.v1.Target.toObject(message.addTarget, options);\n              if (options.oneofs) object.targetChange = \"addTarget\";\n            }\n\n            if (message.removeTarget != null && message.hasOwnProperty(\"removeTarget\")) {\n              object.removeTarget = message.removeTarget;\n              if (options.oneofs) object.targetChange = \"removeTarget\";\n            }\n\n            var keys2;\n\n            if (message.labels && (keys2 = Object.keys(message.labels)).length) {\n              object.labels = {};\n\n              for (var j = 0; j < keys2.length; ++j) {\n                object.labels[keys2[j]] = message.labels[keys2[j]];\n              }\n            }\n\n            return object;\n          };\n          /**\n           * Converts this ListenRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.ListenRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          ListenRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return ListenRequest;\n        }();\n\n        v1.ListenResponse = function () {\n          /**\n           * Properties of a ListenResponse.\n           * @memberof google.firestore.v1\n           * @interface IListenResponse\n           * @property {google.firestore.v1.ITargetChange|null} [targetChange] ListenResponse targetChange\n           * @property {google.firestore.v1.IDocumentChange|null} [documentChange] ListenResponse documentChange\n           * @property {google.firestore.v1.IDocumentDelete|null} [documentDelete] ListenResponse documentDelete\n           * @property {google.firestore.v1.IDocumentRemove|null} [documentRemove] ListenResponse documentRemove\n           * @property {google.firestore.v1.IExistenceFilter|null} [filter] ListenResponse filter\n           */\n\n          /**\n           * Constructs a new ListenResponse.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a ListenResponse.\n           * @implements IListenResponse\n           * @constructor\n           * @param {google.firestore.v1.IListenResponse=} [properties] Properties to set\n           */\n          function ListenResponse(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * ListenResponse targetChange.\n           * @member {google.firestore.v1.ITargetChange|null|undefined} targetChange\n           * @memberof google.firestore.v1.ListenResponse\n           * @instance\n           */\n\n\n          ListenResponse.prototype.targetChange = null;\n          /**\n           * ListenResponse documentChange.\n           * @member {google.firestore.v1.IDocumentChange|null|undefined} documentChange\n           * @memberof google.firestore.v1.ListenResponse\n           * @instance\n           */\n\n          ListenResponse.prototype.documentChange = null;\n          /**\n           * ListenResponse documentDelete.\n           * @member {google.firestore.v1.IDocumentDelete|null|undefined} documentDelete\n           * @memberof google.firestore.v1.ListenResponse\n           * @instance\n           */\n\n          ListenResponse.prototype.documentDelete = null;\n          /**\n           * ListenResponse documentRemove.\n           * @member {google.firestore.v1.IDocumentRemove|null|undefined} documentRemove\n           * @memberof google.firestore.v1.ListenResponse\n           * @instance\n           */\n\n          ListenResponse.prototype.documentRemove = null;\n          /**\n           * ListenResponse filter.\n           * @member {google.firestore.v1.IExistenceFilter|null|undefined} filter\n           * @memberof google.firestore.v1.ListenResponse\n           * @instance\n           */\n\n          ListenResponse.prototype.filter = null; // OneOf field names bound to virtual getters and setters\n\n          var $oneOfFields;\n          /**\n           * ListenResponse responseType.\n           * @member {\"targetChange\"|\"documentChange\"|\"documentDelete\"|\"documentRemove\"|\"filter\"|undefined} responseType\n           * @memberof google.firestore.v1.ListenResponse\n           * @instance\n           */\n\n          Object.defineProperty(ListenResponse.prototype, \"responseType\", {\n            get: $util.oneOfGetter($oneOfFields = [\"targetChange\", \"documentChange\", \"documentDelete\", \"documentRemove\", \"filter\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Creates a ListenResponse message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.ListenResponse\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.ListenResponse} ListenResponse\n           */\n\n          ListenResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.ListenResponse) return object;\n            var message = new $root.google.firestore.v1.ListenResponse();\n\n            if (object.targetChange != null) {\n              if (typeof object.targetChange !== \"object\") throw TypeError(\".google.firestore.v1.ListenResponse.targetChange: object expected\");\n              message.targetChange = $root.google.firestore.v1.TargetChange.fromObject(object.targetChange);\n            }\n\n            if (object.documentChange != null) {\n              if (typeof object.documentChange !== \"object\") throw TypeError(\".google.firestore.v1.ListenResponse.documentChange: object expected\");\n              message.documentChange = $root.google.firestore.v1.DocumentChange.fromObject(object.documentChange);\n            }\n\n            if (object.documentDelete != null) {\n              if (typeof object.documentDelete !== \"object\") throw TypeError(\".google.firestore.v1.ListenResponse.documentDelete: object expected\");\n              message.documentDelete = $root.google.firestore.v1.DocumentDelete.fromObject(object.documentDelete);\n            }\n\n            if (object.documentRemove != null) {\n              if (typeof object.documentRemove !== \"object\") throw TypeError(\".google.firestore.v1.ListenResponse.documentRemove: object expected\");\n              message.documentRemove = $root.google.firestore.v1.DocumentRemove.fromObject(object.documentRemove);\n            }\n\n            if (object.filter != null) {\n              if (typeof object.filter !== \"object\") throw TypeError(\".google.firestore.v1.ListenResponse.filter: object expected\");\n              message.filter = $root.google.firestore.v1.ExistenceFilter.fromObject(object.filter);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a ListenResponse message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.ListenResponse\n           * @static\n           * @param {google.firestore.v1.ListenResponse} message ListenResponse\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          ListenResponse.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (message.targetChange != null && message.hasOwnProperty(\"targetChange\")) {\n              object.targetChange = $root.google.firestore.v1.TargetChange.toObject(message.targetChange, options);\n              if (options.oneofs) object.responseType = \"targetChange\";\n            }\n\n            if (message.documentChange != null && message.hasOwnProperty(\"documentChange\")) {\n              object.documentChange = $root.google.firestore.v1.DocumentChange.toObject(message.documentChange, options);\n              if (options.oneofs) object.responseType = \"documentChange\";\n            }\n\n            if (message.documentDelete != null && message.hasOwnProperty(\"documentDelete\")) {\n              object.documentDelete = $root.google.firestore.v1.DocumentDelete.toObject(message.documentDelete, options);\n              if (options.oneofs) object.responseType = \"documentDelete\";\n            }\n\n            if (message.filter != null && message.hasOwnProperty(\"filter\")) {\n              object.filter = $root.google.firestore.v1.ExistenceFilter.toObject(message.filter, options);\n              if (options.oneofs) object.responseType = \"filter\";\n            }\n\n            if (message.documentRemove != null && message.hasOwnProperty(\"documentRemove\")) {\n              object.documentRemove = $root.google.firestore.v1.DocumentRemove.toObject(message.documentRemove, options);\n              if (options.oneofs) object.responseType = \"documentRemove\";\n            }\n\n            return object;\n          };\n          /**\n           * Converts this ListenResponse to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.ListenResponse\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          ListenResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return ListenResponse;\n        }();\n\n        v1.Target = function () {\n          /**\n           * Properties of a Target.\n           * @memberof google.firestore.v1\n           * @interface ITarget\n           * @property {google.firestore.v1.Target.IQueryTarget|null} [query] Target query\n           * @property {google.firestore.v1.Target.IDocumentsTarget|null} [documents] Target documents\n           * @property {Uint8Array|null} [resumeToken] Target resumeToken\n           * @property {google.protobuf.ITimestamp|null} [readTime] Target readTime\n           * @property {number|null} [targetId] Target targetId\n           * @property {boolean|null} [once] Target once\n           */\n\n          /**\n           * Constructs a new Target.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a Target.\n           * @implements ITarget\n           * @constructor\n           * @param {google.firestore.v1.ITarget=} [properties] Properties to set\n           */\n          function Target(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * Target query.\n           * @member {google.firestore.v1.Target.IQueryTarget|null|undefined} query\n           * @memberof google.firestore.v1.Target\n           * @instance\n           */\n\n\n          Target.prototype.query = null;\n          /**\n           * Target documents.\n           * @member {google.firestore.v1.Target.IDocumentsTarget|null|undefined} documents\n           * @memberof google.firestore.v1.Target\n           * @instance\n           */\n\n          Target.prototype.documents = null;\n          /**\n           * Target resumeToken.\n           * @member {Uint8Array|null|undefined} resumeToken\n           * @memberof google.firestore.v1.Target\n           * @instance\n           */\n\n          Target.prototype.resumeToken = null;\n          /**\n           * Target readTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} readTime\n           * @memberof google.firestore.v1.Target\n           * @instance\n           */\n\n          Target.prototype.readTime = null;\n          /**\n           * Target targetId.\n           * @member {number} targetId\n           * @memberof google.firestore.v1.Target\n           * @instance\n           */\n\n          Target.prototype.targetId = 0;\n          /**\n           * Target once.\n           * @member {boolean} once\n           * @memberof google.firestore.v1.Target\n           * @instance\n           */\n\n          Target.prototype.once = false; // OneOf field names bound to virtual getters and setters\n\n          var $oneOfFields;\n          /**\n           * Target targetType.\n           * @member {\"query\"|\"documents\"|undefined} targetType\n           * @memberof google.firestore.v1.Target\n           * @instance\n           */\n\n          Object.defineProperty(Target.prototype, \"targetType\", {\n            get: $util.oneOfGetter($oneOfFields = [\"query\", \"documents\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Target resumeType.\n           * @member {\"resumeToken\"|\"readTime\"|undefined} resumeType\n           * @memberof google.firestore.v1.Target\n           * @instance\n           */\n\n          Object.defineProperty(Target.prototype, \"resumeType\", {\n            get: $util.oneOfGetter($oneOfFields = [\"resumeToken\", \"readTime\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Creates a Target message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.Target\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.Target} Target\n           */\n\n          Target.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.Target) return object;\n            var message = new $root.google.firestore.v1.Target();\n\n            if (object.query != null) {\n              if (typeof object.query !== \"object\") throw TypeError(\".google.firestore.v1.Target.query: object expected\");\n              message.query = $root.google.firestore.v1.Target.QueryTarget.fromObject(object.query);\n            }\n\n            if (object.documents != null) {\n              if (typeof object.documents !== \"object\") throw TypeError(\".google.firestore.v1.Target.documents: object expected\");\n              message.documents = $root.google.firestore.v1.Target.DocumentsTarget.fromObject(object.documents);\n            }\n\n            if (object.resumeToken != null) if (typeof object.resumeToken === \"string\") $util.base64.decode(object.resumeToken, message.resumeToken = $util.newBuffer($util.base64.length(object.resumeToken)), 0);else if (object.resumeToken.length) message.resumeToken = object.resumeToken;\n\n            if (object.readTime != null) {\n              if (typeof object.readTime !== \"object\") throw TypeError(\".google.firestore.v1.Target.readTime: object expected\");\n              message.readTime = $root.google.protobuf.Timestamp.fromObject(object.readTime);\n            }\n\n            if (object.targetId != null) message.targetId = object.targetId | 0;\n            if (object.once != null) message.once = Boolean(object.once);\n            return message;\n          };\n          /**\n           * Creates a plain object from a Target message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.Target\n           * @static\n           * @param {google.firestore.v1.Target} message Target\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          Target.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.targetId = 0;\n              object.once = false;\n            }\n\n            if (message.query != null && message.hasOwnProperty(\"query\")) {\n              object.query = $root.google.firestore.v1.Target.QueryTarget.toObject(message.query, options);\n              if (options.oneofs) object.targetType = \"query\";\n            }\n\n            if (message.documents != null && message.hasOwnProperty(\"documents\")) {\n              object.documents = $root.google.firestore.v1.Target.DocumentsTarget.toObject(message.documents, options);\n              if (options.oneofs) object.targetType = \"documents\";\n            }\n\n            if (message.resumeToken != null && message.hasOwnProperty(\"resumeToken\")) {\n              object.resumeToken = options.bytes === String ? $util.base64.encode(message.resumeToken, 0, message.resumeToken.length) : options.bytes === Array ? Array.prototype.slice.call(message.resumeToken) : message.resumeToken;\n              if (options.oneofs) object.resumeType = \"resumeToken\";\n            }\n\n            if (message.targetId != null && message.hasOwnProperty(\"targetId\")) object.targetId = message.targetId;\n            if (message.once != null && message.hasOwnProperty(\"once\")) object.once = message.once;\n\n            if (message.readTime != null && message.hasOwnProperty(\"readTime\")) {\n              object.readTime = $root.google.protobuf.Timestamp.toObject(message.readTime, options);\n              if (options.oneofs) object.resumeType = \"readTime\";\n            }\n\n            return object;\n          };\n          /**\n           * Converts this Target to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.Target\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          Target.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          Target.DocumentsTarget = function () {\n            /**\n             * Properties of a DocumentsTarget.\n             * @memberof google.firestore.v1.Target\n             * @interface IDocumentsTarget\n             * @property {Array.<string>|null} [documents] DocumentsTarget documents\n             */\n\n            /**\n             * Constructs a new DocumentsTarget.\n             * @memberof google.firestore.v1.Target\n             * @classdesc Represents a DocumentsTarget.\n             * @implements IDocumentsTarget\n             * @constructor\n             * @param {google.firestore.v1.Target.IDocumentsTarget=} [properties] Properties to set\n             */\n            function DocumentsTarget(properties) {\n              this.documents = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n            }\n            /**\n             * DocumentsTarget documents.\n             * @member {Array.<string>} documents\n             * @memberof google.firestore.v1.Target.DocumentsTarget\n             * @instance\n             */\n\n\n            DocumentsTarget.prototype.documents = $util.emptyArray;\n            /**\n             * Creates a DocumentsTarget message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.firestore.v1.Target.DocumentsTarget\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.firestore.v1.Target.DocumentsTarget} DocumentsTarget\n             */\n\n            DocumentsTarget.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.firestore.v1.Target.DocumentsTarget) return object;\n              var message = new $root.google.firestore.v1.Target.DocumentsTarget();\n\n              if (object.documents) {\n                if (!Array.isArray(object.documents)) throw TypeError(\".google.firestore.v1.Target.DocumentsTarget.documents: array expected\");\n                message.documents = [];\n\n                for (var i = 0; i < object.documents.length; ++i) {\n                  message.documents[i] = String(object.documents[i]);\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a DocumentsTarget message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.firestore.v1.Target.DocumentsTarget\n             * @static\n             * @param {google.firestore.v1.Target.DocumentsTarget} message DocumentsTarget\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            DocumentsTarget.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.arrays || options.defaults) object.documents = [];\n\n              if (message.documents && message.documents.length) {\n                object.documents = [];\n\n                for (var j = 0; j < message.documents.length; ++j) {\n                  object.documents[j] = message.documents[j];\n                }\n              }\n\n              return object;\n            };\n            /**\n             * Converts this DocumentsTarget to JSON.\n             * @function toJSON\n             * @memberof google.firestore.v1.Target.DocumentsTarget\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            DocumentsTarget.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return DocumentsTarget;\n          }();\n\n          Target.QueryTarget = function () {\n            /**\n             * Properties of a QueryTarget.\n             * @memberof google.firestore.v1.Target\n             * @interface IQueryTarget\n             * @property {string|null} [parent] QueryTarget parent\n             * @property {google.firestore.v1.IStructuredQuery|null} [structuredQuery] QueryTarget structuredQuery\n             */\n\n            /**\n             * Constructs a new QueryTarget.\n             * @memberof google.firestore.v1.Target\n             * @classdesc Represents a QueryTarget.\n             * @implements IQueryTarget\n             * @constructor\n             * @param {google.firestore.v1.Target.IQueryTarget=} [properties] Properties to set\n             */\n            function QueryTarget(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n            }\n            /**\n             * QueryTarget parent.\n             * @member {string} parent\n             * @memberof google.firestore.v1.Target.QueryTarget\n             * @instance\n             */\n\n\n            QueryTarget.prototype.parent = \"\";\n            /**\n             * QueryTarget structuredQuery.\n             * @member {google.firestore.v1.IStructuredQuery|null|undefined} structuredQuery\n             * @memberof google.firestore.v1.Target.QueryTarget\n             * @instance\n             */\n\n            QueryTarget.prototype.structuredQuery = null; // OneOf field names bound to virtual getters and setters\n\n            var $oneOfFields;\n            /**\n             * QueryTarget queryType.\n             * @member {\"structuredQuery\"|undefined} queryType\n             * @memberof google.firestore.v1.Target.QueryTarget\n             * @instance\n             */\n\n            Object.defineProperty(QueryTarget.prototype, \"queryType\", {\n              get: $util.oneOfGetter($oneOfFields = [\"structuredQuery\"]),\n              set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Creates a QueryTarget message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.firestore.v1.Target.QueryTarget\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.firestore.v1.Target.QueryTarget} QueryTarget\n             */\n\n            QueryTarget.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.firestore.v1.Target.QueryTarget) return object;\n              var message = new $root.google.firestore.v1.Target.QueryTarget();\n              if (object.parent != null) message.parent = String(object.parent);\n\n              if (object.structuredQuery != null) {\n                if (typeof object.structuredQuery !== \"object\") throw TypeError(\".google.firestore.v1.Target.QueryTarget.structuredQuery: object expected\");\n                message.structuredQuery = $root.google.firestore.v1.StructuredQuery.fromObject(object.structuredQuery);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a QueryTarget message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.firestore.v1.Target.QueryTarget\n             * @static\n             * @param {google.firestore.v1.Target.QueryTarget} message QueryTarget\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            QueryTarget.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.defaults) object.parent = \"\";\n              if (message.parent != null && message.hasOwnProperty(\"parent\")) object.parent = message.parent;\n\n              if (message.structuredQuery != null && message.hasOwnProperty(\"structuredQuery\")) {\n                object.structuredQuery = $root.google.firestore.v1.StructuredQuery.toObject(message.structuredQuery, options);\n                if (options.oneofs) object.queryType = \"structuredQuery\";\n              }\n\n              return object;\n            };\n            /**\n             * Converts this QueryTarget to JSON.\n             * @function toJSON\n             * @memberof google.firestore.v1.Target.QueryTarget\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            QueryTarget.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return QueryTarget;\n          }();\n\n          return Target;\n        }();\n\n        v1.TargetChange = function () {\n          /**\n           * Properties of a TargetChange.\n           * @memberof google.firestore.v1\n           * @interface ITargetChange\n           * @property {google.firestore.v1.TargetChange.TargetChangeType|null} [targetChangeType] TargetChange targetChangeType\n           * @property {Array.<number>|null} [targetIds] TargetChange targetIds\n           * @property {google.rpc.IStatus|null} [cause] TargetChange cause\n           * @property {Uint8Array|null} [resumeToken] TargetChange resumeToken\n           * @property {google.protobuf.ITimestamp|null} [readTime] TargetChange readTime\n           */\n\n          /**\n           * Constructs a new TargetChange.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a TargetChange.\n           * @implements ITargetChange\n           * @constructor\n           * @param {google.firestore.v1.ITargetChange=} [properties] Properties to set\n           */\n          function TargetChange(properties) {\n            this.targetIds = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * TargetChange targetChangeType.\n           * @member {google.firestore.v1.TargetChange.TargetChangeType} targetChangeType\n           * @memberof google.firestore.v1.TargetChange\n           * @instance\n           */\n\n\n          TargetChange.prototype.targetChangeType = 0;\n          /**\n           * TargetChange targetIds.\n           * @member {Array.<number>} targetIds\n           * @memberof google.firestore.v1.TargetChange\n           * @instance\n           */\n\n          TargetChange.prototype.targetIds = $util.emptyArray;\n          /**\n           * TargetChange cause.\n           * @member {google.rpc.IStatus|null|undefined} cause\n           * @memberof google.firestore.v1.TargetChange\n           * @instance\n           */\n\n          TargetChange.prototype.cause = null;\n          /**\n           * TargetChange resumeToken.\n           * @member {Uint8Array} resumeToken\n           * @memberof google.firestore.v1.TargetChange\n           * @instance\n           */\n\n          TargetChange.prototype.resumeToken = $util.newBuffer([]);\n          /**\n           * TargetChange readTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} readTime\n           * @memberof google.firestore.v1.TargetChange\n           * @instance\n           */\n\n          TargetChange.prototype.readTime = null;\n          /**\n           * Creates a TargetChange message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.TargetChange\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.TargetChange} TargetChange\n           */\n\n          TargetChange.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.TargetChange) return object;\n            var message = new $root.google.firestore.v1.TargetChange();\n\n            switch (object.targetChangeType) {\n              case \"NO_CHANGE\":\n              case 0:\n                message.targetChangeType = 0;\n                break;\n\n              case \"ADD\":\n              case 1:\n                message.targetChangeType = 1;\n                break;\n\n              case \"REMOVE\":\n              case 2:\n                message.targetChangeType = 2;\n                break;\n\n              case \"CURRENT\":\n              case 3:\n                message.targetChangeType = 3;\n                break;\n\n              case \"RESET\":\n              case 4:\n                message.targetChangeType = 4;\n                break;\n            }\n\n            if (object.targetIds) {\n              if (!Array.isArray(object.targetIds)) throw TypeError(\".google.firestore.v1.TargetChange.targetIds: array expected\");\n              message.targetIds = [];\n\n              for (var i = 0; i < object.targetIds.length; ++i) {\n                message.targetIds[i] = object.targetIds[i] | 0;\n              }\n            }\n\n            if (object.cause != null) {\n              if (typeof object.cause !== \"object\") throw TypeError(\".google.firestore.v1.TargetChange.cause: object expected\");\n              message.cause = $root.google.rpc.Status.fromObject(object.cause);\n            }\n\n            if (object.resumeToken != null) if (typeof object.resumeToken === \"string\") $util.base64.decode(object.resumeToken, message.resumeToken = $util.newBuffer($util.base64.length(object.resumeToken)), 0);else if (object.resumeToken.length) message.resumeToken = object.resumeToken;\n\n            if (object.readTime != null) {\n              if (typeof object.readTime !== \"object\") throw TypeError(\".google.firestore.v1.TargetChange.readTime: object expected\");\n              message.readTime = $root.google.protobuf.Timestamp.fromObject(object.readTime);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a TargetChange message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.TargetChange\n           * @static\n           * @param {google.firestore.v1.TargetChange} message TargetChange\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          TargetChange.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.targetIds = [];\n\n            if (options.defaults) {\n              object.targetChangeType = options.enums === String ? \"NO_CHANGE\" : 0;\n              object.cause = null;\n              if (options.bytes === String) object.resumeToken = \"\";else {\n                object.resumeToken = [];\n                if (options.bytes !== Array) object.resumeToken = $util.newBuffer(object.resumeToken);\n              }\n              object.readTime = null;\n            }\n\n            if (message.targetChangeType != null && message.hasOwnProperty(\"targetChangeType\")) object.targetChangeType = options.enums === String ? $root.google.firestore.v1.TargetChange.TargetChangeType[message.targetChangeType] : message.targetChangeType;\n\n            if (message.targetIds && message.targetIds.length) {\n              object.targetIds = [];\n\n              for (var j = 0; j < message.targetIds.length; ++j) {\n                object.targetIds[j] = message.targetIds[j];\n              }\n            }\n\n            if (message.cause != null && message.hasOwnProperty(\"cause\")) object.cause = $root.google.rpc.Status.toObject(message.cause, options);\n            if (message.resumeToken != null && message.hasOwnProperty(\"resumeToken\")) object.resumeToken = options.bytes === String ? $util.base64.encode(message.resumeToken, 0, message.resumeToken.length) : options.bytes === Array ? Array.prototype.slice.call(message.resumeToken) : message.resumeToken;\n            if (message.readTime != null && message.hasOwnProperty(\"readTime\")) object.readTime = $root.google.protobuf.Timestamp.toObject(message.readTime, options);\n            return object;\n          };\n          /**\n           * Converts this TargetChange to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.TargetChange\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          TargetChange.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n          /**\n           * TargetChangeType enum.\n           * @name google.firestore.v1.TargetChange.TargetChangeType\n           * @enum {string}\n           * @property {string} NO_CHANGE=NO_CHANGE NO_CHANGE value\n           * @property {string} ADD=ADD ADD value\n           * @property {string} REMOVE=REMOVE REMOVE value\n           * @property {string} CURRENT=CURRENT CURRENT value\n           * @property {string} RESET=RESET RESET value\n           */\n\n\n          TargetChange.TargetChangeType = function () {\n            var valuesById = {},\n                values = Object.create(valuesById);\n            values[valuesById[0] = \"NO_CHANGE\"] = \"NO_CHANGE\";\n            values[valuesById[1] = \"ADD\"] = \"ADD\";\n            values[valuesById[2] = \"REMOVE\"] = \"REMOVE\";\n            values[valuesById[3] = \"CURRENT\"] = \"CURRENT\";\n            values[valuesById[4] = \"RESET\"] = \"RESET\";\n            return values;\n          }();\n\n          return TargetChange;\n        }();\n\n        v1.ListCollectionIdsRequest = function () {\n          /**\n           * Properties of a ListCollectionIdsRequest.\n           * @memberof google.firestore.v1\n           * @interface IListCollectionIdsRequest\n           * @property {string|null} [parent] ListCollectionIdsRequest parent\n           * @property {number|null} [pageSize] ListCollectionIdsRequest pageSize\n           * @property {string|null} [pageToken] ListCollectionIdsRequest pageToken\n           */\n\n          /**\n           * Constructs a new ListCollectionIdsRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a ListCollectionIdsRequest.\n           * @implements IListCollectionIdsRequest\n           * @constructor\n           * @param {google.firestore.v1.IListCollectionIdsRequest=} [properties] Properties to set\n           */\n          function ListCollectionIdsRequest(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * ListCollectionIdsRequest parent.\n           * @member {string} parent\n           * @memberof google.firestore.v1.ListCollectionIdsRequest\n           * @instance\n           */\n\n\n          ListCollectionIdsRequest.prototype.parent = \"\";\n          /**\n           * ListCollectionIdsRequest pageSize.\n           * @member {number} pageSize\n           * @memberof google.firestore.v1.ListCollectionIdsRequest\n           * @instance\n           */\n\n          ListCollectionIdsRequest.prototype.pageSize = 0;\n          /**\n           * ListCollectionIdsRequest pageToken.\n           * @member {string} pageToken\n           * @memberof google.firestore.v1.ListCollectionIdsRequest\n           * @instance\n           */\n\n          ListCollectionIdsRequest.prototype.pageToken = \"\";\n          /**\n           * Creates a ListCollectionIdsRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.ListCollectionIdsRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.ListCollectionIdsRequest} ListCollectionIdsRequest\n           */\n\n          ListCollectionIdsRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.ListCollectionIdsRequest) return object;\n            var message = new $root.google.firestore.v1.ListCollectionIdsRequest();\n            if (object.parent != null) message.parent = String(object.parent);\n            if (object.pageSize != null) message.pageSize = object.pageSize | 0;\n            if (object.pageToken != null) message.pageToken = String(object.pageToken);\n            return message;\n          };\n          /**\n           * Creates a plain object from a ListCollectionIdsRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.ListCollectionIdsRequest\n           * @static\n           * @param {google.firestore.v1.ListCollectionIdsRequest} message ListCollectionIdsRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          ListCollectionIdsRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.parent = \"\";\n              object.pageSize = 0;\n              object.pageToken = \"\";\n            }\n\n            if (message.parent != null && message.hasOwnProperty(\"parent\")) object.parent = message.parent;\n            if (message.pageSize != null && message.hasOwnProperty(\"pageSize\")) object.pageSize = message.pageSize;\n            if (message.pageToken != null && message.hasOwnProperty(\"pageToken\")) object.pageToken = message.pageToken;\n            return object;\n          };\n          /**\n           * Converts this ListCollectionIdsRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.ListCollectionIdsRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          ListCollectionIdsRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return ListCollectionIdsRequest;\n        }();\n\n        v1.ListCollectionIdsResponse = function () {\n          /**\n           * Properties of a ListCollectionIdsResponse.\n           * @memberof google.firestore.v1\n           * @interface IListCollectionIdsResponse\n           * @property {Array.<string>|null} [collectionIds] ListCollectionIdsResponse collectionIds\n           * @property {string|null} [nextPageToken] ListCollectionIdsResponse nextPageToken\n           */\n\n          /**\n           * Constructs a new ListCollectionIdsResponse.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a ListCollectionIdsResponse.\n           * @implements IListCollectionIdsResponse\n           * @constructor\n           * @param {google.firestore.v1.IListCollectionIdsResponse=} [properties] Properties to set\n           */\n          function ListCollectionIdsResponse(properties) {\n            this.collectionIds = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * ListCollectionIdsResponse collectionIds.\n           * @member {Array.<string>} collectionIds\n           * @memberof google.firestore.v1.ListCollectionIdsResponse\n           * @instance\n           */\n\n\n          ListCollectionIdsResponse.prototype.collectionIds = $util.emptyArray;\n          /**\n           * ListCollectionIdsResponse nextPageToken.\n           * @member {string} nextPageToken\n           * @memberof google.firestore.v1.ListCollectionIdsResponse\n           * @instance\n           */\n\n          ListCollectionIdsResponse.prototype.nextPageToken = \"\";\n          /**\n           * Creates a ListCollectionIdsResponse message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.ListCollectionIdsResponse\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.ListCollectionIdsResponse} ListCollectionIdsResponse\n           */\n\n          ListCollectionIdsResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.ListCollectionIdsResponse) return object;\n            var message = new $root.google.firestore.v1.ListCollectionIdsResponse();\n\n            if (object.collectionIds) {\n              if (!Array.isArray(object.collectionIds)) throw TypeError(\".google.firestore.v1.ListCollectionIdsResponse.collectionIds: array expected\");\n              message.collectionIds = [];\n\n              for (var i = 0; i < object.collectionIds.length; ++i) {\n                message.collectionIds[i] = String(object.collectionIds[i]);\n              }\n            }\n\n            if (object.nextPageToken != null) message.nextPageToken = String(object.nextPageToken);\n            return message;\n          };\n          /**\n           * Creates a plain object from a ListCollectionIdsResponse message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.ListCollectionIdsResponse\n           * @static\n           * @param {google.firestore.v1.ListCollectionIdsResponse} message ListCollectionIdsResponse\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          ListCollectionIdsResponse.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.collectionIds = [];\n            if (options.defaults) object.nextPageToken = \"\";\n\n            if (message.collectionIds && message.collectionIds.length) {\n              object.collectionIds = [];\n\n              for (var j = 0; j < message.collectionIds.length; ++j) {\n                object.collectionIds[j] = message.collectionIds[j];\n              }\n            }\n\n            if (message.nextPageToken != null && message.hasOwnProperty(\"nextPageToken\")) object.nextPageToken = message.nextPageToken;\n            return object;\n          };\n          /**\n           * Converts this ListCollectionIdsResponse to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.ListCollectionIdsResponse\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          ListCollectionIdsResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return ListCollectionIdsResponse;\n        }();\n\n        v1.BatchWriteRequest = function () {\n          /**\n           * Properties of a BatchWriteRequest.\n           * @memberof google.firestore.v1\n           * @interface IBatchWriteRequest\n           * @property {string|null} [database] BatchWriteRequest database\n           * @property {Array.<google.firestore.v1.IWrite>|null} [writes] BatchWriteRequest writes\n           * @property {Object.<string,string>|null} [labels] BatchWriteRequest labels\n           */\n\n          /**\n           * Constructs a new BatchWriteRequest.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a BatchWriteRequest.\n           * @implements IBatchWriteRequest\n           * @constructor\n           * @param {google.firestore.v1.IBatchWriteRequest=} [properties] Properties to set\n           */\n          function BatchWriteRequest(properties) {\n            this.writes = [];\n            this.labels = {};\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * BatchWriteRequest database.\n           * @member {string} database\n           * @memberof google.firestore.v1.BatchWriteRequest\n           * @instance\n           */\n\n\n          BatchWriteRequest.prototype.database = \"\";\n          /**\n           * BatchWriteRequest writes.\n           * @member {Array.<google.firestore.v1.IWrite>} writes\n           * @memberof google.firestore.v1.BatchWriteRequest\n           * @instance\n           */\n\n          BatchWriteRequest.prototype.writes = $util.emptyArray;\n          /**\n           * BatchWriteRequest labels.\n           * @member {Object.<string,string>} labels\n           * @memberof google.firestore.v1.BatchWriteRequest\n           * @instance\n           */\n\n          BatchWriteRequest.prototype.labels = $util.emptyObject;\n          /**\n           * Creates a BatchWriteRequest message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.BatchWriteRequest\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.BatchWriteRequest} BatchWriteRequest\n           */\n\n          BatchWriteRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.BatchWriteRequest) return object;\n            var message = new $root.google.firestore.v1.BatchWriteRequest();\n            if (object.database != null) message.database = String(object.database);\n\n            if (object.writes) {\n              if (!Array.isArray(object.writes)) throw TypeError(\".google.firestore.v1.BatchWriteRequest.writes: array expected\");\n              message.writes = [];\n\n              for (var i = 0; i < object.writes.length; ++i) {\n                if (typeof object.writes[i] !== \"object\") throw TypeError(\".google.firestore.v1.BatchWriteRequest.writes: object expected\");\n                message.writes[i] = $root.google.firestore.v1.Write.fromObject(object.writes[i]);\n              }\n            }\n\n            if (object.labels) {\n              if (typeof object.labels !== \"object\") throw TypeError(\".google.firestore.v1.BatchWriteRequest.labels: object expected\");\n              message.labels = {};\n\n              for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i) {\n                message.labels[keys[i]] = String(object.labels[keys[i]]);\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a BatchWriteRequest message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.BatchWriteRequest\n           * @static\n           * @param {google.firestore.v1.BatchWriteRequest} message BatchWriteRequest\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          BatchWriteRequest.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.writes = [];\n            if (options.objects || options.defaults) object.labels = {};\n            if (options.defaults) object.database = \"\";\n            if (message.database != null && message.hasOwnProperty(\"database\")) object.database = message.database;\n\n            if (message.writes && message.writes.length) {\n              object.writes = [];\n\n              for (var j = 0; j < message.writes.length; ++j) {\n                object.writes[j] = $root.google.firestore.v1.Write.toObject(message.writes[j], options);\n              }\n            }\n\n            var keys2;\n\n            if (message.labels && (keys2 = Object.keys(message.labels)).length) {\n              object.labels = {};\n\n              for (var j = 0; j < keys2.length; ++j) {\n                object.labels[keys2[j]] = message.labels[keys2[j]];\n              }\n            }\n\n            return object;\n          };\n          /**\n           * Converts this BatchWriteRequest to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.BatchWriteRequest\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          BatchWriteRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return BatchWriteRequest;\n        }();\n\n        v1.BatchWriteResponse = function () {\n          /**\n           * Properties of a BatchWriteResponse.\n           * @memberof google.firestore.v1\n           * @interface IBatchWriteResponse\n           * @property {Array.<google.firestore.v1.IWriteResult>|null} [writeResults] BatchWriteResponse writeResults\n           * @property {Array.<google.rpc.IStatus>|null} [status] BatchWriteResponse status\n           */\n\n          /**\n           * Constructs a new BatchWriteResponse.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a BatchWriteResponse.\n           * @implements IBatchWriteResponse\n           * @constructor\n           * @param {google.firestore.v1.IBatchWriteResponse=} [properties] Properties to set\n           */\n          function BatchWriteResponse(properties) {\n            this.writeResults = [];\n            this.status = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * BatchWriteResponse writeResults.\n           * @member {Array.<google.firestore.v1.IWriteResult>} writeResults\n           * @memberof google.firestore.v1.BatchWriteResponse\n           * @instance\n           */\n\n\n          BatchWriteResponse.prototype.writeResults = $util.emptyArray;\n          /**\n           * BatchWriteResponse status.\n           * @member {Array.<google.rpc.IStatus>} status\n           * @memberof google.firestore.v1.BatchWriteResponse\n           * @instance\n           */\n\n          BatchWriteResponse.prototype.status = $util.emptyArray;\n          /**\n           * Creates a BatchWriteResponse message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.BatchWriteResponse\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.BatchWriteResponse} BatchWriteResponse\n           */\n\n          BatchWriteResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.BatchWriteResponse) return object;\n            var message = new $root.google.firestore.v1.BatchWriteResponse();\n\n            if (object.writeResults) {\n              if (!Array.isArray(object.writeResults)) throw TypeError(\".google.firestore.v1.BatchWriteResponse.writeResults: array expected\");\n              message.writeResults = [];\n\n              for (var i = 0; i < object.writeResults.length; ++i) {\n                if (typeof object.writeResults[i] !== \"object\") throw TypeError(\".google.firestore.v1.BatchWriteResponse.writeResults: object expected\");\n                message.writeResults[i] = $root.google.firestore.v1.WriteResult.fromObject(object.writeResults[i]);\n              }\n            }\n\n            if (object.status) {\n              if (!Array.isArray(object.status)) throw TypeError(\".google.firestore.v1.BatchWriteResponse.status: array expected\");\n              message.status = [];\n\n              for (var i = 0; i < object.status.length; ++i) {\n                if (typeof object.status[i] !== \"object\") throw TypeError(\".google.firestore.v1.BatchWriteResponse.status: object expected\");\n                message.status[i] = $root.google.rpc.Status.fromObject(object.status[i]);\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a BatchWriteResponse message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.BatchWriteResponse\n           * @static\n           * @param {google.firestore.v1.BatchWriteResponse} message BatchWriteResponse\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          BatchWriteResponse.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.arrays || options.defaults) {\n              object.writeResults = [];\n              object.status = [];\n            }\n\n            if (message.writeResults && message.writeResults.length) {\n              object.writeResults = [];\n\n              for (var j = 0; j < message.writeResults.length; ++j) {\n                object.writeResults[j] = $root.google.firestore.v1.WriteResult.toObject(message.writeResults[j], options);\n              }\n            }\n\n            if (message.status && message.status.length) {\n              object.status = [];\n\n              for (var j = 0; j < message.status.length; ++j) {\n                object.status[j] = $root.google.rpc.Status.toObject(message.status[j], options);\n              }\n            }\n\n            return object;\n          };\n          /**\n           * Converts this BatchWriteResponse to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.BatchWriteResponse\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          BatchWriteResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return BatchWriteResponse;\n        }();\n\n        v1.StructuredQuery = function () {\n          /**\n           * Properties of a StructuredQuery.\n           * @memberof google.firestore.v1\n           * @interface IStructuredQuery\n           * @property {google.firestore.v1.StructuredQuery.IProjection|null} [select] StructuredQuery select\n           * @property {Array.<google.firestore.v1.StructuredQuery.ICollectionSelector>|null} [from] StructuredQuery from\n           * @property {google.firestore.v1.StructuredQuery.IFilter|null} [where] StructuredQuery where\n           * @property {Array.<google.firestore.v1.StructuredQuery.IOrder>|null} [orderBy] StructuredQuery orderBy\n           * @property {google.firestore.v1.ICursor|null} [startAt] StructuredQuery startAt\n           * @property {google.firestore.v1.ICursor|null} [endAt] StructuredQuery endAt\n           * @property {number|null} [offset] StructuredQuery offset\n           * @property {google.protobuf.IInt32Value|null} [limit] StructuredQuery limit\n           */\n\n          /**\n           * Constructs a new StructuredQuery.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a StructuredQuery.\n           * @implements IStructuredQuery\n           * @constructor\n           * @param {google.firestore.v1.IStructuredQuery=} [properties] Properties to set\n           */\n          function StructuredQuery(properties) {\n            this.from = [];\n            this.orderBy = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * StructuredQuery select.\n           * @member {google.firestore.v1.StructuredQuery.IProjection|null|undefined} select\n           * @memberof google.firestore.v1.StructuredQuery\n           * @instance\n           */\n\n\n          StructuredQuery.prototype.select = null;\n          /**\n           * StructuredQuery from.\n           * @member {Array.<google.firestore.v1.StructuredQuery.ICollectionSelector>} from\n           * @memberof google.firestore.v1.StructuredQuery\n           * @instance\n           */\n\n          StructuredQuery.prototype.from = $util.emptyArray;\n          /**\n           * StructuredQuery where.\n           * @member {google.firestore.v1.StructuredQuery.IFilter|null|undefined} where\n           * @memberof google.firestore.v1.StructuredQuery\n           * @instance\n           */\n\n          StructuredQuery.prototype.where = null;\n          /**\n           * StructuredQuery orderBy.\n           * @member {Array.<google.firestore.v1.StructuredQuery.IOrder>} orderBy\n           * @memberof google.firestore.v1.StructuredQuery\n           * @instance\n           */\n\n          StructuredQuery.prototype.orderBy = $util.emptyArray;\n          /**\n           * StructuredQuery startAt.\n           * @member {google.firestore.v1.ICursor|null|undefined} startAt\n           * @memberof google.firestore.v1.StructuredQuery\n           * @instance\n           */\n\n          StructuredQuery.prototype.startAt = null;\n          /**\n           * StructuredQuery endAt.\n           * @member {google.firestore.v1.ICursor|null|undefined} endAt\n           * @memberof google.firestore.v1.StructuredQuery\n           * @instance\n           */\n\n          StructuredQuery.prototype.endAt = null;\n          /**\n           * StructuredQuery offset.\n           * @member {number} offset\n           * @memberof google.firestore.v1.StructuredQuery\n           * @instance\n           */\n\n          StructuredQuery.prototype.offset = 0;\n          /**\n           * StructuredQuery limit.\n           * @member {google.protobuf.IInt32Value|null|undefined} limit\n           * @memberof google.firestore.v1.StructuredQuery\n           * @instance\n           */\n\n          StructuredQuery.prototype.limit = null;\n          /**\n           * Creates a StructuredQuery message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.StructuredQuery\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.StructuredQuery} StructuredQuery\n           */\n\n          StructuredQuery.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.StructuredQuery) return object;\n            var message = new $root.google.firestore.v1.StructuredQuery();\n\n            if (object.select != null) {\n              if (typeof object.select !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.select: object expected\");\n              message.select = $root.google.firestore.v1.StructuredQuery.Projection.fromObject(object.select);\n            }\n\n            if (object.from) {\n              if (!Array.isArray(object.from)) throw TypeError(\".google.firestore.v1.StructuredQuery.from: array expected\");\n              message.from = [];\n\n              for (var i = 0; i < object.from.length; ++i) {\n                if (typeof object.from[i] !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.from: object expected\");\n                message.from[i] = $root.google.firestore.v1.StructuredQuery.CollectionSelector.fromObject(object.from[i]);\n              }\n            }\n\n            if (object.where != null) {\n              if (typeof object.where !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.where: object expected\");\n              message.where = $root.google.firestore.v1.StructuredQuery.Filter.fromObject(object.where);\n            }\n\n            if (object.orderBy) {\n              if (!Array.isArray(object.orderBy)) throw TypeError(\".google.firestore.v1.StructuredQuery.orderBy: array expected\");\n              message.orderBy = [];\n\n              for (var i = 0; i < object.orderBy.length; ++i) {\n                if (typeof object.orderBy[i] !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.orderBy: object expected\");\n                message.orderBy[i] = $root.google.firestore.v1.StructuredQuery.Order.fromObject(object.orderBy[i]);\n              }\n            }\n\n            if (object.startAt != null) {\n              if (typeof object.startAt !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.startAt: object expected\");\n              message.startAt = $root.google.firestore.v1.Cursor.fromObject(object.startAt);\n            }\n\n            if (object.endAt != null) {\n              if (typeof object.endAt !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.endAt: object expected\");\n              message.endAt = $root.google.firestore.v1.Cursor.fromObject(object.endAt);\n            }\n\n            if (object.offset != null) message.offset = object.offset | 0;\n\n            if (object.limit != null) {\n              if (typeof object.limit !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.limit: object expected\");\n              message.limit = $root.google.protobuf.Int32Value.fromObject(object.limit);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a StructuredQuery message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.StructuredQuery\n           * @static\n           * @param {google.firestore.v1.StructuredQuery} message StructuredQuery\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          StructuredQuery.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.arrays || options.defaults) {\n              object.from = [];\n              object.orderBy = [];\n            }\n\n            if (options.defaults) {\n              object.select = null;\n              object.where = null;\n              object.limit = null;\n              object.offset = 0;\n              object.startAt = null;\n              object.endAt = null;\n            }\n\n            if (message.select != null && message.hasOwnProperty(\"select\")) object.select = $root.google.firestore.v1.StructuredQuery.Projection.toObject(message.select, options);\n\n            if (message.from && message.from.length) {\n              object.from = [];\n\n              for (var j = 0; j < message.from.length; ++j) {\n                object.from[j] = $root.google.firestore.v1.StructuredQuery.CollectionSelector.toObject(message.from[j], options);\n              }\n            }\n\n            if (message.where != null && message.hasOwnProperty(\"where\")) object.where = $root.google.firestore.v1.StructuredQuery.Filter.toObject(message.where, options);\n\n            if (message.orderBy && message.orderBy.length) {\n              object.orderBy = [];\n\n              for (var j = 0; j < message.orderBy.length; ++j) {\n                object.orderBy[j] = $root.google.firestore.v1.StructuredQuery.Order.toObject(message.orderBy[j], options);\n              }\n            }\n\n            if (message.limit != null && message.hasOwnProperty(\"limit\")) object.limit = $root.google.protobuf.Int32Value.toObject(message.limit, options);\n            if (message.offset != null && message.hasOwnProperty(\"offset\")) object.offset = message.offset;\n            if (message.startAt != null && message.hasOwnProperty(\"startAt\")) object.startAt = $root.google.firestore.v1.Cursor.toObject(message.startAt, options);\n            if (message.endAt != null && message.hasOwnProperty(\"endAt\")) object.endAt = $root.google.firestore.v1.Cursor.toObject(message.endAt, options);\n            return object;\n          };\n          /**\n           * Converts this StructuredQuery to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.StructuredQuery\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          StructuredQuery.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          StructuredQuery.CollectionSelector = function () {\n            /**\n             * Properties of a CollectionSelector.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @interface ICollectionSelector\n             * @property {string|null} [collectionId] CollectionSelector collectionId\n             * @property {boolean|null} [allDescendants] CollectionSelector allDescendants\n             */\n\n            /**\n             * Constructs a new CollectionSelector.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @classdesc Represents a CollectionSelector.\n             * @implements ICollectionSelector\n             * @constructor\n             * @param {google.firestore.v1.StructuredQuery.ICollectionSelector=} [properties] Properties to set\n             */\n            function CollectionSelector(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n            }\n            /**\n             * CollectionSelector collectionId.\n             * @member {string} collectionId\n             * @memberof google.firestore.v1.StructuredQuery.CollectionSelector\n             * @instance\n             */\n\n\n            CollectionSelector.prototype.collectionId = \"\";\n            /**\n             * CollectionSelector allDescendants.\n             * @member {boolean} allDescendants\n             * @memberof google.firestore.v1.StructuredQuery.CollectionSelector\n             * @instance\n             */\n\n            CollectionSelector.prototype.allDescendants = false;\n            /**\n             * Creates a CollectionSelector message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.firestore.v1.StructuredQuery.CollectionSelector\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.firestore.v1.StructuredQuery.CollectionSelector} CollectionSelector\n             */\n\n            CollectionSelector.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.firestore.v1.StructuredQuery.CollectionSelector) return object;\n              var message = new $root.google.firestore.v1.StructuredQuery.CollectionSelector();\n              if (object.collectionId != null) message.collectionId = String(object.collectionId);\n              if (object.allDescendants != null) message.allDescendants = Boolean(object.allDescendants);\n              return message;\n            };\n            /**\n             * Creates a plain object from a CollectionSelector message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.firestore.v1.StructuredQuery.CollectionSelector\n             * @static\n             * @param {google.firestore.v1.StructuredQuery.CollectionSelector} message CollectionSelector\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            CollectionSelector.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.collectionId = \"\";\n                object.allDescendants = false;\n              }\n\n              if (message.collectionId != null && message.hasOwnProperty(\"collectionId\")) object.collectionId = message.collectionId;\n              if (message.allDescendants != null && message.hasOwnProperty(\"allDescendants\")) object.allDescendants = message.allDescendants;\n              return object;\n            };\n            /**\n             * Converts this CollectionSelector to JSON.\n             * @function toJSON\n             * @memberof google.firestore.v1.StructuredQuery.CollectionSelector\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            CollectionSelector.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CollectionSelector;\n          }();\n\n          StructuredQuery.Filter = function () {\n            /**\n             * Properties of a Filter.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @interface IFilter\n             * @property {google.firestore.v1.StructuredQuery.ICompositeFilter|null} [compositeFilter] Filter compositeFilter\n             * @property {google.firestore.v1.StructuredQuery.IFieldFilter|null} [fieldFilter] Filter fieldFilter\n             * @property {google.firestore.v1.StructuredQuery.IUnaryFilter|null} [unaryFilter] Filter unaryFilter\n             */\n\n            /**\n             * Constructs a new Filter.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @classdesc Represents a Filter.\n             * @implements IFilter\n             * @constructor\n             * @param {google.firestore.v1.StructuredQuery.IFilter=} [properties] Properties to set\n             */\n            function Filter(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n            }\n            /**\n             * Filter compositeFilter.\n             * @member {google.firestore.v1.StructuredQuery.ICompositeFilter|null|undefined} compositeFilter\n             * @memberof google.firestore.v1.StructuredQuery.Filter\n             * @instance\n             */\n\n\n            Filter.prototype.compositeFilter = null;\n            /**\n             * Filter fieldFilter.\n             * @member {google.firestore.v1.StructuredQuery.IFieldFilter|null|undefined} fieldFilter\n             * @memberof google.firestore.v1.StructuredQuery.Filter\n             * @instance\n             */\n\n            Filter.prototype.fieldFilter = null;\n            /**\n             * Filter unaryFilter.\n             * @member {google.firestore.v1.StructuredQuery.IUnaryFilter|null|undefined} unaryFilter\n             * @memberof google.firestore.v1.StructuredQuery.Filter\n             * @instance\n             */\n\n            Filter.prototype.unaryFilter = null; // OneOf field names bound to virtual getters and setters\n\n            var $oneOfFields;\n            /**\n             * Filter filterType.\n             * @member {\"compositeFilter\"|\"fieldFilter\"|\"unaryFilter\"|undefined} filterType\n             * @memberof google.firestore.v1.StructuredQuery.Filter\n             * @instance\n             */\n\n            Object.defineProperty(Filter.prototype, \"filterType\", {\n              get: $util.oneOfGetter($oneOfFields = [\"compositeFilter\", \"fieldFilter\", \"unaryFilter\"]),\n              set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Creates a Filter message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.firestore.v1.StructuredQuery.Filter\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.firestore.v1.StructuredQuery.Filter} Filter\n             */\n\n            Filter.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.firestore.v1.StructuredQuery.Filter) return object;\n              var message = new $root.google.firestore.v1.StructuredQuery.Filter();\n\n              if (object.compositeFilter != null) {\n                if (typeof object.compositeFilter !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.Filter.compositeFilter: object expected\");\n                message.compositeFilter = $root.google.firestore.v1.StructuredQuery.CompositeFilter.fromObject(object.compositeFilter);\n              }\n\n              if (object.fieldFilter != null) {\n                if (typeof object.fieldFilter !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.Filter.fieldFilter: object expected\");\n                message.fieldFilter = $root.google.firestore.v1.StructuredQuery.FieldFilter.fromObject(object.fieldFilter);\n              }\n\n              if (object.unaryFilter != null) {\n                if (typeof object.unaryFilter !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.Filter.unaryFilter: object expected\");\n                message.unaryFilter = $root.google.firestore.v1.StructuredQuery.UnaryFilter.fromObject(object.unaryFilter);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a Filter message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.firestore.v1.StructuredQuery.Filter\n             * @static\n             * @param {google.firestore.v1.StructuredQuery.Filter} message Filter\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            Filter.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (message.compositeFilter != null && message.hasOwnProperty(\"compositeFilter\")) {\n                object.compositeFilter = $root.google.firestore.v1.StructuredQuery.CompositeFilter.toObject(message.compositeFilter, options);\n                if (options.oneofs) object.filterType = \"compositeFilter\";\n              }\n\n              if (message.fieldFilter != null && message.hasOwnProperty(\"fieldFilter\")) {\n                object.fieldFilter = $root.google.firestore.v1.StructuredQuery.FieldFilter.toObject(message.fieldFilter, options);\n                if (options.oneofs) object.filterType = \"fieldFilter\";\n              }\n\n              if (message.unaryFilter != null && message.hasOwnProperty(\"unaryFilter\")) {\n                object.unaryFilter = $root.google.firestore.v1.StructuredQuery.UnaryFilter.toObject(message.unaryFilter, options);\n                if (options.oneofs) object.filterType = \"unaryFilter\";\n              }\n\n              return object;\n            };\n            /**\n             * Converts this Filter to JSON.\n             * @function toJSON\n             * @memberof google.firestore.v1.StructuredQuery.Filter\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            Filter.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Filter;\n          }();\n\n          StructuredQuery.CompositeFilter = function () {\n            /**\n             * Properties of a CompositeFilter.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @interface ICompositeFilter\n             * @property {google.firestore.v1.StructuredQuery.CompositeFilter.Operator|null} [op] CompositeFilter op\n             * @property {Array.<google.firestore.v1.StructuredQuery.IFilter>|null} [filters] CompositeFilter filters\n             */\n\n            /**\n             * Constructs a new CompositeFilter.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @classdesc Represents a CompositeFilter.\n             * @implements ICompositeFilter\n             * @constructor\n             * @param {google.firestore.v1.StructuredQuery.ICompositeFilter=} [properties] Properties to set\n             */\n            function CompositeFilter(properties) {\n              this.filters = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n            }\n            /**\n             * CompositeFilter op.\n             * @member {google.firestore.v1.StructuredQuery.CompositeFilter.Operator} op\n             * @memberof google.firestore.v1.StructuredQuery.CompositeFilter\n             * @instance\n             */\n\n\n            CompositeFilter.prototype.op = 0;\n            /**\n             * CompositeFilter filters.\n             * @member {Array.<google.firestore.v1.StructuredQuery.IFilter>} filters\n             * @memberof google.firestore.v1.StructuredQuery.CompositeFilter\n             * @instance\n             */\n\n            CompositeFilter.prototype.filters = $util.emptyArray;\n            /**\n             * Creates a CompositeFilter message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.firestore.v1.StructuredQuery.CompositeFilter\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.firestore.v1.StructuredQuery.CompositeFilter} CompositeFilter\n             */\n\n            CompositeFilter.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.firestore.v1.StructuredQuery.CompositeFilter) return object;\n              var message = new $root.google.firestore.v1.StructuredQuery.CompositeFilter();\n\n              switch (object.op) {\n                case \"OPERATOR_UNSPECIFIED\":\n                case 0:\n                  message.op = 0;\n                  break;\n\n                case \"AND\":\n                case 1:\n                  message.op = 1;\n                  break;\n              }\n\n              if (object.filters) {\n                if (!Array.isArray(object.filters)) throw TypeError(\".google.firestore.v1.StructuredQuery.CompositeFilter.filters: array expected\");\n                message.filters = [];\n\n                for (var i = 0; i < object.filters.length; ++i) {\n                  if (typeof object.filters[i] !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.CompositeFilter.filters: object expected\");\n                  message.filters[i] = $root.google.firestore.v1.StructuredQuery.Filter.fromObject(object.filters[i]);\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a CompositeFilter message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.firestore.v1.StructuredQuery.CompositeFilter\n             * @static\n             * @param {google.firestore.v1.StructuredQuery.CompositeFilter} message CompositeFilter\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            CompositeFilter.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.arrays || options.defaults) object.filters = [];\n              if (options.defaults) object.op = options.enums === String ? \"OPERATOR_UNSPECIFIED\" : 0;\n              if (message.op != null && message.hasOwnProperty(\"op\")) object.op = options.enums === String ? $root.google.firestore.v1.StructuredQuery.CompositeFilter.Operator[message.op] : message.op;\n\n              if (message.filters && message.filters.length) {\n                object.filters = [];\n\n                for (var j = 0; j < message.filters.length; ++j) {\n                  object.filters[j] = $root.google.firestore.v1.StructuredQuery.Filter.toObject(message.filters[j], options);\n                }\n              }\n\n              return object;\n            };\n            /**\n             * Converts this CompositeFilter to JSON.\n             * @function toJSON\n             * @memberof google.firestore.v1.StructuredQuery.CompositeFilter\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            CompositeFilter.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * Operator enum.\n             * @name google.firestore.v1.StructuredQuery.CompositeFilter.Operator\n             * @enum {string}\n             * @property {string} OPERATOR_UNSPECIFIED=OPERATOR_UNSPECIFIED OPERATOR_UNSPECIFIED value\n             * @property {string} AND=AND AND value\n             */\n\n\n            CompositeFilter.Operator = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"OPERATOR_UNSPECIFIED\"] = \"OPERATOR_UNSPECIFIED\";\n              values[valuesById[1] = \"AND\"] = \"AND\";\n              return values;\n            }();\n\n            return CompositeFilter;\n          }();\n\n          StructuredQuery.FieldFilter = function () {\n            /**\n             * Properties of a FieldFilter.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @interface IFieldFilter\n             * @property {google.firestore.v1.StructuredQuery.IFieldReference|null} [field] FieldFilter field\n             * @property {google.firestore.v1.StructuredQuery.FieldFilter.Operator|null} [op] FieldFilter op\n             * @property {google.firestore.v1.IValue|null} [value] FieldFilter value\n             */\n\n            /**\n             * Constructs a new FieldFilter.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @classdesc Represents a FieldFilter.\n             * @implements IFieldFilter\n             * @constructor\n             * @param {google.firestore.v1.StructuredQuery.IFieldFilter=} [properties] Properties to set\n             */\n            function FieldFilter(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n            }\n            /**\n             * FieldFilter field.\n             * @member {google.firestore.v1.StructuredQuery.IFieldReference|null|undefined} field\n             * @memberof google.firestore.v1.StructuredQuery.FieldFilter\n             * @instance\n             */\n\n\n            FieldFilter.prototype.field = null;\n            /**\n             * FieldFilter op.\n             * @member {google.firestore.v1.StructuredQuery.FieldFilter.Operator} op\n             * @memberof google.firestore.v1.StructuredQuery.FieldFilter\n             * @instance\n             */\n\n            FieldFilter.prototype.op = 0;\n            /**\n             * FieldFilter value.\n             * @member {google.firestore.v1.IValue|null|undefined} value\n             * @memberof google.firestore.v1.StructuredQuery.FieldFilter\n             * @instance\n             */\n\n            FieldFilter.prototype.value = null;\n            /**\n             * Creates a FieldFilter message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.firestore.v1.StructuredQuery.FieldFilter\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.firestore.v1.StructuredQuery.FieldFilter} FieldFilter\n             */\n\n            FieldFilter.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.firestore.v1.StructuredQuery.FieldFilter) return object;\n              var message = new $root.google.firestore.v1.StructuredQuery.FieldFilter();\n\n              if (object.field != null) {\n                if (typeof object.field !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.FieldFilter.field: object expected\");\n                message.field = $root.google.firestore.v1.StructuredQuery.FieldReference.fromObject(object.field);\n              }\n\n              switch (object.op) {\n                case \"OPERATOR_UNSPECIFIED\":\n                case 0:\n                  message.op = 0;\n                  break;\n\n                case \"LESS_THAN\":\n                case 1:\n                  message.op = 1;\n                  break;\n\n                case \"LESS_THAN_OR_EQUAL\":\n                case 2:\n                  message.op = 2;\n                  break;\n\n                case \"GREATER_THAN\":\n                case 3:\n                  message.op = 3;\n                  break;\n\n                case \"GREATER_THAN_OR_EQUAL\":\n                case 4:\n                  message.op = 4;\n                  break;\n\n                case \"EQUAL\":\n                case 5:\n                  message.op = 5;\n                  break;\n\n                case \"NOT_EQUAL\":\n                case 6:\n                  message.op = 6;\n                  break;\n\n                case \"ARRAY_CONTAINS\":\n                case 7:\n                  message.op = 7;\n                  break;\n\n                case \"IN\":\n                case 8:\n                  message.op = 8;\n                  break;\n\n                case \"ARRAY_CONTAINS_ANY\":\n                case 9:\n                  message.op = 9;\n                  break;\n\n                case \"NOT_IN\":\n                case 10:\n                  message.op = 10;\n                  break;\n              }\n\n              if (object.value != null) {\n                if (typeof object.value !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.FieldFilter.value: object expected\");\n                message.value = $root.google.firestore.v1.Value.fromObject(object.value);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a FieldFilter message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.firestore.v1.StructuredQuery.FieldFilter\n             * @static\n             * @param {google.firestore.v1.StructuredQuery.FieldFilter} message FieldFilter\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            FieldFilter.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.field = null;\n                object.op = options.enums === String ? \"OPERATOR_UNSPECIFIED\" : 0;\n                object.value = null;\n              }\n\n              if (message.field != null && message.hasOwnProperty(\"field\")) object.field = $root.google.firestore.v1.StructuredQuery.FieldReference.toObject(message.field, options);\n              if (message.op != null && message.hasOwnProperty(\"op\")) object.op = options.enums === String ? $root.google.firestore.v1.StructuredQuery.FieldFilter.Operator[message.op] : message.op;\n              if (message.value != null && message.hasOwnProperty(\"value\")) object.value = $root.google.firestore.v1.Value.toObject(message.value, options);\n              return object;\n            };\n            /**\n             * Converts this FieldFilter to JSON.\n             * @function toJSON\n             * @memberof google.firestore.v1.StructuredQuery.FieldFilter\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            FieldFilter.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * Operator enum.\n             * @name google.firestore.v1.StructuredQuery.FieldFilter.Operator\n             * @enum {string}\n             * @property {string} OPERATOR_UNSPECIFIED=OPERATOR_UNSPECIFIED OPERATOR_UNSPECIFIED value\n             * @property {string} LESS_THAN=LESS_THAN LESS_THAN value\n             * @property {string} LESS_THAN_OR_EQUAL=LESS_THAN_OR_EQUAL LESS_THAN_OR_EQUAL value\n             * @property {string} GREATER_THAN=GREATER_THAN GREATER_THAN value\n             * @property {string} GREATER_THAN_OR_EQUAL=GREATER_THAN_OR_EQUAL GREATER_THAN_OR_EQUAL value\n             * @property {string} EQUAL=EQUAL EQUAL value\n             * @property {string} NOT_EQUAL=NOT_EQUAL NOT_EQUAL value\n             * @property {string} ARRAY_CONTAINS=ARRAY_CONTAINS ARRAY_CONTAINS value\n             * @property {string} IN=IN IN value\n             * @property {string} ARRAY_CONTAINS_ANY=ARRAY_CONTAINS_ANY ARRAY_CONTAINS_ANY value\n             * @property {string} NOT_IN=NOT_IN NOT_IN value\n             */\n\n\n            FieldFilter.Operator = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"OPERATOR_UNSPECIFIED\"] = \"OPERATOR_UNSPECIFIED\";\n              values[valuesById[1] = \"LESS_THAN\"] = \"LESS_THAN\";\n              values[valuesById[2] = \"LESS_THAN_OR_EQUAL\"] = \"LESS_THAN_OR_EQUAL\";\n              values[valuesById[3] = \"GREATER_THAN\"] = \"GREATER_THAN\";\n              values[valuesById[4] = \"GREATER_THAN_OR_EQUAL\"] = \"GREATER_THAN_OR_EQUAL\";\n              values[valuesById[5] = \"EQUAL\"] = \"EQUAL\";\n              values[valuesById[6] = \"NOT_EQUAL\"] = \"NOT_EQUAL\";\n              values[valuesById[7] = \"ARRAY_CONTAINS\"] = \"ARRAY_CONTAINS\";\n              values[valuesById[8] = \"IN\"] = \"IN\";\n              values[valuesById[9] = \"ARRAY_CONTAINS_ANY\"] = \"ARRAY_CONTAINS_ANY\";\n              values[valuesById[10] = \"NOT_IN\"] = \"NOT_IN\";\n              return values;\n            }();\n\n            return FieldFilter;\n          }();\n\n          StructuredQuery.UnaryFilter = function () {\n            /**\n             * Properties of an UnaryFilter.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @interface IUnaryFilter\n             * @property {google.firestore.v1.StructuredQuery.UnaryFilter.Operator|null} [op] UnaryFilter op\n             * @property {google.firestore.v1.StructuredQuery.IFieldReference|null} [field] UnaryFilter field\n             */\n\n            /**\n             * Constructs a new UnaryFilter.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @classdesc Represents an UnaryFilter.\n             * @implements IUnaryFilter\n             * @constructor\n             * @param {google.firestore.v1.StructuredQuery.IUnaryFilter=} [properties] Properties to set\n             */\n            function UnaryFilter(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n            }\n            /**\n             * UnaryFilter op.\n             * @member {google.firestore.v1.StructuredQuery.UnaryFilter.Operator} op\n             * @memberof google.firestore.v1.StructuredQuery.UnaryFilter\n             * @instance\n             */\n\n\n            UnaryFilter.prototype.op = 0;\n            /**\n             * UnaryFilter field.\n             * @member {google.firestore.v1.StructuredQuery.IFieldReference|null|undefined} field\n             * @memberof google.firestore.v1.StructuredQuery.UnaryFilter\n             * @instance\n             */\n\n            UnaryFilter.prototype.field = null; // OneOf field names bound to virtual getters and setters\n\n            var $oneOfFields;\n            /**\n             * UnaryFilter operandType.\n             * @member {\"field\"|undefined} operandType\n             * @memberof google.firestore.v1.StructuredQuery.UnaryFilter\n             * @instance\n             */\n\n            Object.defineProperty(UnaryFilter.prototype, \"operandType\", {\n              get: $util.oneOfGetter($oneOfFields = [\"field\"]),\n              set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Creates an UnaryFilter message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.firestore.v1.StructuredQuery.UnaryFilter\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.firestore.v1.StructuredQuery.UnaryFilter} UnaryFilter\n             */\n\n            UnaryFilter.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.firestore.v1.StructuredQuery.UnaryFilter) return object;\n              var message = new $root.google.firestore.v1.StructuredQuery.UnaryFilter();\n\n              switch (object.op) {\n                case \"OPERATOR_UNSPECIFIED\":\n                case 0:\n                  message.op = 0;\n                  break;\n\n                case \"IS_NAN\":\n                case 2:\n                  message.op = 2;\n                  break;\n\n                case \"IS_NULL\":\n                case 3:\n                  message.op = 3;\n                  break;\n\n                case \"IS_NOT_NAN\":\n                case 4:\n                  message.op = 4;\n                  break;\n\n                case \"IS_NOT_NULL\":\n                case 5:\n                  message.op = 5;\n                  break;\n              }\n\n              if (object.field != null) {\n                if (typeof object.field !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.UnaryFilter.field: object expected\");\n                message.field = $root.google.firestore.v1.StructuredQuery.FieldReference.fromObject(object.field);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an UnaryFilter message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.firestore.v1.StructuredQuery.UnaryFilter\n             * @static\n             * @param {google.firestore.v1.StructuredQuery.UnaryFilter} message UnaryFilter\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            UnaryFilter.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.defaults) object.op = options.enums === String ? \"OPERATOR_UNSPECIFIED\" : 0;\n              if (message.op != null && message.hasOwnProperty(\"op\")) object.op = options.enums === String ? $root.google.firestore.v1.StructuredQuery.UnaryFilter.Operator[message.op] : message.op;\n\n              if (message.field != null && message.hasOwnProperty(\"field\")) {\n                object.field = $root.google.firestore.v1.StructuredQuery.FieldReference.toObject(message.field, options);\n                if (options.oneofs) object.operandType = \"field\";\n              }\n\n              return object;\n            };\n            /**\n             * Converts this UnaryFilter to JSON.\n             * @function toJSON\n             * @memberof google.firestore.v1.StructuredQuery.UnaryFilter\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            UnaryFilter.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * Operator enum.\n             * @name google.firestore.v1.StructuredQuery.UnaryFilter.Operator\n             * @enum {string}\n             * @property {string} OPERATOR_UNSPECIFIED=OPERATOR_UNSPECIFIED OPERATOR_UNSPECIFIED value\n             * @property {string} IS_NAN=IS_NAN IS_NAN value\n             * @property {string} IS_NULL=IS_NULL IS_NULL value\n             * @property {string} IS_NOT_NAN=IS_NOT_NAN IS_NOT_NAN value\n             * @property {string} IS_NOT_NULL=IS_NOT_NULL IS_NOT_NULL value\n             */\n\n\n            UnaryFilter.Operator = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"OPERATOR_UNSPECIFIED\"] = \"OPERATOR_UNSPECIFIED\";\n              values[valuesById[2] = \"IS_NAN\"] = \"IS_NAN\";\n              values[valuesById[3] = \"IS_NULL\"] = \"IS_NULL\";\n              values[valuesById[4] = \"IS_NOT_NAN\"] = \"IS_NOT_NAN\";\n              values[valuesById[5] = \"IS_NOT_NULL\"] = \"IS_NOT_NULL\";\n              return values;\n            }();\n\n            return UnaryFilter;\n          }();\n\n          StructuredQuery.Order = function () {\n            /**\n             * Properties of an Order.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @interface IOrder\n             * @property {google.firestore.v1.StructuredQuery.IFieldReference|null} [field] Order field\n             * @property {google.firestore.v1.StructuredQuery.Direction|null} [direction] Order direction\n             */\n\n            /**\n             * Constructs a new Order.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @classdesc Represents an Order.\n             * @implements IOrder\n             * @constructor\n             * @param {google.firestore.v1.StructuredQuery.IOrder=} [properties] Properties to set\n             */\n            function Order(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n            }\n            /**\n             * Order field.\n             * @member {google.firestore.v1.StructuredQuery.IFieldReference|null|undefined} field\n             * @memberof google.firestore.v1.StructuredQuery.Order\n             * @instance\n             */\n\n\n            Order.prototype.field = null;\n            /**\n             * Order direction.\n             * @member {google.firestore.v1.StructuredQuery.Direction} direction\n             * @memberof google.firestore.v1.StructuredQuery.Order\n             * @instance\n             */\n\n            Order.prototype.direction = 0;\n            /**\n             * Creates an Order message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.firestore.v1.StructuredQuery.Order\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.firestore.v1.StructuredQuery.Order} Order\n             */\n\n            Order.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.firestore.v1.StructuredQuery.Order) return object;\n              var message = new $root.google.firestore.v1.StructuredQuery.Order();\n\n              if (object.field != null) {\n                if (typeof object.field !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.Order.field: object expected\");\n                message.field = $root.google.firestore.v1.StructuredQuery.FieldReference.fromObject(object.field);\n              }\n\n              switch (object.direction) {\n                case \"DIRECTION_UNSPECIFIED\":\n                case 0:\n                  message.direction = 0;\n                  break;\n\n                case \"ASCENDING\":\n                case 1:\n                  message.direction = 1;\n                  break;\n\n                case \"DESCENDING\":\n                case 2:\n                  message.direction = 2;\n                  break;\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from an Order message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.firestore.v1.StructuredQuery.Order\n             * @static\n             * @param {google.firestore.v1.StructuredQuery.Order} message Order\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            Order.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n\n              if (options.defaults) {\n                object.field = null;\n                object.direction = options.enums === String ? \"DIRECTION_UNSPECIFIED\" : 0;\n              }\n\n              if (message.field != null && message.hasOwnProperty(\"field\")) object.field = $root.google.firestore.v1.StructuredQuery.FieldReference.toObject(message.field, options);\n              if (message.direction != null && message.hasOwnProperty(\"direction\")) object.direction = options.enums === String ? $root.google.firestore.v1.StructuredQuery.Direction[message.direction] : message.direction;\n              return object;\n            };\n            /**\n             * Converts this Order to JSON.\n             * @function toJSON\n             * @memberof google.firestore.v1.StructuredQuery.Order\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            Order.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Order;\n          }();\n\n          StructuredQuery.FieldReference = function () {\n            /**\n             * Properties of a FieldReference.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @interface IFieldReference\n             * @property {string|null} [fieldPath] FieldReference fieldPath\n             */\n\n            /**\n             * Constructs a new FieldReference.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @classdesc Represents a FieldReference.\n             * @implements IFieldReference\n             * @constructor\n             * @param {google.firestore.v1.StructuredQuery.IFieldReference=} [properties] Properties to set\n             */\n            function FieldReference(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n            }\n            /**\n             * FieldReference fieldPath.\n             * @member {string} fieldPath\n             * @memberof google.firestore.v1.StructuredQuery.FieldReference\n             * @instance\n             */\n\n\n            FieldReference.prototype.fieldPath = \"\";\n            /**\n             * Creates a FieldReference message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.firestore.v1.StructuredQuery.FieldReference\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.firestore.v1.StructuredQuery.FieldReference} FieldReference\n             */\n\n            FieldReference.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.firestore.v1.StructuredQuery.FieldReference) return object;\n              var message = new $root.google.firestore.v1.StructuredQuery.FieldReference();\n              if (object.fieldPath != null) message.fieldPath = String(object.fieldPath);\n              return message;\n            };\n            /**\n             * Creates a plain object from a FieldReference message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.firestore.v1.StructuredQuery.FieldReference\n             * @static\n             * @param {google.firestore.v1.StructuredQuery.FieldReference} message FieldReference\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            FieldReference.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.defaults) object.fieldPath = \"\";\n              if (message.fieldPath != null && message.hasOwnProperty(\"fieldPath\")) object.fieldPath = message.fieldPath;\n              return object;\n            };\n            /**\n             * Converts this FieldReference to JSON.\n             * @function toJSON\n             * @memberof google.firestore.v1.StructuredQuery.FieldReference\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            FieldReference.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return FieldReference;\n          }();\n\n          StructuredQuery.Projection = function () {\n            /**\n             * Properties of a Projection.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @interface IProjection\n             * @property {Array.<google.firestore.v1.StructuredQuery.IFieldReference>|null} [fields] Projection fields\n             */\n\n            /**\n             * Constructs a new Projection.\n             * @memberof google.firestore.v1.StructuredQuery\n             * @classdesc Represents a Projection.\n             * @implements IProjection\n             * @constructor\n             * @param {google.firestore.v1.StructuredQuery.IProjection=} [properties] Properties to set\n             */\n            function Projection(properties) {\n              this.fields = [];\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n            }\n            /**\n             * Projection fields.\n             * @member {Array.<google.firestore.v1.StructuredQuery.IFieldReference>} fields\n             * @memberof google.firestore.v1.StructuredQuery.Projection\n             * @instance\n             */\n\n\n            Projection.prototype.fields = $util.emptyArray;\n            /**\n             * Creates a Projection message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.firestore.v1.StructuredQuery.Projection\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.firestore.v1.StructuredQuery.Projection} Projection\n             */\n\n            Projection.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.firestore.v1.StructuredQuery.Projection) return object;\n              var message = new $root.google.firestore.v1.StructuredQuery.Projection();\n\n              if (object.fields) {\n                if (!Array.isArray(object.fields)) throw TypeError(\".google.firestore.v1.StructuredQuery.Projection.fields: array expected\");\n                message.fields = [];\n\n                for (var i = 0; i < object.fields.length; ++i) {\n                  if (typeof object.fields[i] !== \"object\") throw TypeError(\".google.firestore.v1.StructuredQuery.Projection.fields: object expected\");\n                  message.fields[i] = $root.google.firestore.v1.StructuredQuery.FieldReference.fromObject(object.fields[i]);\n                }\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a Projection message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.firestore.v1.StructuredQuery.Projection\n             * @static\n             * @param {google.firestore.v1.StructuredQuery.Projection} message Projection\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            Projection.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.arrays || options.defaults) object.fields = [];\n\n              if (message.fields && message.fields.length) {\n                object.fields = [];\n\n                for (var j = 0; j < message.fields.length; ++j) {\n                  object.fields[j] = $root.google.firestore.v1.StructuredQuery.FieldReference.toObject(message.fields[j], options);\n                }\n              }\n\n              return object;\n            };\n            /**\n             * Converts this Projection to JSON.\n             * @function toJSON\n             * @memberof google.firestore.v1.StructuredQuery.Projection\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            Projection.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Projection;\n          }();\n          /**\n           * Direction enum.\n           * @name google.firestore.v1.StructuredQuery.Direction\n           * @enum {string}\n           * @property {string} DIRECTION_UNSPECIFIED=DIRECTION_UNSPECIFIED DIRECTION_UNSPECIFIED value\n           * @property {string} ASCENDING=ASCENDING ASCENDING value\n           * @property {string} DESCENDING=DESCENDING DESCENDING value\n           */\n\n\n          StructuredQuery.Direction = function () {\n            var valuesById = {},\n                values = Object.create(valuesById);\n            values[valuesById[0] = \"DIRECTION_UNSPECIFIED\"] = \"DIRECTION_UNSPECIFIED\";\n            values[valuesById[1] = \"ASCENDING\"] = \"ASCENDING\";\n            values[valuesById[2] = \"DESCENDING\"] = \"DESCENDING\";\n            return values;\n          }();\n\n          return StructuredQuery;\n        }();\n\n        v1.Cursor = function () {\n          /**\n           * Properties of a Cursor.\n           * @memberof google.firestore.v1\n           * @interface ICursor\n           * @property {Array.<google.firestore.v1.IValue>|null} [values] Cursor values\n           * @property {boolean|null} [before] Cursor before\n           */\n\n          /**\n           * Constructs a new Cursor.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a Cursor.\n           * @implements ICursor\n           * @constructor\n           * @param {google.firestore.v1.ICursor=} [properties] Properties to set\n           */\n          function Cursor(properties) {\n            this.values = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * Cursor values.\n           * @member {Array.<google.firestore.v1.IValue>} values\n           * @memberof google.firestore.v1.Cursor\n           * @instance\n           */\n\n\n          Cursor.prototype.values = $util.emptyArray;\n          /**\n           * Cursor before.\n           * @member {boolean} before\n           * @memberof google.firestore.v1.Cursor\n           * @instance\n           */\n\n          Cursor.prototype.before = false;\n          /**\n           * Creates a Cursor message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.Cursor\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.Cursor} Cursor\n           */\n\n          Cursor.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.Cursor) return object;\n            var message = new $root.google.firestore.v1.Cursor();\n\n            if (object.values) {\n              if (!Array.isArray(object.values)) throw TypeError(\".google.firestore.v1.Cursor.values: array expected\");\n              message.values = [];\n\n              for (var i = 0; i < object.values.length; ++i) {\n                if (typeof object.values[i] !== \"object\") throw TypeError(\".google.firestore.v1.Cursor.values: object expected\");\n                message.values[i] = $root.google.firestore.v1.Value.fromObject(object.values[i]);\n              }\n            }\n\n            if (object.before != null) message.before = Boolean(object.before);\n            return message;\n          };\n          /**\n           * Creates a plain object from a Cursor message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.Cursor\n           * @static\n           * @param {google.firestore.v1.Cursor} message Cursor\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          Cursor.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.values = [];\n            if (options.defaults) object.before = false;\n\n            if (message.values && message.values.length) {\n              object.values = [];\n\n              for (var j = 0; j < message.values.length; ++j) {\n                object.values[j] = $root.google.firestore.v1.Value.toObject(message.values[j], options);\n              }\n            }\n\n            if (message.before != null && message.hasOwnProperty(\"before\")) object.before = message.before;\n            return object;\n          };\n          /**\n           * Converts this Cursor to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.Cursor\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          Cursor.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return Cursor;\n        }();\n\n        v1.Write = function () {\n          /**\n           * Properties of a Write.\n           * @memberof google.firestore.v1\n           * @interface IWrite\n           * @property {google.firestore.v1.IDocument|null} [update] Write update\n           * @property {string|null} [\"delete\"] Write delete\n           * @property {google.firestore.v1.IDocumentTransform|null} [transform] Write transform\n           * @property {google.firestore.v1.IDocumentMask|null} [updateMask] Write updateMask\n           * @property {Array.<google.firestore.v1.DocumentTransform.IFieldTransform>|null} [updateTransforms] Write updateTransforms\n           * @property {google.firestore.v1.IPrecondition|null} [currentDocument] Write currentDocument\n           */\n\n          /**\n           * Constructs a new Write.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a Write.\n           * @implements IWrite\n           * @constructor\n           * @param {google.firestore.v1.IWrite=} [properties] Properties to set\n           */\n          function Write(properties) {\n            this.updateTransforms = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * Write update.\n           * @member {google.firestore.v1.IDocument|null|undefined} update\n           * @memberof google.firestore.v1.Write\n           * @instance\n           */\n\n\n          Write.prototype.update = null;\n          /**\n           * Write delete.\n           * @member {string|null|undefined} delete\n           * @memberof google.firestore.v1.Write\n           * @instance\n           */\n\n          Write.prototype[\"delete\"] = null;\n          /**\n           * Write transform.\n           * @member {google.firestore.v1.IDocumentTransform|null|undefined} transform\n           * @memberof google.firestore.v1.Write\n           * @instance\n           */\n\n          Write.prototype.transform = null;\n          /**\n           * Write updateMask.\n           * @member {google.firestore.v1.IDocumentMask|null|undefined} updateMask\n           * @memberof google.firestore.v1.Write\n           * @instance\n           */\n\n          Write.prototype.updateMask = null;\n          /**\n           * Write updateTransforms.\n           * @member {Array.<google.firestore.v1.DocumentTransform.IFieldTransform>} updateTransforms\n           * @memberof google.firestore.v1.Write\n           * @instance\n           */\n\n          Write.prototype.updateTransforms = $util.emptyArray;\n          /**\n           * Write currentDocument.\n           * @member {google.firestore.v1.IPrecondition|null|undefined} currentDocument\n           * @memberof google.firestore.v1.Write\n           * @instance\n           */\n\n          Write.prototype.currentDocument = null; // OneOf field names bound to virtual getters and setters\n\n          var $oneOfFields;\n          /**\n           * Write operation.\n           * @member {\"update\"|\"delete\"|\"transform\"|undefined} operation\n           * @memberof google.firestore.v1.Write\n           * @instance\n           */\n\n          Object.defineProperty(Write.prototype, \"operation\", {\n            get: $util.oneOfGetter($oneOfFields = [\"update\", \"delete\", \"transform\"]),\n            set: $util.oneOfSetter($oneOfFields)\n          });\n          /**\n           * Creates a Write message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.Write\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.Write} Write\n           */\n\n          Write.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.Write) return object;\n            var message = new $root.google.firestore.v1.Write();\n\n            if (object.update != null) {\n              if (typeof object.update !== \"object\") throw TypeError(\".google.firestore.v1.Write.update: object expected\");\n              message.update = $root.google.firestore.v1.Document.fromObject(object.update);\n            }\n\n            if (object[\"delete\"] != null) message[\"delete\"] = String(object[\"delete\"]);\n\n            if (object.transform != null) {\n              if (typeof object.transform !== \"object\") throw TypeError(\".google.firestore.v1.Write.transform: object expected\");\n              message.transform = $root.google.firestore.v1.DocumentTransform.fromObject(object.transform);\n            }\n\n            if (object.updateMask != null) {\n              if (typeof object.updateMask !== \"object\") throw TypeError(\".google.firestore.v1.Write.updateMask: object expected\");\n              message.updateMask = $root.google.firestore.v1.DocumentMask.fromObject(object.updateMask);\n            }\n\n            if (object.updateTransforms) {\n              if (!Array.isArray(object.updateTransforms)) throw TypeError(\".google.firestore.v1.Write.updateTransforms: array expected\");\n              message.updateTransforms = [];\n\n              for (var i = 0; i < object.updateTransforms.length; ++i) {\n                if (typeof object.updateTransforms[i] !== \"object\") throw TypeError(\".google.firestore.v1.Write.updateTransforms: object expected\");\n                message.updateTransforms[i] = $root.google.firestore.v1.DocumentTransform.FieldTransform.fromObject(object.updateTransforms[i]);\n              }\n            }\n\n            if (object.currentDocument != null) {\n              if (typeof object.currentDocument !== \"object\") throw TypeError(\".google.firestore.v1.Write.currentDocument: object expected\");\n              message.currentDocument = $root.google.firestore.v1.Precondition.fromObject(object.currentDocument);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a Write message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.Write\n           * @static\n           * @param {google.firestore.v1.Write} message Write\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          Write.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.updateTransforms = [];\n\n            if (options.defaults) {\n              object.updateMask = null;\n              object.currentDocument = null;\n            }\n\n            if (message.update != null && message.hasOwnProperty(\"update\")) {\n              object.update = $root.google.firestore.v1.Document.toObject(message.update, options);\n              if (options.oneofs) object.operation = \"update\";\n            }\n\n            if (message[\"delete\"] != null && message.hasOwnProperty(\"delete\")) {\n              object[\"delete\"] = message[\"delete\"];\n              if (options.oneofs) object.operation = \"delete\";\n            }\n\n            if (message.updateMask != null && message.hasOwnProperty(\"updateMask\")) object.updateMask = $root.google.firestore.v1.DocumentMask.toObject(message.updateMask, options);\n            if (message.currentDocument != null && message.hasOwnProperty(\"currentDocument\")) object.currentDocument = $root.google.firestore.v1.Precondition.toObject(message.currentDocument, options);\n\n            if (message.transform != null && message.hasOwnProperty(\"transform\")) {\n              object.transform = $root.google.firestore.v1.DocumentTransform.toObject(message.transform, options);\n              if (options.oneofs) object.operation = \"transform\";\n            }\n\n            if (message.updateTransforms && message.updateTransforms.length) {\n              object.updateTransforms = [];\n\n              for (var j = 0; j < message.updateTransforms.length; ++j) {\n                object.updateTransforms[j] = $root.google.firestore.v1.DocumentTransform.FieldTransform.toObject(message.updateTransforms[j], options);\n              }\n            }\n\n            return object;\n          };\n          /**\n           * Converts this Write to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.Write\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          Write.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return Write;\n        }();\n\n        v1.DocumentTransform = function () {\n          /**\n           * Properties of a DocumentTransform.\n           * @memberof google.firestore.v1\n           * @interface IDocumentTransform\n           * @property {string|null} [document] DocumentTransform document\n           * @property {Array.<google.firestore.v1.DocumentTransform.IFieldTransform>|null} [fieldTransforms] DocumentTransform fieldTransforms\n           */\n\n          /**\n           * Constructs a new DocumentTransform.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a DocumentTransform.\n           * @implements IDocumentTransform\n           * @constructor\n           * @param {google.firestore.v1.IDocumentTransform=} [properties] Properties to set\n           */\n          function DocumentTransform(properties) {\n            this.fieldTransforms = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * DocumentTransform document.\n           * @member {string} document\n           * @memberof google.firestore.v1.DocumentTransform\n           * @instance\n           */\n\n\n          DocumentTransform.prototype.document = \"\";\n          /**\n           * DocumentTransform fieldTransforms.\n           * @member {Array.<google.firestore.v1.DocumentTransform.IFieldTransform>} fieldTransforms\n           * @memberof google.firestore.v1.DocumentTransform\n           * @instance\n           */\n\n          DocumentTransform.prototype.fieldTransforms = $util.emptyArray;\n          /**\n           * Creates a DocumentTransform message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.DocumentTransform\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.DocumentTransform} DocumentTransform\n           */\n\n          DocumentTransform.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.DocumentTransform) return object;\n            var message = new $root.google.firestore.v1.DocumentTransform();\n            if (object.document != null) message.document = String(object.document);\n\n            if (object.fieldTransforms) {\n              if (!Array.isArray(object.fieldTransforms)) throw TypeError(\".google.firestore.v1.DocumentTransform.fieldTransforms: array expected\");\n              message.fieldTransforms = [];\n\n              for (var i = 0; i < object.fieldTransforms.length; ++i) {\n                if (typeof object.fieldTransforms[i] !== \"object\") throw TypeError(\".google.firestore.v1.DocumentTransform.fieldTransforms: object expected\");\n                message.fieldTransforms[i] = $root.google.firestore.v1.DocumentTransform.FieldTransform.fromObject(object.fieldTransforms[i]);\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a DocumentTransform message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.DocumentTransform\n           * @static\n           * @param {google.firestore.v1.DocumentTransform} message DocumentTransform\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          DocumentTransform.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.fieldTransforms = [];\n            if (options.defaults) object.document = \"\";\n            if (message.document != null && message.hasOwnProperty(\"document\")) object.document = message.document;\n\n            if (message.fieldTransforms && message.fieldTransforms.length) {\n              object.fieldTransforms = [];\n\n              for (var j = 0; j < message.fieldTransforms.length; ++j) {\n                object.fieldTransforms[j] = $root.google.firestore.v1.DocumentTransform.FieldTransform.toObject(message.fieldTransforms[j], options);\n              }\n            }\n\n            return object;\n          };\n          /**\n           * Converts this DocumentTransform to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.DocumentTransform\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          DocumentTransform.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          DocumentTransform.FieldTransform = function () {\n            /**\n             * Properties of a FieldTransform.\n             * @memberof google.firestore.v1.DocumentTransform\n             * @interface IFieldTransform\n             * @property {string|null} [fieldPath] FieldTransform fieldPath\n             * @property {google.firestore.v1.DocumentTransform.FieldTransform.ServerValue|null} [setToServerValue] FieldTransform setToServerValue\n             * @property {google.firestore.v1.IValue|null} [increment] FieldTransform increment\n             * @property {google.firestore.v1.IValue|null} [maximum] FieldTransform maximum\n             * @property {google.firestore.v1.IValue|null} [minimum] FieldTransform minimum\n             * @property {google.firestore.v1.IArrayValue|null} [appendMissingElements] FieldTransform appendMissingElements\n             * @property {google.firestore.v1.IArrayValue|null} [removeAllFromArray] FieldTransform removeAllFromArray\n             */\n\n            /**\n             * Constructs a new FieldTransform.\n             * @memberof google.firestore.v1.DocumentTransform\n             * @classdesc Represents a FieldTransform.\n             * @implements IFieldTransform\n             * @constructor\n             * @param {google.firestore.v1.DocumentTransform.IFieldTransform=} [properties] Properties to set\n             */\n            function FieldTransform(properties) {\n              if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n                if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n              }\n            }\n            /**\n             * FieldTransform fieldPath.\n             * @member {string} fieldPath\n             * @memberof google.firestore.v1.DocumentTransform.FieldTransform\n             * @instance\n             */\n\n\n            FieldTransform.prototype.fieldPath = \"\";\n            /**\n             * FieldTransform setToServerValue.\n             * @member {google.firestore.v1.DocumentTransform.FieldTransform.ServerValue|null|undefined} setToServerValue\n             * @memberof google.firestore.v1.DocumentTransform.FieldTransform\n             * @instance\n             */\n\n            FieldTransform.prototype.setToServerValue = null;\n            /**\n             * FieldTransform increment.\n             * @member {google.firestore.v1.IValue|null|undefined} increment\n             * @memberof google.firestore.v1.DocumentTransform.FieldTransform\n             * @instance\n             */\n\n            FieldTransform.prototype.increment = null;\n            /**\n             * FieldTransform maximum.\n             * @member {google.firestore.v1.IValue|null|undefined} maximum\n             * @memberof google.firestore.v1.DocumentTransform.FieldTransform\n             * @instance\n             */\n\n            FieldTransform.prototype.maximum = null;\n            /**\n             * FieldTransform minimum.\n             * @member {google.firestore.v1.IValue|null|undefined} minimum\n             * @memberof google.firestore.v1.DocumentTransform.FieldTransform\n             * @instance\n             */\n\n            FieldTransform.prototype.minimum = null;\n            /**\n             * FieldTransform appendMissingElements.\n             * @member {google.firestore.v1.IArrayValue|null|undefined} appendMissingElements\n             * @memberof google.firestore.v1.DocumentTransform.FieldTransform\n             * @instance\n             */\n\n            FieldTransform.prototype.appendMissingElements = null;\n            /**\n             * FieldTransform removeAllFromArray.\n             * @member {google.firestore.v1.IArrayValue|null|undefined} removeAllFromArray\n             * @memberof google.firestore.v1.DocumentTransform.FieldTransform\n             * @instance\n             */\n\n            FieldTransform.prototype.removeAllFromArray = null; // OneOf field names bound to virtual getters and setters\n\n            var $oneOfFields;\n            /**\n             * FieldTransform transformType.\n             * @member {\"setToServerValue\"|\"increment\"|\"maximum\"|\"minimum\"|\"appendMissingElements\"|\"removeAllFromArray\"|undefined} transformType\n             * @memberof google.firestore.v1.DocumentTransform.FieldTransform\n             * @instance\n             */\n\n            Object.defineProperty(FieldTransform.prototype, \"transformType\", {\n              get: $util.oneOfGetter($oneOfFields = [\"setToServerValue\", \"increment\", \"maximum\", \"minimum\", \"appendMissingElements\", \"removeAllFromArray\"]),\n              set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Creates a FieldTransform message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.firestore.v1.DocumentTransform.FieldTransform\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.firestore.v1.DocumentTransform.FieldTransform} FieldTransform\n             */\n\n            FieldTransform.fromObject = function fromObject(object) {\n              if (object instanceof $root.google.firestore.v1.DocumentTransform.FieldTransform) return object;\n              var message = new $root.google.firestore.v1.DocumentTransform.FieldTransform();\n              if (object.fieldPath != null) message.fieldPath = String(object.fieldPath);\n\n              switch (object.setToServerValue) {\n                case \"SERVER_VALUE_UNSPECIFIED\":\n                case 0:\n                  message.setToServerValue = 0;\n                  break;\n\n                case \"REQUEST_TIME\":\n                case 1:\n                  message.setToServerValue = 1;\n                  break;\n              }\n\n              if (object.increment != null) {\n                if (typeof object.increment !== \"object\") throw TypeError(\".google.firestore.v1.DocumentTransform.FieldTransform.increment: object expected\");\n                message.increment = $root.google.firestore.v1.Value.fromObject(object.increment);\n              }\n\n              if (object.maximum != null) {\n                if (typeof object.maximum !== \"object\") throw TypeError(\".google.firestore.v1.DocumentTransform.FieldTransform.maximum: object expected\");\n                message.maximum = $root.google.firestore.v1.Value.fromObject(object.maximum);\n              }\n\n              if (object.minimum != null) {\n                if (typeof object.minimum !== \"object\") throw TypeError(\".google.firestore.v1.DocumentTransform.FieldTransform.minimum: object expected\");\n                message.minimum = $root.google.firestore.v1.Value.fromObject(object.minimum);\n              }\n\n              if (object.appendMissingElements != null) {\n                if (typeof object.appendMissingElements !== \"object\") throw TypeError(\".google.firestore.v1.DocumentTransform.FieldTransform.appendMissingElements: object expected\");\n                message.appendMissingElements = $root.google.firestore.v1.ArrayValue.fromObject(object.appendMissingElements);\n              }\n\n              if (object.removeAllFromArray != null) {\n                if (typeof object.removeAllFromArray !== \"object\") throw TypeError(\".google.firestore.v1.DocumentTransform.FieldTransform.removeAllFromArray: object expected\");\n                message.removeAllFromArray = $root.google.firestore.v1.ArrayValue.fromObject(object.removeAllFromArray);\n              }\n\n              return message;\n            };\n            /**\n             * Creates a plain object from a FieldTransform message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.firestore.v1.DocumentTransform.FieldTransform\n             * @static\n             * @param {google.firestore.v1.DocumentTransform.FieldTransform} message FieldTransform\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n\n\n            FieldTransform.toObject = function toObject(message, options) {\n              if (!options) options = {};\n              var object = {};\n              if (options.defaults) object.fieldPath = \"\";\n              if (message.fieldPath != null && message.hasOwnProperty(\"fieldPath\")) object.fieldPath = message.fieldPath;\n\n              if (message.setToServerValue != null && message.hasOwnProperty(\"setToServerValue\")) {\n                object.setToServerValue = options.enums === String ? $root.google.firestore.v1.DocumentTransform.FieldTransform.ServerValue[message.setToServerValue] : message.setToServerValue;\n                if (options.oneofs) object.transformType = \"setToServerValue\";\n              }\n\n              if (message.increment != null && message.hasOwnProperty(\"increment\")) {\n                object.increment = $root.google.firestore.v1.Value.toObject(message.increment, options);\n                if (options.oneofs) object.transformType = \"increment\";\n              }\n\n              if (message.maximum != null && message.hasOwnProperty(\"maximum\")) {\n                object.maximum = $root.google.firestore.v1.Value.toObject(message.maximum, options);\n                if (options.oneofs) object.transformType = \"maximum\";\n              }\n\n              if (message.minimum != null && message.hasOwnProperty(\"minimum\")) {\n                object.minimum = $root.google.firestore.v1.Value.toObject(message.minimum, options);\n                if (options.oneofs) object.transformType = \"minimum\";\n              }\n\n              if (message.appendMissingElements != null && message.hasOwnProperty(\"appendMissingElements\")) {\n                object.appendMissingElements = $root.google.firestore.v1.ArrayValue.toObject(message.appendMissingElements, options);\n                if (options.oneofs) object.transformType = \"appendMissingElements\";\n              }\n\n              if (message.removeAllFromArray != null && message.hasOwnProperty(\"removeAllFromArray\")) {\n                object.removeAllFromArray = $root.google.firestore.v1.ArrayValue.toObject(message.removeAllFromArray, options);\n                if (options.oneofs) object.transformType = \"removeAllFromArray\";\n              }\n\n              return object;\n            };\n            /**\n             * Converts this FieldTransform to JSON.\n             * @function toJSON\n             * @memberof google.firestore.v1.DocumentTransform.FieldTransform\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n\n\n            FieldTransform.prototype.toJSON = function toJSON() {\n              return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            /**\n             * ServerValue enum.\n             * @name google.firestore.v1.DocumentTransform.FieldTransform.ServerValue\n             * @enum {string}\n             * @property {string} SERVER_VALUE_UNSPECIFIED=SERVER_VALUE_UNSPECIFIED SERVER_VALUE_UNSPECIFIED value\n             * @property {string} REQUEST_TIME=REQUEST_TIME REQUEST_TIME value\n             */\n\n\n            FieldTransform.ServerValue = function () {\n              var valuesById = {},\n                  values = Object.create(valuesById);\n              values[valuesById[0] = \"SERVER_VALUE_UNSPECIFIED\"] = \"SERVER_VALUE_UNSPECIFIED\";\n              values[valuesById[1] = \"REQUEST_TIME\"] = \"REQUEST_TIME\";\n              return values;\n            }();\n\n            return FieldTransform;\n          }();\n\n          return DocumentTransform;\n        }();\n\n        v1.WriteResult = function () {\n          /**\n           * Properties of a WriteResult.\n           * @memberof google.firestore.v1\n           * @interface IWriteResult\n           * @property {google.protobuf.ITimestamp|null} [updateTime] WriteResult updateTime\n           * @property {Array.<google.firestore.v1.IValue>|null} [transformResults] WriteResult transformResults\n           */\n\n          /**\n           * Constructs a new WriteResult.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a WriteResult.\n           * @implements IWriteResult\n           * @constructor\n           * @param {google.firestore.v1.IWriteResult=} [properties] Properties to set\n           */\n          function WriteResult(properties) {\n            this.transformResults = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * WriteResult updateTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} updateTime\n           * @memberof google.firestore.v1.WriteResult\n           * @instance\n           */\n\n\n          WriteResult.prototype.updateTime = null;\n          /**\n           * WriteResult transformResults.\n           * @member {Array.<google.firestore.v1.IValue>} transformResults\n           * @memberof google.firestore.v1.WriteResult\n           * @instance\n           */\n\n          WriteResult.prototype.transformResults = $util.emptyArray;\n          /**\n           * Creates a WriteResult message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.WriteResult\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.WriteResult} WriteResult\n           */\n\n          WriteResult.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.WriteResult) return object;\n            var message = new $root.google.firestore.v1.WriteResult();\n\n            if (object.updateTime != null) {\n              if (typeof object.updateTime !== \"object\") throw TypeError(\".google.firestore.v1.WriteResult.updateTime: object expected\");\n              message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);\n            }\n\n            if (object.transformResults) {\n              if (!Array.isArray(object.transformResults)) throw TypeError(\".google.firestore.v1.WriteResult.transformResults: array expected\");\n              message.transformResults = [];\n\n              for (var i = 0; i < object.transformResults.length; ++i) {\n                if (typeof object.transformResults[i] !== \"object\") throw TypeError(\".google.firestore.v1.WriteResult.transformResults: object expected\");\n                message.transformResults[i] = $root.google.firestore.v1.Value.fromObject(object.transformResults[i]);\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a WriteResult message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.WriteResult\n           * @static\n           * @param {google.firestore.v1.WriteResult} message WriteResult\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          WriteResult.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.transformResults = [];\n            if (options.defaults) object.updateTime = null;\n            if (message.updateTime != null && message.hasOwnProperty(\"updateTime\")) object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);\n\n            if (message.transformResults && message.transformResults.length) {\n              object.transformResults = [];\n\n              for (var j = 0; j < message.transformResults.length; ++j) {\n                object.transformResults[j] = $root.google.firestore.v1.Value.toObject(message.transformResults[j], options);\n              }\n            }\n\n            return object;\n          };\n          /**\n           * Converts this WriteResult to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.WriteResult\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          WriteResult.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return WriteResult;\n        }();\n\n        v1.DocumentChange = function () {\n          /**\n           * Properties of a DocumentChange.\n           * @memberof google.firestore.v1\n           * @interface IDocumentChange\n           * @property {google.firestore.v1.IDocument|null} [document] DocumentChange document\n           * @property {Array.<number>|null} [targetIds] DocumentChange targetIds\n           * @property {Array.<number>|null} [removedTargetIds] DocumentChange removedTargetIds\n           */\n\n          /**\n           * Constructs a new DocumentChange.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a DocumentChange.\n           * @implements IDocumentChange\n           * @constructor\n           * @param {google.firestore.v1.IDocumentChange=} [properties] Properties to set\n           */\n          function DocumentChange(properties) {\n            this.targetIds = [];\n            this.removedTargetIds = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * DocumentChange document.\n           * @member {google.firestore.v1.IDocument|null|undefined} document\n           * @memberof google.firestore.v1.DocumentChange\n           * @instance\n           */\n\n\n          DocumentChange.prototype.document = null;\n          /**\n           * DocumentChange targetIds.\n           * @member {Array.<number>} targetIds\n           * @memberof google.firestore.v1.DocumentChange\n           * @instance\n           */\n\n          DocumentChange.prototype.targetIds = $util.emptyArray;\n          /**\n           * DocumentChange removedTargetIds.\n           * @member {Array.<number>} removedTargetIds\n           * @memberof google.firestore.v1.DocumentChange\n           * @instance\n           */\n\n          DocumentChange.prototype.removedTargetIds = $util.emptyArray;\n          /**\n           * Creates a DocumentChange message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.DocumentChange\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.DocumentChange} DocumentChange\n           */\n\n          DocumentChange.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.DocumentChange) return object;\n            var message = new $root.google.firestore.v1.DocumentChange();\n\n            if (object.document != null) {\n              if (typeof object.document !== \"object\") throw TypeError(\".google.firestore.v1.DocumentChange.document: object expected\");\n              message.document = $root.google.firestore.v1.Document.fromObject(object.document);\n            }\n\n            if (object.targetIds) {\n              if (!Array.isArray(object.targetIds)) throw TypeError(\".google.firestore.v1.DocumentChange.targetIds: array expected\");\n              message.targetIds = [];\n\n              for (var i = 0; i < object.targetIds.length; ++i) {\n                message.targetIds[i] = object.targetIds[i] | 0;\n              }\n            }\n\n            if (object.removedTargetIds) {\n              if (!Array.isArray(object.removedTargetIds)) throw TypeError(\".google.firestore.v1.DocumentChange.removedTargetIds: array expected\");\n              message.removedTargetIds = [];\n\n              for (var i = 0; i < object.removedTargetIds.length; ++i) {\n                message.removedTargetIds[i] = object.removedTargetIds[i] | 0;\n              }\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a DocumentChange message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.DocumentChange\n           * @static\n           * @param {google.firestore.v1.DocumentChange} message DocumentChange\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          DocumentChange.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.arrays || options.defaults) {\n              object.targetIds = [];\n              object.removedTargetIds = [];\n            }\n\n            if (options.defaults) object.document = null;\n            if (message.document != null && message.hasOwnProperty(\"document\")) object.document = $root.google.firestore.v1.Document.toObject(message.document, options);\n\n            if (message.targetIds && message.targetIds.length) {\n              object.targetIds = [];\n\n              for (var j = 0; j < message.targetIds.length; ++j) {\n                object.targetIds[j] = message.targetIds[j];\n              }\n            }\n\n            if (message.removedTargetIds && message.removedTargetIds.length) {\n              object.removedTargetIds = [];\n\n              for (var j = 0; j < message.removedTargetIds.length; ++j) {\n                object.removedTargetIds[j] = message.removedTargetIds[j];\n              }\n            }\n\n            return object;\n          };\n          /**\n           * Converts this DocumentChange to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.DocumentChange\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          DocumentChange.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return DocumentChange;\n        }();\n\n        v1.DocumentDelete = function () {\n          /**\n           * Properties of a DocumentDelete.\n           * @memberof google.firestore.v1\n           * @interface IDocumentDelete\n           * @property {string|null} [document] DocumentDelete document\n           * @property {Array.<number>|null} [removedTargetIds] DocumentDelete removedTargetIds\n           * @property {google.protobuf.ITimestamp|null} [readTime] DocumentDelete readTime\n           */\n\n          /**\n           * Constructs a new DocumentDelete.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a DocumentDelete.\n           * @implements IDocumentDelete\n           * @constructor\n           * @param {google.firestore.v1.IDocumentDelete=} [properties] Properties to set\n           */\n          function DocumentDelete(properties) {\n            this.removedTargetIds = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * DocumentDelete document.\n           * @member {string} document\n           * @memberof google.firestore.v1.DocumentDelete\n           * @instance\n           */\n\n\n          DocumentDelete.prototype.document = \"\";\n          /**\n           * DocumentDelete removedTargetIds.\n           * @member {Array.<number>} removedTargetIds\n           * @memberof google.firestore.v1.DocumentDelete\n           * @instance\n           */\n\n          DocumentDelete.prototype.removedTargetIds = $util.emptyArray;\n          /**\n           * DocumentDelete readTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} readTime\n           * @memberof google.firestore.v1.DocumentDelete\n           * @instance\n           */\n\n          DocumentDelete.prototype.readTime = null;\n          /**\n           * Creates a DocumentDelete message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.DocumentDelete\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.DocumentDelete} DocumentDelete\n           */\n\n          DocumentDelete.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.DocumentDelete) return object;\n            var message = new $root.google.firestore.v1.DocumentDelete();\n            if (object.document != null) message.document = String(object.document);\n\n            if (object.removedTargetIds) {\n              if (!Array.isArray(object.removedTargetIds)) throw TypeError(\".google.firestore.v1.DocumentDelete.removedTargetIds: array expected\");\n              message.removedTargetIds = [];\n\n              for (var i = 0; i < object.removedTargetIds.length; ++i) {\n                message.removedTargetIds[i] = object.removedTargetIds[i] | 0;\n              }\n            }\n\n            if (object.readTime != null) {\n              if (typeof object.readTime !== \"object\") throw TypeError(\".google.firestore.v1.DocumentDelete.readTime: object expected\");\n              message.readTime = $root.google.protobuf.Timestamp.fromObject(object.readTime);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a DocumentDelete message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.DocumentDelete\n           * @static\n           * @param {google.firestore.v1.DocumentDelete} message DocumentDelete\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          DocumentDelete.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.removedTargetIds = [];\n\n            if (options.defaults) {\n              object.document = \"\";\n              object.readTime = null;\n            }\n\n            if (message.document != null && message.hasOwnProperty(\"document\")) object.document = message.document;\n            if (message.readTime != null && message.hasOwnProperty(\"readTime\")) object.readTime = $root.google.protobuf.Timestamp.toObject(message.readTime, options);\n\n            if (message.removedTargetIds && message.removedTargetIds.length) {\n              object.removedTargetIds = [];\n\n              for (var j = 0; j < message.removedTargetIds.length; ++j) {\n                object.removedTargetIds[j] = message.removedTargetIds[j];\n              }\n            }\n\n            return object;\n          };\n          /**\n           * Converts this DocumentDelete to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.DocumentDelete\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          DocumentDelete.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return DocumentDelete;\n        }();\n\n        v1.DocumentRemove = function () {\n          /**\n           * Properties of a DocumentRemove.\n           * @memberof google.firestore.v1\n           * @interface IDocumentRemove\n           * @property {string|null} [document] DocumentRemove document\n           * @property {Array.<number>|null} [removedTargetIds] DocumentRemove removedTargetIds\n           * @property {google.protobuf.ITimestamp|null} [readTime] DocumentRemove readTime\n           */\n\n          /**\n           * Constructs a new DocumentRemove.\n           * @memberof google.firestore.v1\n           * @classdesc Represents a DocumentRemove.\n           * @implements IDocumentRemove\n           * @constructor\n           * @param {google.firestore.v1.IDocumentRemove=} [properties] Properties to set\n           */\n          function DocumentRemove(properties) {\n            this.removedTargetIds = [];\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * DocumentRemove document.\n           * @member {string} document\n           * @memberof google.firestore.v1.DocumentRemove\n           * @instance\n           */\n\n\n          DocumentRemove.prototype.document = \"\";\n          /**\n           * DocumentRemove removedTargetIds.\n           * @member {Array.<number>} removedTargetIds\n           * @memberof google.firestore.v1.DocumentRemove\n           * @instance\n           */\n\n          DocumentRemove.prototype.removedTargetIds = $util.emptyArray;\n          /**\n           * DocumentRemove readTime.\n           * @member {google.protobuf.ITimestamp|null|undefined} readTime\n           * @memberof google.firestore.v1.DocumentRemove\n           * @instance\n           */\n\n          DocumentRemove.prototype.readTime = null;\n          /**\n           * Creates a DocumentRemove message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.DocumentRemove\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.DocumentRemove} DocumentRemove\n           */\n\n          DocumentRemove.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.DocumentRemove) return object;\n            var message = new $root.google.firestore.v1.DocumentRemove();\n            if (object.document != null) message.document = String(object.document);\n\n            if (object.removedTargetIds) {\n              if (!Array.isArray(object.removedTargetIds)) throw TypeError(\".google.firestore.v1.DocumentRemove.removedTargetIds: array expected\");\n              message.removedTargetIds = [];\n\n              for (var i = 0; i < object.removedTargetIds.length; ++i) {\n                message.removedTargetIds[i] = object.removedTargetIds[i] | 0;\n              }\n            }\n\n            if (object.readTime != null) {\n              if (typeof object.readTime !== \"object\") throw TypeError(\".google.firestore.v1.DocumentRemove.readTime: object expected\");\n              message.readTime = $root.google.protobuf.Timestamp.fromObject(object.readTime);\n            }\n\n            return message;\n          };\n          /**\n           * Creates a plain object from a DocumentRemove message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.DocumentRemove\n           * @static\n           * @param {google.firestore.v1.DocumentRemove} message DocumentRemove\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          DocumentRemove.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n            if (options.arrays || options.defaults) object.removedTargetIds = [];\n\n            if (options.defaults) {\n              object.document = \"\";\n              object.readTime = null;\n            }\n\n            if (message.document != null && message.hasOwnProperty(\"document\")) object.document = message.document;\n\n            if (message.removedTargetIds && message.removedTargetIds.length) {\n              object.removedTargetIds = [];\n\n              for (var j = 0; j < message.removedTargetIds.length; ++j) {\n                object.removedTargetIds[j] = message.removedTargetIds[j];\n              }\n            }\n\n            if (message.readTime != null && message.hasOwnProperty(\"readTime\")) object.readTime = $root.google.protobuf.Timestamp.toObject(message.readTime, options);\n            return object;\n          };\n          /**\n           * Converts this DocumentRemove to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.DocumentRemove\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          DocumentRemove.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return DocumentRemove;\n        }();\n\n        v1.ExistenceFilter = function () {\n          /**\n           * Properties of an ExistenceFilter.\n           * @memberof google.firestore.v1\n           * @interface IExistenceFilter\n           * @property {number|null} [targetId] ExistenceFilter targetId\n           * @property {number|null} [count] ExistenceFilter count\n           */\n\n          /**\n           * Constructs a new ExistenceFilter.\n           * @memberof google.firestore.v1\n           * @classdesc Represents an ExistenceFilter.\n           * @implements IExistenceFilter\n           * @constructor\n           * @param {google.firestore.v1.IExistenceFilter=} [properties] Properties to set\n           */\n          function ExistenceFilter(properties) {\n            if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n              if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n            }\n          }\n          /**\n           * ExistenceFilter targetId.\n           * @member {number} targetId\n           * @memberof google.firestore.v1.ExistenceFilter\n           * @instance\n           */\n\n\n          ExistenceFilter.prototype.targetId = 0;\n          /**\n           * ExistenceFilter count.\n           * @member {number} count\n           * @memberof google.firestore.v1.ExistenceFilter\n           * @instance\n           */\n\n          ExistenceFilter.prototype.count = 0;\n          /**\n           * Creates an ExistenceFilter message from a plain object. Also converts values to their respective internal types.\n           * @function fromObject\n           * @memberof google.firestore.v1.ExistenceFilter\n           * @static\n           * @param {Object.<string,*>} object Plain object\n           * @returns {google.firestore.v1.ExistenceFilter} ExistenceFilter\n           */\n\n          ExistenceFilter.fromObject = function fromObject(object) {\n            if (object instanceof $root.google.firestore.v1.ExistenceFilter) return object;\n            var message = new $root.google.firestore.v1.ExistenceFilter();\n            if (object.targetId != null) message.targetId = object.targetId | 0;\n            if (object.count != null) message.count = object.count | 0;\n            return message;\n          };\n          /**\n           * Creates a plain object from an ExistenceFilter message. Also converts values to other types if specified.\n           * @function toObject\n           * @memberof google.firestore.v1.ExistenceFilter\n           * @static\n           * @param {google.firestore.v1.ExistenceFilter} message ExistenceFilter\n           * @param {$protobuf.IConversionOptions} [options] Conversion options\n           * @returns {Object.<string,*>} Plain object\n           */\n\n\n          ExistenceFilter.toObject = function toObject(message, options) {\n            if (!options) options = {};\n            var object = {};\n\n            if (options.defaults) {\n              object.targetId = 0;\n              object.count = 0;\n            }\n\n            if (message.targetId != null && message.hasOwnProperty(\"targetId\")) object.targetId = message.targetId;\n            if (message.count != null && message.hasOwnProperty(\"count\")) object.count = message.count;\n            return object;\n          };\n          /**\n           * Converts this ExistenceFilter to JSON.\n           * @function toJSON\n           * @memberof google.firestore.v1.ExistenceFilter\n           * @instance\n           * @returns {Object.<string,*>} JSON object\n           */\n\n\n          ExistenceFilter.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n          };\n\n          return ExistenceFilter;\n        }();\n\n        return v1;\n      }();\n\n      return firestore;\n    }();\n\n    google.api = function () {\n      /**\n       * Namespace api.\n       * @memberof google\n       * @namespace\n       */\n      var api = {};\n\n      api.Http = function () {\n        /**\n         * Properties of a Http.\n         * @memberof google.api\n         * @interface IHttp\n         * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules\n         */\n\n        /**\n         * Constructs a new Http.\n         * @memberof google.api\n         * @classdesc Represents a Http.\n         * @implements IHttp\n         * @constructor\n         * @param {google.api.IHttp=} [properties] Properties to set\n         */\n        function Http(properties) {\n          this.rules = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * Http rules.\n         * @member {Array.<google.api.IHttpRule>} rules\n         * @memberof google.api.Http\n         * @instance\n         */\n\n\n        Http.prototype.rules = $util.emptyArray;\n        /**\n         * Creates a Http message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.api.Http\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.api.Http} Http\n         */\n\n        Http.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.api.Http) return object;\n          var message = new $root.google.api.Http();\n\n          if (object.rules) {\n            if (!Array.isArray(object.rules)) throw TypeError(\".google.api.Http.rules: array expected\");\n            message.rules = [];\n\n            for (var i = 0; i < object.rules.length; ++i) {\n              if (typeof object.rules[i] !== \"object\") throw TypeError(\".google.api.Http.rules: object expected\");\n              message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a Http message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.api.Http\n         * @static\n         * @param {google.api.Http} message Http\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        Http.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.rules = [];\n\n          if (message.rules && message.rules.length) {\n            object.rules = [];\n\n            for (var j = 0; j < message.rules.length; ++j) {\n              object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this Http to JSON.\n         * @function toJSON\n         * @memberof google.api.Http\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        Http.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Http;\n      }();\n\n      api.HttpRule = function () {\n        /**\n         * Properties of a HttpRule.\n         * @memberof google.api\n         * @interface IHttpRule\n         * @property {string|null} [get] HttpRule get\n         * @property {string|null} [put] HttpRule put\n         * @property {string|null} [post] HttpRule post\n         * @property {string|null} [\"delete\"] HttpRule delete\n         * @property {string|null} [patch] HttpRule patch\n         * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom\n         * @property {string|null} [selector] HttpRule selector\n         * @property {string|null} [body] HttpRule body\n         * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings\n         */\n\n        /**\n         * Constructs a new HttpRule.\n         * @memberof google.api\n         * @classdesc Represents a HttpRule.\n         * @implements IHttpRule\n         * @constructor\n         * @param {google.api.IHttpRule=} [properties] Properties to set\n         */\n        function HttpRule(properties) {\n          this.additionalBindings = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * HttpRule get.\n         * @member {string|null|undefined} get\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n\n        HttpRule.prototype.get = null;\n        /**\n         * HttpRule put.\n         * @member {string|null|undefined} put\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.put = null;\n        /**\n         * HttpRule post.\n         * @member {string|null|undefined} post\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.post = null;\n        /**\n         * HttpRule delete.\n         * @member {string|null|undefined} delete\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype[\"delete\"] = null;\n        /**\n         * HttpRule patch.\n         * @member {string|null|undefined} patch\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.patch = null;\n        /**\n         * HttpRule custom.\n         * @member {google.api.ICustomHttpPattern|null|undefined} custom\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.custom = null;\n        /**\n         * HttpRule selector.\n         * @member {string} selector\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.selector = \"\";\n        /**\n         * HttpRule body.\n         * @member {string} body\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.body = \"\";\n        /**\n         * HttpRule additionalBindings.\n         * @member {Array.<google.api.IHttpRule>} additionalBindings\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        HttpRule.prototype.additionalBindings = $util.emptyArray; // OneOf field names bound to virtual getters and setters\n\n        var $oneOfFields;\n        /**\n         * HttpRule pattern.\n         * @member {\"get\"|\"put\"|\"post\"|\"delete\"|\"patch\"|\"custom\"|undefined} pattern\n         * @memberof google.api.HttpRule\n         * @instance\n         */\n\n        Object.defineProperty(HttpRule.prototype, \"pattern\", {\n          get: $util.oneOfGetter($oneOfFields = [\"get\", \"put\", \"post\", \"delete\", \"patch\", \"custom\"]),\n          set: $util.oneOfSetter($oneOfFields)\n        });\n        /**\n         * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.api.HttpRule\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.api.HttpRule} HttpRule\n         */\n\n        HttpRule.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.api.HttpRule) return object;\n          var message = new $root.google.api.HttpRule();\n          if (object.get != null) message.get = String(object.get);\n          if (object.put != null) message.put = String(object.put);\n          if (object.post != null) message.post = String(object.post);\n          if (object[\"delete\"] != null) message[\"delete\"] = String(object[\"delete\"]);\n          if (object.patch != null) message.patch = String(object.patch);\n\n          if (object.custom != null) {\n            if (typeof object.custom !== \"object\") throw TypeError(\".google.api.HttpRule.custom: object expected\");\n            message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);\n          }\n\n          if (object.selector != null) message.selector = String(object.selector);\n          if (object.body != null) message.body = String(object.body);\n\n          if (object.additionalBindings) {\n            if (!Array.isArray(object.additionalBindings)) throw TypeError(\".google.api.HttpRule.additionalBindings: array expected\");\n            message.additionalBindings = [];\n\n            for (var i = 0; i < object.additionalBindings.length; ++i) {\n              if (typeof object.additionalBindings[i] !== \"object\") throw TypeError(\".google.api.HttpRule.additionalBindings: object expected\");\n              message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a HttpRule message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.api.HttpRule\n         * @static\n         * @param {google.api.HttpRule} message HttpRule\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        HttpRule.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.additionalBindings = [];\n\n          if (options.defaults) {\n            object.selector = \"\";\n            object.body = \"\";\n          }\n\n          if (message.selector != null && message.hasOwnProperty(\"selector\")) object.selector = message.selector;\n\n          if (message.get != null && message.hasOwnProperty(\"get\")) {\n            object.get = message.get;\n            if (options.oneofs) object.pattern = \"get\";\n          }\n\n          if (message.put != null && message.hasOwnProperty(\"put\")) {\n            object.put = message.put;\n            if (options.oneofs) object.pattern = \"put\";\n          }\n\n          if (message.post != null && message.hasOwnProperty(\"post\")) {\n            object.post = message.post;\n            if (options.oneofs) object.pattern = \"post\";\n          }\n\n          if (message[\"delete\"] != null && message.hasOwnProperty(\"delete\")) {\n            object[\"delete\"] = message[\"delete\"];\n            if (options.oneofs) object.pattern = \"delete\";\n          }\n\n          if (message.patch != null && message.hasOwnProperty(\"patch\")) {\n            object.patch = message.patch;\n            if (options.oneofs) object.pattern = \"patch\";\n          }\n\n          if (message.body != null && message.hasOwnProperty(\"body\")) object.body = message.body;\n\n          if (message.custom != null && message.hasOwnProperty(\"custom\")) {\n            object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);\n            if (options.oneofs) object.pattern = \"custom\";\n          }\n\n          if (message.additionalBindings && message.additionalBindings.length) {\n            object.additionalBindings = [];\n\n            for (var j = 0; j < message.additionalBindings.length; ++j) {\n              object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this HttpRule to JSON.\n         * @function toJSON\n         * @memberof google.api.HttpRule\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        HttpRule.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return HttpRule;\n      }();\n\n      api.CustomHttpPattern = function () {\n        /**\n         * Properties of a CustomHttpPattern.\n         * @memberof google.api\n         * @interface ICustomHttpPattern\n         * @property {string|null} [kind] CustomHttpPattern kind\n         * @property {string|null} [path] CustomHttpPattern path\n         */\n\n        /**\n         * Constructs a new CustomHttpPattern.\n         * @memberof google.api\n         * @classdesc Represents a CustomHttpPattern.\n         * @implements ICustomHttpPattern\n         * @constructor\n         * @param {google.api.ICustomHttpPattern=} [properties] Properties to set\n         */\n        function CustomHttpPattern(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * CustomHttpPattern kind.\n         * @member {string} kind\n         * @memberof google.api.CustomHttpPattern\n         * @instance\n         */\n\n\n        CustomHttpPattern.prototype.kind = \"\";\n        /**\n         * CustomHttpPattern path.\n         * @member {string} path\n         * @memberof google.api.CustomHttpPattern\n         * @instance\n         */\n\n        CustomHttpPattern.prototype.path = \"\";\n        /**\n         * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.api.CustomHttpPattern\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.api.CustomHttpPattern} CustomHttpPattern\n         */\n\n        CustomHttpPattern.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.api.CustomHttpPattern) return object;\n          var message = new $root.google.api.CustomHttpPattern();\n          if (object.kind != null) message.kind = String(object.kind);\n          if (object.path != null) message.path = String(object.path);\n          return message;\n        };\n        /**\n         * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.api.CustomHttpPattern\n         * @static\n         * @param {google.api.CustomHttpPattern} message CustomHttpPattern\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        CustomHttpPattern.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.kind = \"\";\n            object.path = \"\";\n          }\n\n          if (message.kind != null && message.hasOwnProperty(\"kind\")) object.kind = message.kind;\n          if (message.path != null && message.hasOwnProperty(\"path\")) object.path = message.path;\n          return object;\n        };\n        /**\n         * Converts this CustomHttpPattern to JSON.\n         * @function toJSON\n         * @memberof google.api.CustomHttpPattern\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        CustomHttpPattern.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return CustomHttpPattern;\n      }();\n      /**\n       * FieldBehavior enum.\n       * @name google.api.FieldBehavior\n       * @enum {string}\n       * @property {string} FIELD_BEHAVIOR_UNSPECIFIED=FIELD_BEHAVIOR_UNSPECIFIED FIELD_BEHAVIOR_UNSPECIFIED value\n       * @property {string} OPTIONAL=OPTIONAL OPTIONAL value\n       * @property {string} REQUIRED=REQUIRED REQUIRED value\n       * @property {string} OUTPUT_ONLY=OUTPUT_ONLY OUTPUT_ONLY value\n       * @property {string} INPUT_ONLY=INPUT_ONLY INPUT_ONLY value\n       * @property {string} IMMUTABLE=IMMUTABLE IMMUTABLE value\n       * @property {string} UNORDERED_LIST=UNORDERED_LIST UNORDERED_LIST value\n       * @property {string} NON_EMPTY_DEFAULT=NON_EMPTY_DEFAULT NON_EMPTY_DEFAULT value\n       */\n\n\n      api.FieldBehavior = function () {\n        var valuesById = {},\n            values = Object.create(valuesById);\n        values[valuesById[0] = \"FIELD_BEHAVIOR_UNSPECIFIED\"] = \"FIELD_BEHAVIOR_UNSPECIFIED\";\n        values[valuesById[1] = \"OPTIONAL\"] = \"OPTIONAL\";\n        values[valuesById[2] = \"REQUIRED\"] = \"REQUIRED\";\n        values[valuesById[3] = \"OUTPUT_ONLY\"] = \"OUTPUT_ONLY\";\n        values[valuesById[4] = \"INPUT_ONLY\"] = \"INPUT_ONLY\";\n        values[valuesById[5] = \"IMMUTABLE\"] = \"IMMUTABLE\";\n        values[valuesById[6] = \"UNORDERED_LIST\"] = \"UNORDERED_LIST\";\n        values[valuesById[7] = \"NON_EMPTY_DEFAULT\"] = \"NON_EMPTY_DEFAULT\";\n        return values;\n      }();\n\n      api.ResourceDescriptor = function () {\n        /**\n         * Properties of a ResourceDescriptor.\n         * @memberof google.api\n         * @interface IResourceDescriptor\n         * @property {string|null} [type] ResourceDescriptor type\n         * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern\n         * @property {string|null} [nameField] ResourceDescriptor nameField\n         * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history\n         * @property {string|null} [plural] ResourceDescriptor plural\n         * @property {string|null} [singular] ResourceDescriptor singular\n         * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style\n         */\n\n        /**\n         * Constructs a new ResourceDescriptor.\n         * @memberof google.api\n         * @classdesc Represents a ResourceDescriptor.\n         * @implements IResourceDescriptor\n         * @constructor\n         * @param {google.api.IResourceDescriptor=} [properties] Properties to set\n         */\n        function ResourceDescriptor(properties) {\n          this.pattern = [];\n          this.style = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * ResourceDescriptor type.\n         * @member {string} type\n         * @memberof google.api.ResourceDescriptor\n         * @instance\n         */\n\n\n        ResourceDescriptor.prototype.type = \"\";\n        /**\n         * ResourceDescriptor pattern.\n         * @member {Array.<string>} pattern\n         * @memberof google.api.ResourceDescriptor\n         * @instance\n         */\n\n        ResourceDescriptor.prototype.pattern = $util.emptyArray;\n        /**\n         * ResourceDescriptor nameField.\n         * @member {string} nameField\n         * @memberof google.api.ResourceDescriptor\n         * @instance\n         */\n\n        ResourceDescriptor.prototype.nameField = \"\";\n        /**\n         * ResourceDescriptor history.\n         * @member {google.api.ResourceDescriptor.History} history\n         * @memberof google.api.ResourceDescriptor\n         * @instance\n         */\n\n        ResourceDescriptor.prototype.history = 0;\n        /**\n         * ResourceDescriptor plural.\n         * @member {string} plural\n         * @memberof google.api.ResourceDescriptor\n         * @instance\n         */\n\n        ResourceDescriptor.prototype.plural = \"\";\n        /**\n         * ResourceDescriptor singular.\n         * @member {string} singular\n         * @memberof google.api.ResourceDescriptor\n         * @instance\n         */\n\n        ResourceDescriptor.prototype.singular = \"\";\n        /**\n         * ResourceDescriptor style.\n         * @member {Array.<google.api.ResourceDescriptor.Style>} style\n         * @memberof google.api.ResourceDescriptor\n         * @instance\n         */\n\n        ResourceDescriptor.prototype.style = $util.emptyArray;\n        /**\n         * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.api.ResourceDescriptor\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.api.ResourceDescriptor} ResourceDescriptor\n         */\n\n        ResourceDescriptor.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.api.ResourceDescriptor) return object;\n          var message = new $root.google.api.ResourceDescriptor();\n          if (object.type != null) message.type = String(object.type);\n\n          if (object.pattern) {\n            if (!Array.isArray(object.pattern)) throw TypeError(\".google.api.ResourceDescriptor.pattern: array expected\");\n            message.pattern = [];\n\n            for (var i = 0; i < object.pattern.length; ++i) {\n              message.pattern[i] = String(object.pattern[i]);\n            }\n          }\n\n          if (object.nameField != null) message.nameField = String(object.nameField);\n\n          switch (object.history) {\n            case \"HISTORY_UNSPECIFIED\":\n            case 0:\n              message.history = 0;\n              break;\n\n            case \"ORIGINALLY_SINGLE_PATTERN\":\n            case 1:\n              message.history = 1;\n              break;\n\n            case \"FUTURE_MULTI_PATTERN\":\n            case 2:\n              message.history = 2;\n              break;\n          }\n\n          if (object.plural != null) message.plural = String(object.plural);\n          if (object.singular != null) message.singular = String(object.singular);\n\n          if (object.style) {\n            if (!Array.isArray(object.style)) throw TypeError(\".google.api.ResourceDescriptor.style: array expected\");\n            message.style = [];\n\n            for (var i = 0; i < object.style.length; ++i) {\n              switch (object.style[i]) {\n                default:\n                case \"STYLE_UNSPECIFIED\":\n                case 0:\n                  message.style[i] = 0;\n                  break;\n\n                case \"DECLARATIVE_FRIENDLY\":\n                case 1:\n                  message.style[i] = 1;\n                  break;\n              }\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.api.ResourceDescriptor\n         * @static\n         * @param {google.api.ResourceDescriptor} message ResourceDescriptor\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        ResourceDescriptor.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.arrays || options.defaults) {\n            object.pattern = [];\n            object.style = [];\n          }\n\n          if (options.defaults) {\n            object.type = \"\";\n            object.nameField = \"\";\n            object.history = options.enums === String ? \"HISTORY_UNSPECIFIED\" : 0;\n            object.plural = \"\";\n            object.singular = \"\";\n          }\n\n          if (message.type != null && message.hasOwnProperty(\"type\")) object.type = message.type;\n\n          if (message.pattern && message.pattern.length) {\n            object.pattern = [];\n\n            for (var j = 0; j < message.pattern.length; ++j) {\n              object.pattern[j] = message.pattern[j];\n            }\n          }\n\n          if (message.nameField != null && message.hasOwnProperty(\"nameField\")) object.nameField = message.nameField;\n          if (message.history != null && message.hasOwnProperty(\"history\")) object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] : message.history;\n          if (message.plural != null && message.hasOwnProperty(\"plural\")) object.plural = message.plural;\n          if (message.singular != null && message.hasOwnProperty(\"singular\")) object.singular = message.singular;\n\n          if (message.style && message.style.length) {\n            object.style = [];\n\n            for (var j = 0; j < message.style.length; ++j) {\n              object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this ResourceDescriptor to JSON.\n         * @function toJSON\n         * @memberof google.api.ResourceDescriptor\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        ResourceDescriptor.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n        /**\n         * History enum.\n         * @name google.api.ResourceDescriptor.History\n         * @enum {string}\n         * @property {string} HISTORY_UNSPECIFIED=HISTORY_UNSPECIFIED HISTORY_UNSPECIFIED value\n         * @property {string} ORIGINALLY_SINGLE_PATTERN=ORIGINALLY_SINGLE_PATTERN ORIGINALLY_SINGLE_PATTERN value\n         * @property {string} FUTURE_MULTI_PATTERN=FUTURE_MULTI_PATTERN FUTURE_MULTI_PATTERN value\n         */\n\n\n        ResourceDescriptor.History = function () {\n          var valuesById = {},\n              values = Object.create(valuesById);\n          values[valuesById[0] = \"HISTORY_UNSPECIFIED\"] = \"HISTORY_UNSPECIFIED\";\n          values[valuesById[1] = \"ORIGINALLY_SINGLE_PATTERN\"] = \"ORIGINALLY_SINGLE_PATTERN\";\n          values[valuesById[2] = \"FUTURE_MULTI_PATTERN\"] = \"FUTURE_MULTI_PATTERN\";\n          return values;\n        }();\n        /**\n         * Style enum.\n         * @name google.api.ResourceDescriptor.Style\n         * @enum {string}\n         * @property {string} STYLE_UNSPECIFIED=STYLE_UNSPECIFIED STYLE_UNSPECIFIED value\n         * @property {string} DECLARATIVE_FRIENDLY=DECLARATIVE_FRIENDLY DECLARATIVE_FRIENDLY value\n         */\n\n\n        ResourceDescriptor.Style = function () {\n          var valuesById = {},\n              values = Object.create(valuesById);\n          values[valuesById[0] = \"STYLE_UNSPECIFIED\"] = \"STYLE_UNSPECIFIED\";\n          values[valuesById[1] = \"DECLARATIVE_FRIENDLY\"] = \"DECLARATIVE_FRIENDLY\";\n          return values;\n        }();\n\n        return ResourceDescriptor;\n      }();\n\n      api.ResourceReference = function () {\n        /**\n         * Properties of a ResourceReference.\n         * @memberof google.api\n         * @interface IResourceReference\n         * @property {string|null} [type] ResourceReference type\n         * @property {string|null} [childType] ResourceReference childType\n         */\n\n        /**\n         * Constructs a new ResourceReference.\n         * @memberof google.api\n         * @classdesc Represents a ResourceReference.\n         * @implements IResourceReference\n         * @constructor\n         * @param {google.api.IResourceReference=} [properties] Properties to set\n         */\n        function ResourceReference(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * ResourceReference type.\n         * @member {string} type\n         * @memberof google.api.ResourceReference\n         * @instance\n         */\n\n\n        ResourceReference.prototype.type = \"\";\n        /**\n         * ResourceReference childType.\n         * @member {string} childType\n         * @memberof google.api.ResourceReference\n         * @instance\n         */\n\n        ResourceReference.prototype.childType = \"\";\n        /**\n         * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.api.ResourceReference\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.api.ResourceReference} ResourceReference\n         */\n\n        ResourceReference.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.api.ResourceReference) return object;\n          var message = new $root.google.api.ResourceReference();\n          if (object.type != null) message.type = String(object.type);\n          if (object.childType != null) message.childType = String(object.childType);\n          return message;\n        };\n        /**\n         * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.api.ResourceReference\n         * @static\n         * @param {google.api.ResourceReference} message ResourceReference\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        ResourceReference.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.type = \"\";\n            object.childType = \"\";\n          }\n\n          if (message.type != null && message.hasOwnProperty(\"type\")) object.type = message.type;\n          if (message.childType != null && message.hasOwnProperty(\"childType\")) object.childType = message.childType;\n          return object;\n        };\n        /**\n         * Converts this ResourceReference to JSON.\n         * @function toJSON\n         * @memberof google.api.ResourceReference\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        ResourceReference.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ResourceReference;\n      }();\n\n      return api;\n    }();\n\n    google.type = function () {\n      /**\n       * Namespace type.\n       * @memberof google\n       * @namespace\n       */\n      var type = {};\n\n      type.LatLng = function () {\n        /**\n         * Properties of a LatLng.\n         * @memberof google.type\n         * @interface ILatLng\n         * @property {number|null} [latitude] LatLng latitude\n         * @property {number|null} [longitude] LatLng longitude\n         */\n\n        /**\n         * Constructs a new LatLng.\n         * @memberof google.type\n         * @classdesc Represents a LatLng.\n         * @implements ILatLng\n         * @constructor\n         * @param {google.type.ILatLng=} [properties] Properties to set\n         */\n        function LatLng(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * LatLng latitude.\n         * @member {number} latitude\n         * @memberof google.type.LatLng\n         * @instance\n         */\n\n\n        LatLng.prototype.latitude = 0;\n        /**\n         * LatLng longitude.\n         * @member {number} longitude\n         * @memberof google.type.LatLng\n         * @instance\n         */\n\n        LatLng.prototype.longitude = 0;\n        /**\n         * Creates a LatLng message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.type.LatLng\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.type.LatLng} LatLng\n         */\n\n        LatLng.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.type.LatLng) return object;\n          var message = new $root.google.type.LatLng();\n          if (object.latitude != null) message.latitude = Number(object.latitude);\n          if (object.longitude != null) message.longitude = Number(object.longitude);\n          return message;\n        };\n        /**\n         * Creates a plain object from a LatLng message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.type.LatLng\n         * @static\n         * @param {google.type.LatLng} message LatLng\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        LatLng.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.latitude = 0;\n            object.longitude = 0;\n          }\n\n          if (message.latitude != null && message.hasOwnProperty(\"latitude\")) object.latitude = options.json && !isFinite(message.latitude) ? String(message.latitude) : message.latitude;\n          if (message.longitude != null && message.hasOwnProperty(\"longitude\")) object.longitude = options.json && !isFinite(message.longitude) ? String(message.longitude) : message.longitude;\n          return object;\n        };\n        /**\n         * Converts this LatLng to JSON.\n         * @function toJSON\n         * @memberof google.type.LatLng\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        LatLng.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return LatLng;\n      }();\n\n      return type;\n    }();\n\n    google.rpc = function () {\n      /**\n       * Namespace rpc.\n       * @memberof google\n       * @namespace\n       */\n      var rpc = {};\n\n      rpc.Status = function () {\n        /**\n         * Properties of a Status.\n         * @memberof google.rpc\n         * @interface IStatus\n         * @property {number|null} [code] Status code\n         * @property {string|null} [message] Status message\n         * @property {Array.<google.protobuf.IAny>|null} [details] Status details\n         */\n\n        /**\n         * Constructs a new Status.\n         * @memberof google.rpc\n         * @classdesc Represents a Status.\n         * @implements IStatus\n         * @constructor\n         * @param {google.rpc.IStatus=} [properties] Properties to set\n         */\n        function Status(properties) {\n          this.details = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * Status code.\n         * @member {number} code\n         * @memberof google.rpc.Status\n         * @instance\n         */\n\n\n        Status.prototype.code = 0;\n        /**\n         * Status message.\n         * @member {string} message\n         * @memberof google.rpc.Status\n         * @instance\n         */\n\n        Status.prototype.message = \"\";\n        /**\n         * Status details.\n         * @member {Array.<google.protobuf.IAny>} details\n         * @memberof google.rpc.Status\n         * @instance\n         */\n\n        Status.prototype.details = $util.emptyArray;\n        /**\n         * Creates a Status message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.rpc.Status\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.rpc.Status} Status\n         */\n\n        Status.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.rpc.Status) return object;\n          var message = new $root.google.rpc.Status();\n          if (object.code != null) message.code = object.code | 0;\n          if (object.message != null) message.message = String(object.message);\n\n          if (object.details) {\n            if (!Array.isArray(object.details)) throw TypeError(\".google.rpc.Status.details: array expected\");\n            message.details = [];\n\n            for (var i = 0; i < object.details.length; ++i) {\n              if (typeof object.details[i] !== \"object\") throw TypeError(\".google.rpc.Status.details: object expected\");\n              message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);\n            }\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a Status message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.rpc.Status\n         * @static\n         * @param {google.rpc.Status} message Status\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        Status.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.details = [];\n\n          if (options.defaults) {\n            object.code = 0;\n            object.message = \"\";\n          }\n\n          if (message.code != null && message.hasOwnProperty(\"code\")) object.code = message.code;\n          if (message.message != null && message.hasOwnProperty(\"message\")) object.message = message.message;\n\n          if (message.details && message.details.length) {\n            object.details = [];\n\n            for (var j = 0; j < message.details.length; ++j) {\n              object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);\n            }\n          }\n\n          return object;\n        };\n        /**\n         * Converts this Status to JSON.\n         * @function toJSON\n         * @memberof google.rpc.Status\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        Status.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Status;\n      }();\n\n      return rpc;\n    }();\n\n    google.longrunning = function () {\n      /**\n       * Namespace longrunning.\n       * @memberof google\n       * @namespace\n       */\n      var longrunning = {};\n\n      longrunning.Operations = function () {\n        /**\n         * Constructs a new Operations service.\n         * @memberof google.longrunning\n         * @classdesc Represents an Operations\n         * @extends $protobuf.rpc.Service\n         * @constructor\n         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation\n         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n         */\n        function Operations(rpcImpl, requestDelimited, responseDelimited) {\n          $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);\n        }\n\n        (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;\n        /**\n         * Callback as used by {@link google.longrunning.Operations#listOperations}.\n         * @memberof google.longrunning.Operations\n         * @typedef ListOperationsCallback\n         * @type {function}\n         * @param {Error|null} error Error, if any\n         * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse\n         */\n\n        /**\n         * Calls ListOperations.\n         * @function listOperations\n         * @memberof google.longrunning.Operations\n         * @instance\n         * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object\n         * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse\n         * @returns {undefined}\n         * @variation 1\n         */\n\n        Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {\n          return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);\n        }, \"name\", {\n          value: \"ListOperations\"\n        });\n        /**\n         * Calls ListOperations.\n         * @function listOperations\n         * @memberof google.longrunning.Operations\n         * @instance\n         * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object\n         * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise\n         * @variation 2\n         */\n\n        /**\n         * Callback as used by {@link google.longrunning.Operations#getOperation}.\n         * @memberof google.longrunning.Operations\n         * @typedef GetOperationCallback\n         * @type {function}\n         * @param {Error|null} error Error, if any\n         * @param {google.longrunning.Operation} [response] Operation\n         */\n\n        /**\n         * Calls GetOperation.\n         * @function getOperation\n         * @memberof google.longrunning.Operations\n         * @instance\n         * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object\n         * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation\n         * @returns {undefined}\n         * @variation 1\n         */\n\n        Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {\n          return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);\n        }, \"name\", {\n          value: \"GetOperation\"\n        });\n        /**\n         * Calls GetOperation.\n         * @function getOperation\n         * @memberof google.longrunning.Operations\n         * @instance\n         * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object\n         * @returns {Promise<google.longrunning.Operation>} Promise\n         * @variation 2\n         */\n\n        /**\n         * Callback as used by {@link google.longrunning.Operations#deleteOperation}.\n         * @memberof google.longrunning.Operations\n         * @typedef DeleteOperationCallback\n         * @type {function}\n         * @param {Error|null} error Error, if any\n         * @param {google.protobuf.Empty} [response] Empty\n         */\n\n        /**\n         * Calls DeleteOperation.\n         * @function deleteOperation\n         * @memberof google.longrunning.Operations\n         * @instance\n         * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object\n         * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty\n         * @returns {undefined}\n         * @variation 1\n         */\n\n        Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {\n          return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);\n        }, \"name\", {\n          value: \"DeleteOperation\"\n        });\n        /**\n         * Calls DeleteOperation.\n         * @function deleteOperation\n         * @memberof google.longrunning.Operations\n         * @instance\n         * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object\n         * @returns {Promise<google.protobuf.Empty>} Promise\n         * @variation 2\n         */\n\n        /**\n         * Callback as used by {@link google.longrunning.Operations#cancelOperation}.\n         * @memberof google.longrunning.Operations\n         * @typedef CancelOperationCallback\n         * @type {function}\n         * @param {Error|null} error Error, if any\n         * @param {google.protobuf.Empty} [response] Empty\n         */\n\n        /**\n         * Calls CancelOperation.\n         * @function cancelOperation\n         * @memberof google.longrunning.Operations\n         * @instance\n         * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object\n         * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty\n         * @returns {undefined}\n         * @variation 1\n         */\n\n        Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {\n          return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);\n        }, \"name\", {\n          value: \"CancelOperation\"\n        });\n        /**\n         * Calls CancelOperation.\n         * @function cancelOperation\n         * @memberof google.longrunning.Operations\n         * @instance\n         * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object\n         * @returns {Promise<google.protobuf.Empty>} Promise\n         * @variation 2\n         */\n\n        /**\n         * Callback as used by {@link google.longrunning.Operations#waitOperation}.\n         * @memberof google.longrunning.Operations\n         * @typedef WaitOperationCallback\n         * @type {function}\n         * @param {Error|null} error Error, if any\n         * @param {google.longrunning.Operation} [response] Operation\n         */\n\n        /**\n         * Calls WaitOperation.\n         * @function waitOperation\n         * @memberof google.longrunning.Operations\n         * @instance\n         * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object\n         * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation\n         * @returns {undefined}\n         * @variation 1\n         */\n\n        Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {\n          return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);\n        }, \"name\", {\n          value: \"WaitOperation\"\n        });\n        /**\n         * Calls WaitOperation.\n         * @function waitOperation\n         * @memberof google.longrunning.Operations\n         * @instance\n         * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object\n         * @returns {Promise<google.longrunning.Operation>} Promise\n         * @variation 2\n         */\n\n        return Operations;\n      }();\n\n      longrunning.Operation = function () {\n        /**\n         * Properties of an Operation.\n         * @memberof google.longrunning\n         * @interface IOperation\n         * @property {string|null} [name] Operation name\n         * @property {google.protobuf.IAny|null} [metadata] Operation metadata\n         * @property {boolean|null} [done] Operation done\n         * @property {google.rpc.IStatus|null} [error] Operation error\n         * @property {google.protobuf.IAny|null} [response] Operation response\n         */\n\n        /**\n         * Constructs a new Operation.\n         * @memberof google.longrunning\n         * @classdesc Represents an Operation.\n         * @implements IOperation\n         * @constructor\n         * @param {google.longrunning.IOperation=} [properties] Properties to set\n         */\n        function Operation(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * Operation name.\n         * @member {string} name\n         * @memberof google.longrunning.Operation\n         * @instance\n         */\n\n\n        Operation.prototype.name = \"\";\n        /**\n         * Operation metadata.\n         * @member {google.protobuf.IAny|null|undefined} metadata\n         * @memberof google.longrunning.Operation\n         * @instance\n         */\n\n        Operation.prototype.metadata = null;\n        /**\n         * Operation done.\n         * @member {boolean} done\n         * @memberof google.longrunning.Operation\n         * @instance\n         */\n\n        Operation.prototype.done = false;\n        /**\n         * Operation error.\n         * @member {google.rpc.IStatus|null|undefined} error\n         * @memberof google.longrunning.Operation\n         * @instance\n         */\n\n        Operation.prototype.error = null;\n        /**\n         * Operation response.\n         * @member {google.protobuf.IAny|null|undefined} response\n         * @memberof google.longrunning.Operation\n         * @instance\n         */\n\n        Operation.prototype.response = null; // OneOf field names bound to virtual getters and setters\n\n        var $oneOfFields;\n        /**\n         * Operation result.\n         * @member {\"error\"|\"response\"|undefined} result\n         * @memberof google.longrunning.Operation\n         * @instance\n         */\n\n        Object.defineProperty(Operation.prototype, \"result\", {\n          get: $util.oneOfGetter($oneOfFields = [\"error\", \"response\"]),\n          set: $util.oneOfSetter($oneOfFields)\n        });\n        /**\n         * Creates an Operation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.longrunning.Operation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.longrunning.Operation} Operation\n         */\n\n        Operation.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.longrunning.Operation) return object;\n          var message = new $root.google.longrunning.Operation();\n          if (object.name != null) message.name = String(object.name);\n\n          if (object.metadata != null) {\n            if (typeof object.metadata !== \"object\") throw TypeError(\".google.longrunning.Operation.metadata: object expected\");\n            message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);\n          }\n\n          if (object.done != null) message.done = Boolean(object.done);\n\n          if (object.error != null) {\n            if (typeof object.error !== \"object\") throw TypeError(\".google.longrunning.Operation.error: object expected\");\n            message.error = $root.google.rpc.Status.fromObject(object.error);\n          }\n\n          if (object.response != null) {\n            if (typeof object.response !== \"object\") throw TypeError(\".google.longrunning.Operation.response: object expected\");\n            message.response = $root.google.protobuf.Any.fromObject(object.response);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from an Operation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.longrunning.Operation\n         * @static\n         * @param {google.longrunning.Operation} message Operation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        Operation.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.metadata = null;\n            object.done = false;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          if (message.metadata != null && message.hasOwnProperty(\"metadata\")) object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);\n          if (message.done != null && message.hasOwnProperty(\"done\")) object.done = message.done;\n\n          if (message.error != null && message.hasOwnProperty(\"error\")) {\n            object.error = $root.google.rpc.Status.toObject(message.error, options);\n            if (options.oneofs) object.result = \"error\";\n          }\n\n          if (message.response != null && message.hasOwnProperty(\"response\")) {\n            object.response = $root.google.protobuf.Any.toObject(message.response, options);\n            if (options.oneofs) object.result = \"response\";\n          }\n\n          return object;\n        };\n        /**\n         * Converts this Operation to JSON.\n         * @function toJSON\n         * @memberof google.longrunning.Operation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        Operation.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Operation;\n      }();\n\n      longrunning.GetOperationRequest = function () {\n        /**\n         * Properties of a GetOperationRequest.\n         * @memberof google.longrunning\n         * @interface IGetOperationRequest\n         * @property {string|null} [name] GetOperationRequest name\n         */\n\n        /**\n         * Constructs a new GetOperationRequest.\n         * @memberof google.longrunning\n         * @classdesc Represents a GetOperationRequest.\n         * @implements IGetOperationRequest\n         * @constructor\n         * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set\n         */\n        function GetOperationRequest(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * GetOperationRequest name.\n         * @member {string} name\n         * @memberof google.longrunning.GetOperationRequest\n         * @instance\n         */\n\n\n        GetOperationRequest.prototype.name = \"\";\n        /**\n         * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.longrunning.GetOperationRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.longrunning.GetOperationRequest} GetOperationRequest\n         */\n\n        GetOperationRequest.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.longrunning.GetOperationRequest) return object;\n          var message = new $root.google.longrunning.GetOperationRequest();\n          if (object.name != null) message.name = String(object.name);\n          return message;\n        };\n        /**\n         * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.longrunning.GetOperationRequest\n         * @static\n         * @param {google.longrunning.GetOperationRequest} message GetOperationRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        GetOperationRequest.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.defaults) object.name = \"\";\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          return object;\n        };\n        /**\n         * Converts this GetOperationRequest to JSON.\n         * @function toJSON\n         * @memberof google.longrunning.GetOperationRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        GetOperationRequest.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GetOperationRequest;\n      }();\n\n      longrunning.ListOperationsRequest = function () {\n        /**\n         * Properties of a ListOperationsRequest.\n         * @memberof google.longrunning\n         * @interface IListOperationsRequest\n         * @property {string|null} [name] ListOperationsRequest name\n         * @property {string|null} [filter] ListOperationsRequest filter\n         * @property {number|null} [pageSize] ListOperationsRequest pageSize\n         * @property {string|null} [pageToken] ListOperationsRequest pageToken\n         */\n\n        /**\n         * Constructs a new ListOperationsRequest.\n         * @memberof google.longrunning\n         * @classdesc Represents a ListOperationsRequest.\n         * @implements IListOperationsRequest\n         * @constructor\n         * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set\n         */\n        function ListOperationsRequest(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * ListOperationsRequest name.\n         * @member {string} name\n         * @memberof google.longrunning.ListOperationsRequest\n         * @instance\n         */\n\n\n        ListOperationsRequest.prototype.name = \"\";\n        /**\n         * ListOperationsRequest filter.\n         * @member {string} filter\n         * @memberof google.longrunning.ListOperationsRequest\n         * @instance\n         */\n\n        ListOperationsRequest.prototype.filter = \"\";\n        /**\n         * ListOperationsRequest pageSize.\n         * @member {number} pageSize\n         * @memberof google.longrunning.ListOperationsRequest\n         * @instance\n         */\n\n        ListOperationsRequest.prototype.pageSize = 0;\n        /**\n         * ListOperationsRequest pageToken.\n         * @member {string} pageToken\n         * @memberof google.longrunning.ListOperationsRequest\n         * @instance\n         */\n\n        ListOperationsRequest.prototype.pageToken = \"\";\n        /**\n         * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.longrunning.ListOperationsRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest\n         */\n\n        ListOperationsRequest.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.longrunning.ListOperationsRequest) return object;\n          var message = new $root.google.longrunning.ListOperationsRequest();\n          if (object.name != null) message.name = String(object.name);\n          if (object.filter != null) message.filter = String(object.filter);\n          if (object.pageSize != null) message.pageSize = object.pageSize | 0;\n          if (object.pageToken != null) message.pageToken = String(object.pageToken);\n          return message;\n        };\n        /**\n         * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.longrunning.ListOperationsRequest\n         * @static\n         * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        ListOperationsRequest.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.filter = \"\";\n            object.pageSize = 0;\n            object.pageToken = \"\";\n            object.name = \"\";\n          }\n\n          if (message.filter != null && message.hasOwnProperty(\"filter\")) object.filter = message.filter;\n          if (message.pageSize != null && message.hasOwnProperty(\"pageSize\")) object.pageSize = message.pageSize;\n          if (message.pageToken != null && message.hasOwnProperty(\"pageToken\")) object.pageToken = message.pageToken;\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          return object;\n        };\n        /**\n         * Converts this ListOperationsRequest to JSON.\n         * @function toJSON\n         * @memberof google.longrunning.ListOperationsRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        ListOperationsRequest.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ListOperationsRequest;\n      }();\n\n      longrunning.ListOperationsResponse = function () {\n        /**\n         * Properties of a ListOperationsResponse.\n         * @memberof google.longrunning\n         * @interface IListOperationsResponse\n         * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations\n         * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken\n         */\n\n        /**\n         * Constructs a new ListOperationsResponse.\n         * @memberof google.longrunning\n         * @classdesc Represents a ListOperationsResponse.\n         * @implements IListOperationsResponse\n         * @constructor\n         * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set\n         */\n        function ListOperationsResponse(properties) {\n          this.operations = [];\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * ListOperationsResponse operations.\n         * @member {Array.<google.longrunning.IOperation>} operations\n         * @memberof google.longrunning.ListOperationsResponse\n         * @instance\n         */\n\n\n        ListOperationsResponse.prototype.operations = $util.emptyArray;\n        /**\n         * ListOperationsResponse nextPageToken.\n         * @member {string} nextPageToken\n         * @memberof google.longrunning.ListOperationsResponse\n         * @instance\n         */\n\n        ListOperationsResponse.prototype.nextPageToken = \"\";\n        /**\n         * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.longrunning.ListOperationsResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse\n         */\n\n        ListOperationsResponse.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.longrunning.ListOperationsResponse) return object;\n          var message = new $root.google.longrunning.ListOperationsResponse();\n\n          if (object.operations) {\n            if (!Array.isArray(object.operations)) throw TypeError(\".google.longrunning.ListOperationsResponse.operations: array expected\");\n            message.operations = [];\n\n            for (var i = 0; i < object.operations.length; ++i) {\n              if (typeof object.operations[i] !== \"object\") throw TypeError(\".google.longrunning.ListOperationsResponse.operations: object expected\");\n              message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);\n            }\n          }\n\n          if (object.nextPageToken != null) message.nextPageToken = String(object.nextPageToken);\n          return message;\n        };\n        /**\n         * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.longrunning.ListOperationsResponse\n         * @static\n         * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        ListOperationsResponse.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.arrays || options.defaults) object.operations = [];\n          if (options.defaults) object.nextPageToken = \"\";\n\n          if (message.operations && message.operations.length) {\n            object.operations = [];\n\n            for (var j = 0; j < message.operations.length; ++j) {\n              object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);\n            }\n          }\n\n          if (message.nextPageToken != null && message.hasOwnProperty(\"nextPageToken\")) object.nextPageToken = message.nextPageToken;\n          return object;\n        };\n        /**\n         * Converts this ListOperationsResponse to JSON.\n         * @function toJSON\n         * @memberof google.longrunning.ListOperationsResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        ListOperationsResponse.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ListOperationsResponse;\n      }();\n\n      longrunning.CancelOperationRequest = function () {\n        /**\n         * Properties of a CancelOperationRequest.\n         * @memberof google.longrunning\n         * @interface ICancelOperationRequest\n         * @property {string|null} [name] CancelOperationRequest name\n         */\n\n        /**\n         * Constructs a new CancelOperationRequest.\n         * @memberof google.longrunning\n         * @classdesc Represents a CancelOperationRequest.\n         * @implements ICancelOperationRequest\n         * @constructor\n         * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set\n         */\n        function CancelOperationRequest(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * CancelOperationRequest name.\n         * @member {string} name\n         * @memberof google.longrunning.CancelOperationRequest\n         * @instance\n         */\n\n\n        CancelOperationRequest.prototype.name = \"\";\n        /**\n         * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.longrunning.CancelOperationRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest\n         */\n\n        CancelOperationRequest.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.longrunning.CancelOperationRequest) return object;\n          var message = new $root.google.longrunning.CancelOperationRequest();\n          if (object.name != null) message.name = String(object.name);\n          return message;\n        };\n        /**\n         * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.longrunning.CancelOperationRequest\n         * @static\n         * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        CancelOperationRequest.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.defaults) object.name = \"\";\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          return object;\n        };\n        /**\n         * Converts this CancelOperationRequest to JSON.\n         * @function toJSON\n         * @memberof google.longrunning.CancelOperationRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        CancelOperationRequest.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return CancelOperationRequest;\n      }();\n\n      longrunning.DeleteOperationRequest = function () {\n        /**\n         * Properties of a DeleteOperationRequest.\n         * @memberof google.longrunning\n         * @interface IDeleteOperationRequest\n         * @property {string|null} [name] DeleteOperationRequest name\n         */\n\n        /**\n         * Constructs a new DeleteOperationRequest.\n         * @memberof google.longrunning\n         * @classdesc Represents a DeleteOperationRequest.\n         * @implements IDeleteOperationRequest\n         * @constructor\n         * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set\n         */\n        function DeleteOperationRequest(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * DeleteOperationRequest name.\n         * @member {string} name\n         * @memberof google.longrunning.DeleteOperationRequest\n         * @instance\n         */\n\n\n        DeleteOperationRequest.prototype.name = \"\";\n        /**\n         * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.longrunning.DeleteOperationRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest\n         */\n\n        DeleteOperationRequest.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.longrunning.DeleteOperationRequest) return object;\n          var message = new $root.google.longrunning.DeleteOperationRequest();\n          if (object.name != null) message.name = String(object.name);\n          return message;\n        };\n        /**\n         * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.longrunning.DeleteOperationRequest\n         * @static\n         * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        DeleteOperationRequest.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n          if (options.defaults) object.name = \"\";\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          return object;\n        };\n        /**\n         * Converts this DeleteOperationRequest to JSON.\n         * @function toJSON\n         * @memberof google.longrunning.DeleteOperationRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        DeleteOperationRequest.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return DeleteOperationRequest;\n      }();\n\n      longrunning.WaitOperationRequest = function () {\n        /**\n         * Properties of a WaitOperationRequest.\n         * @memberof google.longrunning\n         * @interface IWaitOperationRequest\n         * @property {string|null} [name] WaitOperationRequest name\n         * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout\n         */\n\n        /**\n         * Constructs a new WaitOperationRequest.\n         * @memberof google.longrunning\n         * @classdesc Represents a WaitOperationRequest.\n         * @implements IWaitOperationRequest\n         * @constructor\n         * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set\n         */\n        function WaitOperationRequest(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * WaitOperationRequest name.\n         * @member {string} name\n         * @memberof google.longrunning.WaitOperationRequest\n         * @instance\n         */\n\n\n        WaitOperationRequest.prototype.name = \"\";\n        /**\n         * WaitOperationRequest timeout.\n         * @member {google.protobuf.IDuration|null|undefined} timeout\n         * @memberof google.longrunning.WaitOperationRequest\n         * @instance\n         */\n\n        WaitOperationRequest.prototype.timeout = null;\n        /**\n         * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.longrunning.WaitOperationRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest\n         */\n\n        WaitOperationRequest.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.longrunning.WaitOperationRequest) return object;\n          var message = new $root.google.longrunning.WaitOperationRequest();\n          if (object.name != null) message.name = String(object.name);\n\n          if (object.timeout != null) {\n            if (typeof object.timeout !== \"object\") throw TypeError(\".google.longrunning.WaitOperationRequest.timeout: object expected\");\n            message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);\n          }\n\n          return message;\n        };\n        /**\n         * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.longrunning.WaitOperationRequest\n         * @static\n         * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        WaitOperationRequest.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.name = \"\";\n            object.timeout = null;\n          }\n\n          if (message.name != null && message.hasOwnProperty(\"name\")) object.name = message.name;\n          if (message.timeout != null && message.hasOwnProperty(\"timeout\")) object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);\n          return object;\n        };\n        /**\n         * Converts this WaitOperationRequest to JSON.\n         * @function toJSON\n         * @memberof google.longrunning.WaitOperationRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        WaitOperationRequest.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return WaitOperationRequest;\n      }();\n\n      longrunning.OperationInfo = function () {\n        /**\n         * Properties of an OperationInfo.\n         * @memberof google.longrunning\n         * @interface IOperationInfo\n         * @property {string|null} [responseType] OperationInfo responseType\n         * @property {string|null} [metadataType] OperationInfo metadataType\n         */\n\n        /**\n         * Constructs a new OperationInfo.\n         * @memberof google.longrunning\n         * @classdesc Represents an OperationInfo.\n         * @implements IOperationInfo\n         * @constructor\n         * @param {google.longrunning.IOperationInfo=} [properties] Properties to set\n         */\n        function OperationInfo(properties) {\n          if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n            if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n          }\n        }\n        /**\n         * OperationInfo responseType.\n         * @member {string} responseType\n         * @memberof google.longrunning.OperationInfo\n         * @instance\n         */\n\n\n        OperationInfo.prototype.responseType = \"\";\n        /**\n         * OperationInfo metadataType.\n         * @member {string} metadataType\n         * @memberof google.longrunning.OperationInfo\n         * @instance\n         */\n\n        OperationInfo.prototype.metadataType = \"\";\n        /**\n         * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof google.longrunning.OperationInfo\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {google.longrunning.OperationInfo} OperationInfo\n         */\n\n        OperationInfo.fromObject = function fromObject(object) {\n          if (object instanceof $root.google.longrunning.OperationInfo) return object;\n          var message = new $root.google.longrunning.OperationInfo();\n          if (object.responseType != null) message.responseType = String(object.responseType);\n          if (object.metadataType != null) message.metadataType = String(object.metadataType);\n          return message;\n        };\n        /**\n         * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof google.longrunning.OperationInfo\n         * @static\n         * @param {google.longrunning.OperationInfo} message OperationInfo\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n\n\n        OperationInfo.toObject = function toObject(message, options) {\n          if (!options) options = {};\n          var object = {};\n\n          if (options.defaults) {\n            object.responseType = \"\";\n            object.metadataType = \"\";\n          }\n\n          if (message.responseType != null && message.hasOwnProperty(\"responseType\")) object.responseType = message.responseType;\n          if (message.metadataType != null && message.hasOwnProperty(\"metadataType\")) object.metadataType = message.metadataType;\n          return object;\n        };\n        /**\n         * Converts this OperationInfo to JSON.\n         * @function toJSON\n         * @memberof google.longrunning.OperationInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n\n\n        OperationInfo.prototype.toJSON = function toJSON() {\n          return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperationInfo;\n      }();\n\n      return longrunning;\n    }();\n\n    return google;\n  }();\n\n  return $root;\n});","map":null,"metadata":{},"sourceType":"script"}