{"ast":null,"code":"var _objectSpread = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\n\nvar http = require('http');\n\nvar https = require('https');\n\nvar urlUtil = require('url');\n\nmodule.exports.default = function (options) {\n  if (options.fetcher) {\n    return options.fetcher(options.uri);\n  }\n\n  return new Promise(function (resolve, reject) {\n    var _urlUtil$parse = urlUtil.parse(options.uri),\n        hostname = _urlUtil$parse.hostname,\n        path = _urlUtil$parse.path,\n        port = _urlUtil$parse.port,\n        protocol = _urlUtil$parse.protocol;\n\n    var requestOptions = _objectSpread({\n      hostname: hostname,\n      path: path,\n      port: port,\n      method: 'GET'\n    }, options.headers && {\n      headers: _objectSpread({}, options.headers)\n    }, options.timeout && {\n      timeout: options.timeout\n    }, options.agent && {\n      agent: options.agent\n    });\n\n    var httpRequestLib = protocol === 'https:' ? https : http;\n    httpRequestLib.request(requestOptions, function (res) {\n      var rawData = '';\n      res.setEncoding('utf8');\n      res.on('data', function (chunk) {\n        rawData += chunk;\n      });\n      res.on('end', function () {\n        if (res.statusCode < 200 || res.statusCode >= 300) {\n          var errorMsg = res.body && (res.body.message || res.body) || res.statusMessage || \"Http Error \".concat(res.statusCode);\n          reject({\n            errorMsg: errorMsg\n          });\n        } else {\n          try {\n            resolve(rawData && JSON.parse(rawData));\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    }).on('error', function (e) {\n      return reject(e);\n    }).end();\n  });\n};","map":null,"metadata":{},"sourceType":"script"}