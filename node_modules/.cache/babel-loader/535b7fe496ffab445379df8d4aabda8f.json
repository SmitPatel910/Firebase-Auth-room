{"ast":null,"code":"\"use strict\"; // Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoginTicket = void 0;\n\nvar LoginTicket = /*#__PURE__*/function () {\n  /**\n   * Create a simple class to extract user ID from an ID Token\n   *\n   * @param {string} env Envelope of the jwt\n   * @param {TokenPayload} pay Payload of the jwt\n   * @constructor\n   */\n  function LoginTicket(env, pay) {\n    _classCallCheck(this, LoginTicket);\n\n    this.envelope = env;\n    this.payload = pay;\n  }\n\n  _createClass(LoginTicket, [{\n    key: \"getEnvelope\",\n    value: function getEnvelope() {\n      return this.envelope;\n    }\n  }, {\n    key: \"getPayload\",\n    value: function getPayload() {\n      return this.payload;\n    }\n    /**\n     * Create a simple class to extract user ID from an ID Token\n     *\n     * @return The user ID\n     */\n\n  }, {\n    key: \"getUserId\",\n    value: function getUserId() {\n      var payload = this.getPayload();\n\n      if (payload && payload.sub) {\n        return payload.sub;\n      }\n\n      return null;\n    }\n    /**\n     * Returns attributes from the login ticket.  This can contain\n     * various information about the user session.\n     *\n     * @return The envelope and payload\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return {\n        envelope: this.getEnvelope(),\n        payload: this.getPayload()\n      };\n    }\n  }]);\n\n  return LoginTicket;\n}();\n\nexports.LoginTicket = LoginTicket;","map":null,"metadata":{},"sourceType":"script"}