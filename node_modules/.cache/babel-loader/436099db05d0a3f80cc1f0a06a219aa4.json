{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Impersonated = void 0;\n\nvar oauth2client_1 = require(\"./oauth2client\");\n\nvar Impersonated = /*#__PURE__*/function (_oauth2client_1$OAuth) {\n  _inherits(Impersonated, _oauth2client_1$OAuth);\n\n  /**\n   * Impersonated service account credentials.\n   *\n   * Create a new access token by impersonating another service account.\n   *\n   * Impersonated Credentials allowing credentials issued to a user or\n   * service account to impersonate another. The source project using\n   * Impersonated Credentials must enable the \"IAMCredentials\" API.\n   * Also, the target service account must grant the orginating principal\n   * the \"Service Account Token Creator\" IAM role.\n   *\n   * @param {object} options - The configuration object.\n   * @param {object} [options.sourceClient] the source credential used as to\n   * acquire the impersonated credentials.\n   * @param {string} [options.targetPrincipal] the service account to\n   * impersonate.\n   * @param {string[]} [options.delegates] the chained list of delegates\n   * required to grant the final access_token. If set, the sequence of\n   * identities must have \"Service Account Token Creator\" capability granted to\n   * the preceding identity. For example, if set to [serviceAccountB,\n   * serviceAccountC], the sourceCredential must have the Token Creator role on\n   * serviceAccountB. serviceAccountB must have the Token Creator on\n   * serviceAccountC. Finally, C must have Token Creator on target_principal.\n   * If left unset, sourceCredential must have that role on targetPrincipal.\n   * @param {string[]} [options.targetScopes] scopes to request during the\n   * authorization grant.\n   * @param {number} [options.lifetime] number of seconds the delegated\n   * credential should be valid for up to 3600 seconds by default, or 43,200\n   * seconds by extending the token's lifetime, see:\n   * https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials#sa-credentials-oauth\n   * @param {string} [options.endpoint] api endpoint override.\n   */\n  function Impersonated() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Impersonated);\n\n    var _a, _b, _c, _d, _e, _f;\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Impersonated).call(this, options));\n    _this.credentials = {\n      expiry_date: 1,\n      refresh_token: 'impersonated-placeholder'\n    };\n    _this.sourceClient = (_a = options.sourceClient) !== null && _a !== void 0 ? _a : new oauth2client_1.OAuth2Client();\n    _this.targetPrincipal = (_b = options.targetPrincipal) !== null && _b !== void 0 ? _b : '';\n    _this.delegates = (_c = options.delegates) !== null && _c !== void 0 ? _c : [];\n    _this.targetScopes = (_d = options.targetScopes) !== null && _d !== void 0 ? _d : [];\n    _this.lifetime = (_e = options.lifetime) !== null && _e !== void 0 ? _e : 3600;\n    _this.endpoint = (_f = options.endpoint) !== null && _f !== void 0 ? _f : 'https://iamcredentials.googleapis.com';\n    return _this;\n  }\n  /**\n   * Refreshes the access token.\n   * @param refreshToken Unused parameter\n   */\n\n\n  _createClass(Impersonated, [{\n    key: \"refreshToken\",\n    value: function () {\n      var _refreshToken2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_refreshToken) {\n        var _a, _b, _c, _d, _e, _f, name, u, body, res, tokenResponse, status, message;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.sourceClient.getAccessToken();\n\n              case 3:\n                name = 'projects/-/serviceAccounts/' + this.targetPrincipal;\n                u = \"\".concat(this.endpoint, \"/v1/\").concat(name, \":generateAccessToken\");\n                body = {\n                  delegates: this.delegates,\n                  scope: this.targetScopes,\n                  lifetime: this.lifetime + 's'\n                };\n                _context.next = 8;\n                return this.sourceClient.request({\n                  url: u,\n                  data: body,\n                  method: 'POST'\n                });\n\n              case 8:\n                res = _context.sent;\n                tokenResponse = res.data;\n                this.credentials.access_token = tokenResponse.accessToken;\n                this.credentials.expiry_date = Date.parse(tokenResponse.expireTime);\n                return _context.abrupt(\"return\", {\n                  tokens: this.credentials,\n                  res: res\n                });\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](0);\n                status = (_c = (_b = (_a = _context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.status;\n                message = (_f = (_e = (_d = _context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.response) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.error) === null || _f === void 0 ? void 0 : _f.message;\n\n                if (!(status && message)) {\n                  _context.next = 24;\n                  break;\n                }\n\n                _context.t0.message = \"\".concat(status, \": unable to impersonate: \").concat(message);\n                throw _context.t0;\n\n              case 24:\n                _context.t0.message = \"unable to impersonate: \".concat(_context.t0);\n                throw _context.t0;\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 15]]);\n      }));\n\n      function refreshToken(_x) {\n        return _refreshToken2.apply(this, arguments);\n      }\n\n      return refreshToken;\n    }()\n  }]);\n\n  return Impersonated;\n}(oauth2client_1.OAuth2Client);\n\nexports.Impersonated = Impersonated;","map":null,"metadata":{},"sourceType":"script"}