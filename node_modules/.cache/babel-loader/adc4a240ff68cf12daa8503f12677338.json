{"ast":null,"code":"/*! firebase-admin v9.11.0 */\n\"use strict\";\n/*!\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Installations = void 0;\n\nvar error_1 = require(\"../utils/error\");\n\nvar installations_request_handler_1 = require(\"./installations-request-handler\");\n\nvar validator = require(\"../utils/validator\");\n/**\n * The `Installations` service for the current app.\n */\n\n\nvar Installations =\n/** @class */\nfunction () {\n  /**\n   * @param app The app for this Installations service.\n   * @constructor\n   */\n  function Installations(app) {\n    if (!validator.isNonNullObject(app) || !('options' in app)) {\n      throw new error_1.FirebaseInstallationsError(error_1.InstallationsClientErrorCode.INVALID_ARGUMENT, 'First argument passed to admin.installations() must be a valid Firebase app instance.');\n    }\n\n    this.app_ = app;\n    this.requestHandler = new installations_request_handler_1.FirebaseInstallationsRequestHandler(app);\n  }\n  /**\n   * Deletes the specified installation ID and the associated data from Firebase.\n   *\n   * @param fid The Firebase installation ID to be deleted.\n   *\n   * @return A promise fulfilled when the installation ID is deleted.\n   */\n\n\n  Installations.prototype.deleteInstallation = function (fid) {\n    return this.requestHandler.deleteInstallation(fid);\n  };\n\n  Object.defineProperty(Installations.prototype, \"app\", {\n    /**\n     * Returns the app associated with this Installations instance.\n     *\n     * @return The app associated with this Installations instance.\n     */\n    get: function get() {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Installations;\n}();\n\nexports.Installations = Installations;","map":null,"metadata":{},"sourceType":"script"}