{"ast":null,"code":"var _regeneratorRuntime = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar retrieveSigningKeys = require('../utils').retrieveSigningKeys;\n/**\n * Uses getKeysInterceptor to allow users to retrieve keys from a file,\n * external cache, or provided object before falling back to the jwksUri endpoint\n */\n\n\nfunction getKeysInterceptor(client, _ref) {\n  var getKeysInterceptor = _ref.getKeysInterceptor;\n  var getSigningKey = client.getSigningKey.bind(client);\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(kid) {\n      var keys, signingKeys, key;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getKeysInterceptor();\n\n            case 2:\n              keys = _context.sent;\n\n              if (keys && keys.length) {\n                signingKeys = retrieveSigningKeys(keys);\n              }\n\n              if (!(signingKeys && signingKeys.length)) {\n                _context.next = 8;\n                break;\n              }\n\n              key = signingKeys.find(function (k) {\n                return !kid || k.kid === kid;\n              });\n\n              if (!key) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", key);\n\n            case 8:\n              return _context.abrupt(\"return\", getSigningKey(kid));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\n\nmodule.exports.default = getKeysInterceptor;","map":null,"metadata":{},"sourceType":"script"}