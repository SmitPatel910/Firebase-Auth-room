{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OngoingCallPromise = exports.OngoingCall = void 0;\n\nvar status_1 = require(\"./status\");\n\nvar googleError_1 = require(\"./googleError\");\n\nvar OngoingCall = /*#__PURE__*/function () {\n  /**\n   * OngoingCall manages callback, API calls, and cancellation\n   * of the API calls.\n   * @param {APICallback=} callback\n   *   The callback to be called asynchronously when the API call\n   *   finishes.\n   * @constructor\n   * @property {APICallback} callback\n   *   The callback function to be called.\n   * @private\n   */\n  function OngoingCall(callback) {\n    _classCallCheck(this, OngoingCall);\n\n    this.callback = callback;\n    this.completed = false;\n  }\n  /**\n   * Cancels the ongoing promise.\n   */\n\n\n  _createClass(OngoingCall, [{\n    key: \"cancel\",\n    value: function cancel() {\n      if (this.completed) {\n        return;\n      }\n\n      this.completed = true;\n\n      if (this.cancelFunc) {\n        this.cancelFunc();\n      } else {\n        var error = new googleError_1.GoogleError('cancelled');\n        error.code = status_1.Status.CANCELLED;\n        this.callback(error);\n      }\n    }\n    /**\n     * Call calls the specified function. Result will be used to fulfill\n     * the promise.\n     *\n     * @param {SimpleCallbackFunction} func\n     *   A function for an API call.\n     * @param {Object} argument\n     *   A request object.\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(func, argument) {\n      var _this = this;\n\n      if (this.completed) {\n        return;\n      }\n\n      var canceller = func(argument, function (err, response, next, rawResponse) {\n        _this.completed = true;\n        setImmediate(_this.callback, err, response, next, rawResponse);\n      });\n\n      this.cancelFunc = function () {\n        return canceller.cancel();\n      };\n    }\n  }]);\n\n  return OngoingCall;\n}();\n\nexports.OngoingCall = OngoingCall;\n\nvar OngoingCallPromise = /*#__PURE__*/function (_OngoingCall) {\n  _inherits(OngoingCallPromise, _OngoingCall);\n\n  /**\n   * GaxPromise is GRPCCallbackWrapper, but it holds a promise when\n   * the API call finishes.\n   * @constructor\n   * @private\n   */\n  function OngoingCallPromise() {\n    var _this2;\n\n    _classCallCheck(this, OngoingCallPromise);\n\n    var resolveCallback;\n    var rejectCallback;\n\n    var callback = function callback(err, response, next, rawResponse) {\n      if (err) {\n        var decoder = new googleError_1.GoogleErrorDecoder();\n\n        try {\n          var decodedErr = decoder.decodeMetadata(err);\n          rejectCallback(decodedErr);\n        } catch (decodeErr) {\n          // Ignore the decoder error now, and return back original error.\n          rejectCallback(err);\n        }\n      } else if (response !== undefined) {\n        resolveCallback([response, next || null, rawResponse || null]);\n      } else {\n        throw new googleError_1.GoogleError('Neither error nor response are defined');\n      }\n    };\n\n    var promise = new Promise(function (resolve, reject) {\n      resolveCallback = resolve;\n      rejectCallback = reject;\n    });\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(OngoingCallPromise).call(this, callback));\n    _this2.promise = promise;\n\n    _this2.promise.cancel = function () {\n      _this2.cancel();\n    };\n\n    return _this2;\n  }\n\n  return OngoingCallPromise;\n}(OngoingCall);\n\nexports.OngoingCallPromise = OngoingCallPromise;","map":null,"metadata":{},"sourceType":"script"}