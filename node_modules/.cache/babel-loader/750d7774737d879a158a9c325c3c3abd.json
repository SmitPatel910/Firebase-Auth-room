{"ast":null,"code":"var _require = require('../../help/runtime_support'),\n    improvedDH = _require.improvedDH;\n\nvar _require2 = require('../../registry'),\n    KEYLENGTHS = _require2.KEYLENGTHS;\n\nvar _require3 = require('../../jwk/generate'),\n    generateSync = _require3.generateSync;\n\nvar derive = require('./derive');\n\nvar wrapKey = function wrapKey(key, payload, _ref) {\n  var enc = _ref.enc;\n  var epk = generateSync(key.kty, key.crv);\n  var derivedKey = derive(enc, KEYLENGTHS.get(enc), epk, key);\n  return {\n    wrapped: derivedKey,\n    header: {\n      epk: {\n        kty: key.kty,\n        crv: key.crv,\n        x: epk.x,\n        y: epk.y\n      }\n    }\n  };\n};\n\nvar unwrapKey = function unwrapKey(key, payload, header) {\n  var enc = header.enc,\n      epk = header.epk;\n  return derive(enc, KEYLENGTHS.get(enc), key, epk, header);\n};\n\nmodule.exports = function (JWA, JWK) {\n  JWA.keyManagementEncrypt.set('ECDH-ES', wrapKey);\n  JWA.keyManagementDecrypt.set('ECDH-ES', unwrapKey);\n\n  JWK.EC.deriveKey['ECDH-ES'] = function (key) {\n    return (key.use === 'enc' || key.use === undefined) && key.crv !== 'secp256k1';\n  };\n\n  if (improvedDH) {\n    JWK.OKP.deriveKey['ECDH-ES'] = function (key) {\n      return (key.use === 'enc' || key.use === undefined) && key.keyObject.asymmetricKeyType.startsWith('x');\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"script"}