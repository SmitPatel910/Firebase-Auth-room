{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Smit\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { firebase, db } from \"../../base\";\nimport { useState } from 'react';\n\nconst Read = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        info = _useState2[0],\n        setInfo = _useState2[1];\n\n  window.addEventListener('load', () => {\n    Fetchdata();\n  });\n\n  const Fetchdata = () => {\n    db.collection(\"user\").get().then(querySnapshot => {\n      // Loop through the data and store\n      // it in array to display\n      querySnapshot.forEach(element => {\n        var data = element.data();\n        setInfo(arr => [...arr, data]);\n      });\n    });\n  };\n};\n\nexport default Read;","map":{"version":3,"sources":["C:/Users/Smit/Desktop/RTC-React/src/pages/Rooms/Read.jsx"],"names":["firebase","db","useState","Read","info","setInfo","window","addEventListener","Fetchdata","collection","get","then","querySnapshot","forEach","element","data","arr"],"mappings":";AAAA,SAAQA,QAAR,EAAiBC,EAAjB,QAA0B,YAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACUD,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,QACRE,IADQ;AAAA,QACDC,OADC;;AAEfC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,MAAM;AAClCC,IAAAA,SAAS;AACV,GAFH;;AAKJ,QAAMA,SAAS,GAAG,MAAK;AACnBP,IAAAA,EAAE,CAACQ,UAAH,CAAc,MAAd,EAAsBC,GAAtB,GAA4BC,IAA5B,CAAkCC,aAAD,IAAmB;AAEhD;AACA;AACAA,MAAAA,aAAa,CAACC,OAAd,CAAsBC,OAAO,IAAI;AAC7B,YAAIC,IAAI,GAAGD,OAAO,CAACC,IAAR,EAAX;AACAV,QAAAA,OAAO,CAACW,GAAG,IAAI,CAAC,GAAGA,GAAJ,EAAUD,IAAV,CAAR,CAAP;AACH,OAHD;AAIH,KARD;AASH,GAVD;AAYC,CAnBD;;AAoBA,eAAeZ,IAAf","sourcesContent":["import {firebase,db} from \"../../base\";\r\nimport { useState } from 'react';\r\n\r\nconst Read = () => {\r\n    const [info , setInfo] = useState([]);\r\n    window.addEventListener('load', () => {\r\n        Fetchdata();\r\n      });\r\n\r\n\r\nconst Fetchdata = () =>{\r\n    db.collection(\"user\").get().then((querySnapshot) => {\r\n         \r\n        // Loop through the data and store\r\n        // it in array to display\r\n        querySnapshot.forEach(element => {\r\n            var data = element.data();\r\n            setInfo(arr => [...arr , data]);      \r\n        });\r\n    })\r\n}\r\n\r\n}\r\nexport default Read;"]},"metadata":{},"sourceType":"module"}