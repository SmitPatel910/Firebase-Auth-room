{"ast":null,"code":"\"use strict\"; // Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * @module common/service\n */\n\nvar arrify = require(\"arrify\");\n\nvar extend = require(\"extend\");\n\nvar util_1 = require(\"./util\");\n\nvar PROJECT_ID_TOKEN = '{{projectId}}';\n\nvar Service = /*#__PURE__*/function () {\n  /**\n   * Service is a base class, meant to be inherited from by a \"service,\" like\n   * BigQuery or Storage.\n   *\n   * This handles making authenticated requests by exposing a `makeReq_`\n   * function.\n   *\n   * @constructor\n   * @alias module:common/service\n   *\n   * @param {object} config - Configuration object.\n   * @param {string} config.baseUrl - The base URL to make API requests to.\n   * @param {string[]} config.scopes - The scopes required for the request.\n   * @param {object=} options - [Configuration object](#/docs).\n   */\n  function Service(config) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Service);\n\n    this.baseUrl = config.baseUrl;\n    this.apiEndpoint = config.apiEndpoint;\n    this.timeout = options.timeout;\n    this.globalInterceptors = arrify(options.interceptors_);\n    this.interceptors = [];\n    this.packageJson = config.packageJson;\n    this.projectId = options.projectId || PROJECT_ID_TOKEN;\n    this.projectIdRequired = config.projectIdRequired !== false;\n    this.providedUserAgent = options.userAgent;\n    var reqCfg = extend({}, config, {\n      projectIdRequired: this.projectIdRequired,\n      projectId: this.projectId,\n      authClient: options.authClient,\n      credentials: options.credentials,\n      keyFile: options.keyFilename,\n      email: options.email,\n      token: options.token\n    });\n    this.makeAuthenticatedRequest = util_1.util.makeAuthenticatedRequestFactory(reqCfg);\n    this.authClient = this.makeAuthenticatedRequest.authClient;\n    this.getCredentials = this.makeAuthenticatedRequest.getCredentials;\n    var isCloudFunctionEnv = !!process.env.FUNCTION_NAME;\n\n    if (isCloudFunctionEnv) {\n      this.interceptors.push({\n        request: function request(reqOpts) {\n          reqOpts.forever = false;\n          return reqOpts;\n        }\n      });\n    }\n  }\n  /**\n   * Return the user's custom request interceptors.\n   */\n\n\n  _createClass(Service, [{\n    key: \"getRequestInterceptors\",\n    value: function getRequestInterceptors() {\n      // Interceptors should be returned in the order they were assigned.\n      return [].slice.call(this.globalInterceptors).concat(this.interceptors).filter(function (interceptor) {\n        return typeof interceptor.request === 'function';\n      }).map(function (interceptor) {\n        return interceptor.request;\n      });\n    }\n  }, {\n    key: \"getProjectId\",\n    value: function getProjectId(callback) {\n      if (!callback) {\n        return this.getProjectIdAsync();\n      }\n\n      this.getProjectIdAsync().then(function (p) {\n        return callback(null, p);\n      }, callback);\n    }\n  }, {\n    key: \"getProjectIdAsync\",\n    value: function () {\n      var _getProjectIdAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var projectId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.authClient.getProjectId();\n\n              case 2:\n                projectId = _context.sent;\n\n                if (this.projectId === PROJECT_ID_TOKEN && projectId) {\n                  this.projectId = projectId;\n                }\n\n                return _context.abrupt(\"return\", this.projectId);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getProjectIdAsync() {\n        return _getProjectIdAsync.apply(this, arguments);\n      }\n\n      return getProjectIdAsync;\n    }()\n  }, {\n    key: \"request_\",\n    value: function request_(reqOpts, callback) {\n      reqOpts = extend(true, {}, reqOpts, {\n        timeout: this.timeout\n      });\n      var isAbsoluteUrl = reqOpts.uri.indexOf('http') === 0;\n      var uriComponents = [this.baseUrl];\n\n      if (this.projectIdRequired) {\n        uriComponents.push('projects');\n        uriComponents.push(this.projectId);\n      }\n\n      uriComponents.push(reqOpts.uri);\n\n      if (isAbsoluteUrl) {\n        uriComponents.splice(0, uriComponents.indexOf(reqOpts.uri));\n      }\n\n      reqOpts.uri = uriComponents.map(function (uriComponent) {\n        var trimSlashesRegex = /^\\/*|\\/*$/g;\n        return uriComponent.replace(trimSlashesRegex, '');\n      }).join('/') // Some URIs have colon separators.\n      // Bad: https://.../projects/:list\n      // Good: https://.../projects:list\n      .replace(/\\/:/g, ':');\n      var requestInterceptors = this.getRequestInterceptors();\n      arrify(reqOpts.interceptors_).forEach(function (interceptor) {\n        if (typeof interceptor.request === 'function') {\n          requestInterceptors.push(interceptor.request);\n        }\n      });\n      requestInterceptors.forEach(function (requestInterceptor) {\n        reqOpts = requestInterceptor(reqOpts);\n      });\n      delete reqOpts.interceptors_;\n      var pkg = this.packageJson;\n      var userAgent = util_1.util.getUserAgentFromPackageJson(pkg);\n\n      if (this.providedUserAgent) {\n        userAgent = \"\".concat(this.providedUserAgent, \" \").concat(userAgent);\n      }\n\n      reqOpts.headers = extend({}, reqOpts.headers, {\n        'User-Agent': userAgent,\n        'x-goog-api-client': \"gl-node/\".concat(process.versions.node, \" gccl/\").concat(pkg.version)\n      });\n\n      if (reqOpts.shouldReturnStream) {\n        return this.makeAuthenticatedRequest(reqOpts);\n      } else {\n        this.makeAuthenticatedRequest(reqOpts, callback);\n      }\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     * @param {function} callback - The callback function passed to `request`.\n     */\n\n  }, {\n    key: \"request\",\n    value: function request(reqOpts, callback) {\n      Service.prototype.request_.call(this, reqOpts, callback);\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     */\n\n  }, {\n    key: \"requestStream\",\n    value: function requestStream(reqOpts) {\n      var opts = extend(true, reqOpts, {\n        shouldReturnStream: true\n      });\n      return Service.prototype.request_.call(this, opts);\n    }\n  }]);\n\n  return Service;\n}();\n\nexports.Service = Service;","map":null,"metadata":{},"sourceType":"script"}