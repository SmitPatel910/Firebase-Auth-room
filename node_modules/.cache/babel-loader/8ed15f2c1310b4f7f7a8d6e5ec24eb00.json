{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\n\nvar _createClass = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _wrapNativeSuper = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapNativeSuper\");\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GoogleToken = void 0;\n\nvar fs = require(\"fs\");\n\nvar gaxios_1 = require(\"gaxios\");\n\nvar jws = require(\"jws\");\n\nvar path = require(\"path\");\n\nvar util_1 = require(\"util\");\n\nvar readFile = fs.readFile ? util_1.promisify(fs.readFile) : /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nvar GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nvar GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\n\nvar ErrorWithCode = /*#__PURE__*/function (_Error) {\n  _inherits(ErrorWithCode, _Error);\n\n  function ErrorWithCode(message, code) {\n    var _this;\n\n    _classCallCheck(this, ErrorWithCode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ErrorWithCode).call(this, message));\n    _this.code = code;\n    return _this;\n  }\n\n  return ErrorWithCode;\n}(_wrapNativeSuper(Error));\n\nvar getPem;\n\nvar GoogleToken = /*#__PURE__*/function () {\n  /**\n   * Create a GoogleToken.\n   *\n   * @param options  Configuration object.\n   */\n  function GoogleToken(options) {\n    _classCallCheck(this, GoogleToken);\n\n    this.configure(options);\n  }\n\n  _createClass(GoogleToken, [{\n    key: \"hasExpired\",\n\n    /**\n     * Returns whether the token has expired.\n     *\n     * @return true if the token has expired, false otherwise.\n     */\n    value: function hasExpired() {\n      var now = new Date().getTime();\n\n      if (this.rawToken && this.expiresAt) {\n        return now >= this.expiresAt;\n      } else {\n        return true;\n      }\n    }\n    /**\n     * Returns whether the token will expire within eagerRefreshThresholdMillis\n     *\n     * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n     */\n\n  }, {\n    key: \"isTokenExpiring\",\n    value: function isTokenExpiring() {\n      var _a;\n\n      var now = new Date().getTime();\n      var eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n\n      if (this.rawToken && this.expiresAt) {\n        return this.expiresAt <= now + eagerRefreshThresholdMillis;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken(callback) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof callback === 'object') {\n        opts = callback;\n        callback = undefined;\n      }\n\n      opts = Object.assign({\n        forceRefresh: false\n      }, opts);\n\n      if (callback) {\n        var cb = callback;\n        this.getTokenAsync(opts).then(function (t) {\n          return cb(null, t);\n        }, callback);\n        return;\n      }\n\n      return this.getTokenAsync(opts);\n    }\n    /**\n     * Given a keyFile, extract the key and client email if available\n     * @param keyFile Path to a json, pem, or p12 file that contains the key.\n     * @returns an object with privateKey and clientEmail properties\n     */\n\n  }, {\n    key: \"getCredentials\",\n    value: function () {\n      var _getCredentials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(keyFile) {\n        var ext, key, body, privateKey, clientEmail, _privateKey, _privateKey2;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                ext = path.extname(keyFile);\n                _context2.t0 = ext;\n                _context2.next = _context2.t0 === '.json' ? 4 : _context2.t0 === '.der' ? 13 : _context2.t0 === '.crt' ? 13 : _context2.t0 === '.pem' ? 13 : _context2.t0 === '.p12' ? 17 : _context2.t0 === '.pfx' ? 17 : 25;\n                break;\n\n              case 4:\n                _context2.next = 6;\n                return readFile(keyFile, 'utf8');\n\n              case 6:\n                key = _context2.sent;\n                body = JSON.parse(key);\n                privateKey = body.private_key;\n                clientEmail = body.client_email;\n\n                if (!(!privateKey || !clientEmail)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n\n              case 12:\n                return _context2.abrupt(\"return\", {\n                  privateKey: privateKey,\n                  clientEmail: clientEmail\n                });\n\n              case 13:\n                _context2.next = 15;\n                return readFile(keyFile, 'utf8');\n\n              case 15:\n                _privateKey = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  privateKey: _privateKey\n                });\n\n              case 17:\n                if (getPem) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                _context2.next = 20;\n                return Promise.resolve().then(function () {\n                  return require('google-p12-pem');\n                });\n\n              case 20:\n                getPem = _context2.sent.getPem;\n\n              case 21:\n                _context2.next = 23;\n                return getPem(keyFile);\n\n              case 23:\n                _privateKey2 = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  privateKey: _privateKey2\n                });\n\n              case 25:\n                throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' + 'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n\n              case 26:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getCredentials(_x) {\n        return _getCredentials.apply(this, arguments);\n      }\n\n      return getCredentials;\n    }()\n  }, {\n    key: \"getTokenAsync\",\n    value: function () {\n      var _getTokenAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(opts) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.inFlightRequest && !opts.forceRefresh)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.inFlightRequest);\n\n              case 2:\n                _context3.prev = 2;\n                _context3.next = 5;\n                return this.inFlightRequest = this.getTokenAsyncInner(opts);\n\n              case 5:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 6:\n                _context3.prev = 6;\n                this.inFlightRequest = undefined;\n                return _context3.finish(6);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2,, 6, 9]]);\n      }));\n\n      function getTokenAsync(_x2) {\n        return _getTokenAsync.apply(this, arguments);\n      }\n\n      return getTokenAsync;\n    }()\n  }, {\n    key: \"getTokenAsyncInner\",\n    value: function () {\n      var _getTokenAsyncInner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(opts) {\n        var creds;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.isTokenExpiring() === false && opts.forceRefresh === false)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", Promise.resolve(this.rawToken));\n\n              case 2:\n                if (!(!this.key && !this.keyFile)) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw new Error('No key or keyFile set.');\n\n              case 4:\n                if (!(!this.key && this.keyFile)) {\n                  _context4.next = 11;\n                  break;\n                }\n\n                _context4.next = 7;\n                return this.getCredentials(this.keyFile);\n\n              case 7:\n                creds = _context4.sent;\n                this.key = creds.privateKey;\n                this.iss = creds.clientEmail || this.iss;\n\n                if (!creds.clientEmail) {\n                  this.ensureEmail();\n                }\n\n              case 11:\n                return _context4.abrupt(\"return\", this.requestToken());\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getTokenAsyncInner(_x3) {\n        return _getTokenAsyncInner.apply(this, arguments);\n      }\n\n      return getTokenAsyncInner;\n    }()\n  }, {\n    key: \"ensureEmail\",\n    value: function ensureEmail() {\n      if (!this.iss) {\n        throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n      }\n    }\n  }, {\n    key: \"revokeToken\",\n    value: function revokeToken(callback) {\n      if (callback) {\n        this.revokeTokenAsync().then(function () {\n          return callback();\n        }, callback);\n        return;\n      }\n\n      return this.revokeTokenAsync();\n    }\n  }, {\n    key: \"revokeTokenAsync\",\n    value: function () {\n      var _revokeTokenAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var url;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this.accessToken) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw new Error('No token to revoke.');\n\n              case 2:\n                url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n                _context5.next = 5;\n                return gaxios_1.request({\n                  url: url\n                });\n\n              case 5:\n                this.configure({\n                  email: this.iss,\n                  sub: this.sub,\n                  key: this.key,\n                  keyFile: this.keyFile,\n                  scope: this.scope,\n                  additionalClaims: this.additionalClaims\n                });\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function revokeTokenAsync() {\n        return _revokeTokenAsync.apply(this, arguments);\n      }\n\n      return revokeTokenAsync;\n    }()\n    /**\n     * Configure the GoogleToken for re-use.\n     * @param  {object} options Configuration object.\n     */\n\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.keyFile = options.keyFile;\n      this.key = options.key;\n      this.rawToken = undefined;\n      this.iss = options.email || options.iss;\n      this.sub = options.sub;\n      this.additionalClaims = options.additionalClaims;\n\n      if (typeof options.scope === 'object') {\n        this.scope = options.scope.join(' ');\n      } else {\n        this.scope = options.scope;\n      }\n\n      this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n    }\n    /**\n     * Request the token from Google.\n     */\n\n  }, {\n    key: \"requestToken\",\n    value: function () {\n      var _requestToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var iat, additionalClaims, payload, signedJWT, r, body, desc;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                iat = Math.floor(new Date().getTime() / 1000);\n                additionalClaims = this.additionalClaims || {};\n                payload = Object.assign({\n                  iss: this.iss,\n                  scope: this.scope,\n                  aud: GOOGLE_TOKEN_URL,\n                  exp: iat + 3600,\n                  iat: iat,\n                  sub: this.sub\n                }, additionalClaims);\n                signedJWT = jws.sign({\n                  header: {\n                    alg: 'RS256'\n                  },\n                  payload: payload,\n                  secret: this.key\n                });\n                _context6.prev = 4;\n                _context6.next = 7;\n                return gaxios_1.request({\n                  method: 'POST',\n                  url: GOOGLE_TOKEN_URL,\n                  data: {\n                    grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                    assertion: signedJWT\n                  },\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                  },\n                  responseType: 'json'\n                });\n\n              case 7:\n                r = _context6.sent;\n                this.rawToken = r.data;\n                this.expiresAt = r.data.expires_in === null || r.data.expires_in === undefined ? undefined : (iat + r.data.expires_in) * 1000;\n                return _context6.abrupt(\"return\", this.rawToken);\n\n              case 13:\n                _context6.prev = 13;\n                _context6.t0 = _context6[\"catch\"](4);\n                this.rawToken = undefined;\n                this.tokenExpires = undefined;\n                body = _context6.t0.response && _context6.t0.response.data ? _context6.t0.response.data : {};\n\n                if (body.error) {\n                  desc = body.error_description ? \": \".concat(body.error_description) : '';\n                  _context6.t0.message = \"\".concat(body.error).concat(desc);\n                }\n\n                throw _context6.t0;\n\n              case 20:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[4, 13]]);\n      }));\n\n      function requestToken() {\n        return _requestToken.apply(this, arguments);\n      }\n\n      return requestToken;\n    }()\n  }, {\n    key: \"accessToken\",\n    get: function get() {\n      return this.rawToken ? this.rawToken.access_token : undefined;\n    }\n  }, {\n    key: \"idToken\",\n    get: function get() {\n      return this.rawToken ? this.rawToken.id_token : undefined;\n    }\n  }, {\n    key: \"tokenType\",\n    get: function get() {\n      return this.rawToken ? this.rawToken.token_type : undefined;\n    }\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      return this.rawToken ? this.rawToken.refresh_token : undefined;\n    }\n  }]);\n\n  return GoogleToken;\n}();\n\nexports.GoogleToken = GoogleToken;","map":null,"metadata":{},"sourceType":"script"}