{"ast":null,"code":"var _regeneratorRuntime = require(\"C:\\\\Users\\\\Smit\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Smit\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Smit\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar Node = /// value;\n/// next;\nfunction Node(value) {\n  \"use strict\";\n\n  _classCallCheck(this, Node);\n\n  this.value = value; // TODO: Remove this when targeting Node.js 12.\n\n  this.next = undefined;\n};\n\nvar Queue = /*#__PURE__*/function () {\n  \"use strict\";\n\n  // TODO: Use private class fields when targeting Node.js 12.\n  // #_head;\n  // #_tail;\n  // #_size;\n  function Queue() {\n    _classCallCheck(this, Queue);\n\n    this.clear();\n  }\n\n  _createClass(Queue, [{\n    key: \"enqueue\",\n    value: function enqueue(value) {\n      var node = new Node(value);\n\n      if (this._head) {\n        this._tail.next = node;\n        this._tail = node;\n      } else {\n        this._head = node;\n        this._tail = node;\n      }\n\n      this._size++;\n    }\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      var current = this._head;\n\n      if (!current) {\n        return;\n      }\n\n      this._head = this._head.next;\n      this._size--;\n      return current.value;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._head = undefined;\n      this._tail = undefined;\n      this._size = 0;\n    }\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n      var current;\n      return _regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              current = this._head;\n\n            case 1:\n              if (!current) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return current.value;\n\n            case 4:\n              current = current.next;\n              _context.next = 1;\n              break;\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._size;\n    }\n  }]);\n\n  return Queue;\n}();\n\nmodule.exports = Queue;","map":null,"metadata":{},"sourceType":"script"}