{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _wrapNativeSuper = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapNativeSuper\");\n\nvar _require = require('buffer'),\n    BufferConstants = _require.constants;\n\nvar stream = require('stream');\n\nvar _require2 = require('util'),\n    promisify = _require2.promisify;\n\nvar bufferStream = require('./buffer-stream');\n\nvar streamPipelinePromisified = promisify(stream.pipeline);\n\nvar MaxBufferError = /*#__PURE__*/function (_Error) {\n  _inherits(MaxBufferError, _Error);\n\n  function MaxBufferError() {\n    var _this;\n\n    _classCallCheck(this, MaxBufferError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MaxBufferError).call(this, 'maxBuffer exceeded'));\n    _this.name = 'MaxBufferError';\n    return _this;\n  }\n\n  return MaxBufferError;\n}(_wrapNativeSuper(Error));\n\nfunction getStream(_x, _x2) {\n  return _getStream.apply(this, arguments);\n}\n\nfunction _getStream() {\n  _getStream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(inputStream, options) {\n    var _options, maxBuffer, stream;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (inputStream) {\n              _context2.next = 2;\n              break;\n            }\n\n            throw new Error('Expected a stream');\n\n          case 2:\n            options = _objectSpread({\n              maxBuffer: Infinity\n            }, options);\n            _options = options, maxBuffer = _options.maxBuffer;\n            stream = bufferStream(options);\n            _context2.next = 7;\n            return new Promise(function (resolve, reject) {\n              var rejectPromise = function rejectPromise(error) {\n                // Don't retrieve an oversized buffer.\n                if (error && stream.getBufferedLength() <= BufferConstants.MAX_LENGTH) {\n                  error.bufferedData = stream.getBufferedValue();\n                }\n\n                reject(error);\n              };\n\n              _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        _context.next = 3;\n                        return streamPipelinePromisified(inputStream, stream);\n\n                      case 3:\n                        resolve();\n                        _context.next = 9;\n                        break;\n\n                      case 6:\n                        _context.prev = 6;\n                        _context.t0 = _context[\"catch\"](0);\n                        rejectPromise(_context.t0);\n\n                      case 9:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 6]]);\n              }))();\n\n              stream.on('data', function () {\n                if (stream.getBufferedLength() > maxBuffer) {\n                  rejectPromise(new MaxBufferError());\n                }\n              });\n            });\n\n          case 7:\n            return _context2.abrupt(\"return\", stream.getBufferedValue());\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getStream.apply(this, arguments);\n}\n\nmodule.exports = getStream;\n\nmodule.exports.buffer = function (stream, options) {\n  return getStream(stream, _objectSpread({}, options, {\n    encoding: 'buffer'\n  }));\n};\n\nmodule.exports.array = function (stream, options) {\n  return getStream(stream, _objectSpread({}, options, {\n    array: true\n  }));\n};\n\nmodule.exports.MaxBufferError = MaxBufferError;","map":null,"metadata":{},"sourceType":"script"}