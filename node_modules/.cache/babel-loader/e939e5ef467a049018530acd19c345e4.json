{"ast":null,"code":"var _regeneratorRuntime = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar debug = require('debug');\n\nvar _require = require('limiter'),\n    RateLimiter = _require.RateLimiter;\n\nvar JwksRateLimitError = require('../errors/JwksRateLimitError');\n\nfunction rateLimtWrapper(client, _ref) {\n  var _ref$jwksRequestsPerM = _ref.jwksRequestsPerMinute,\n      jwksRequestsPerMinute = _ref$jwksRequestsPerM === void 0 ? 10 : _ref$jwksRequestsPerM;\n  var logger = debug('jwks');\n  var getSigningKey = client.getSigningKey.bind(client);\n  var limiter = new RateLimiter(jwksRequestsPerMinute, 'minute', true);\n  logger(\"Configured rate limiting to JWKS endpoint at \".concat(jwksRequestsPerMinute, \"/minute\"));\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(kid) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return new Promise(function (resolve, reject) {\n                limiter.removeTokens(1, /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(err, remaining) {\n                    var key;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (err) {\n                              reject(err);\n                            }\n\n                            logger('Requests to the JWKS endpoint available for the next minute:', remaining);\n\n                            if (!(remaining < 0)) {\n                              _context.next = 7;\n                              break;\n                            }\n\n                            logger('Too many requests to the JWKS endpoint');\n                            reject(new JwksRateLimitError('Too many requests to the JWKS endpoint'));\n                            _context.next = 17;\n                            break;\n\n                          case 7:\n                            _context.prev = 7;\n                            _context.next = 10;\n                            return getSigningKey(kid);\n\n                          case 10:\n                            key = _context.sent;\n                            resolve(key);\n                            _context.next = 17;\n                            break;\n\n                          case 14:\n                            _context.prev = 14;\n                            _context.t0 = _context[\"catch\"](7);\n                            reject(_context.t0);\n\n                          case 17:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, null, [[7, 14]]);\n                  }));\n\n                  return function (_x2, _x3) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              });\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\n\nmodule.exports.default = rateLimtWrapper;","map":null,"metadata":{},"sourceType":"script"}