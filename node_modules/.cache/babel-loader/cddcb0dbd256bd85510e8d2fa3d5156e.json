{"ast":null,"code":"var _require = require('../errors'),\n    ArgumentError = _require.ArgumentError;\n\nvar _require2 = require('../JwksClient'),\n    JwksClient = _require2.JwksClient;\n\nvar supportedAlg = require('./config');\n\nmodule.exports.koaJwtSecret = function () {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (!options.jwksUri) {\n    throw new ArgumentError('No JWKS provided. Please provide a jwksUri');\n  }\n\n  var client = new JwksClient(options);\n  return function secretProvider() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        alg = _ref.alg,\n        kid = _ref.kid;\n\n    return new Promise(function (resolve, reject) {\n      if (!supportedAlg.includes(alg)) {\n        return reject(new Error('Missing / invalid token algorithm'));\n      }\n\n      client.getSigningKey(kid).then(function (key) {\n        resolve(key.publicKey || key.rsaPublicKey);\n      }).catch(function (err) {\n        if (options.handleSigningKeyError) {\n          return options.handleSigningKeyError(err).then(reject);\n        }\n\n        return reject(err);\n      });\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"script"}