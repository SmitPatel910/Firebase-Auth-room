{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\n\nvar _require = require('stream'),\n    PassThroughStream = _require.PassThrough;\n\nmodule.exports = function (options) {\n  options = _objectSpread({}, options);\n  var _options = options,\n      array = _options.array;\n  var _options2 = options,\n      encoding = _options2.encoding;\n  var isBuffer = encoding === 'buffer';\n  var objectMode = false;\n\n  if (array) {\n    objectMode = !(encoding || isBuffer);\n  } else {\n    encoding = encoding || 'utf8';\n  }\n\n  if (isBuffer) {\n    encoding = null;\n  }\n\n  var stream = new PassThroughStream({\n    objectMode: objectMode\n  });\n\n  if (encoding) {\n    stream.setEncoding(encoding);\n  }\n\n  var length = 0;\n  var chunks = [];\n  stream.on('data', function (chunk) {\n    chunks.push(chunk);\n\n    if (objectMode) {\n      length = chunks.length;\n    } else {\n      length += chunk.length;\n    }\n  });\n\n  stream.getBufferedValue = function () {\n    if (array) {\n      return chunks;\n    }\n\n    return isBuffer ? Buffer.concat(chunks, length) : chunks.join('');\n  };\n\n  stream.getBufferedLength = function () {\n    return length;\n  };\n\n  return stream;\n};","map":null,"metadata":{},"sourceType":"script"}