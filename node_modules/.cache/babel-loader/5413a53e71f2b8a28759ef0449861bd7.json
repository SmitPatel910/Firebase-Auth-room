{"ast":null,"code":"\"use strict\"; // Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapperFromProto3JSON = exports.wrapperToProto3JSON = void 0;\n\nvar assert = require(\"assert\");\n\nvar bytes_1 = require(\"./bytes\");\n\nfunction wrapperToProto3JSON(obj) {\n  if (!Object.prototype.hasOwnProperty.call(obj, 'value')) {\n    return null;\n  }\n\n  if (Buffer.isBuffer(obj.value) || obj.value instanceof Uint8Array) {\n    return bytes_1.bytesToProto3JSON(obj.value);\n  }\n\n  if (typeof obj.value === 'object') {\n    assert(obj.value.constructor.name === 'Long', \"wrapperToProto3JSON: expected to see a number, a string, a boolean, or a Long, but got \".concat(obj.value));\n    return obj.value.toString();\n  }\n\n  return obj.value;\n}\n\nexports.wrapperToProto3JSON = wrapperToProto3JSON;\n\nfunction wrapperFromProto3JSON(typeName, json) {\n  if (json === null) {\n    return {\n      value: null\n    };\n  }\n\n  if (typeName === '.google.protobuf.BytesValue') {\n    if (typeof json !== 'string') {\n      throw new Error(\"numberWrapperFromProto3JSON: expected to get a string for google.protobuf.BytesValue but got \".concat(typeof json));\n    }\n\n    return {\n      value: bytes_1.bytesFromProto3JSON(json)\n    };\n  }\n\n  return {\n    value: json\n  };\n}\n\nexports.wrapperFromProto3JSON = wrapperFromProto3JSON;","map":null,"metadata":{},"sourceType":"script"}