{"ast":null,"code":"var _regeneratorRuntime = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _assertThisInitialized = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _toConsumableArray = require(\"C:\\\\Users\\\\Smit\\\\OneDrive\\\\Desktop\\\\RTC-React\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\nvar _require = require('crypto'),\n    generateKeyPairSync = _require.generateKeyPairSync,\n    async = _require.generateKeyPair;\n\nvar _require2 = require('util'),\n    promisify = _require2.promisify;\n\nvar _require3 = require('../../help/consts'),\n    THUMBPRINT_MATERIAL = _require3.THUMBPRINT_MATERIAL,\n    JWK_MEMBERS = _require3.JWK_MEMBERS,\n    PUBLIC_MEMBERS = _require3.PUBLIC_MEMBERS,\n    PRIVATE_MEMBERS = _require3.PRIVATE_MEMBERS,\n    KEY_MANAGEMENT_DECRYPT = _require3.KEY_MANAGEMENT_DECRYPT,\n    KEY_MANAGEMENT_ENCRYPT = _require3.KEY_MANAGEMENT_ENCRYPT;\n\nvar _require4 = require('../../help/runtime_support'),\n    keyObjectSupported = _require4.keyObjectSupported;\n\nvar _require5 = require('../../help/key_object'),\n    createPublicKey = _require5.createPublicKey,\n    createPrivateKey = _require5.createPrivateKey;\n\nvar Key = require('./base');\n\nvar generateKeyPair = promisify(async);\nvar RSA_PUBLIC = new Set(['e', 'n']);\nObject.freeze(RSA_PUBLIC);\nvar RSA_PRIVATE = new Set([].concat(_toConsumableArray(RSA_PUBLIC), ['d', 'p', 'q', 'dp', 'dq', 'qi']));\nObject.freeze(RSA_PRIVATE); // RSA Key Type\n\nvar RSAKey = /*#__PURE__*/function (_Key) {\n  \"use strict\";\n\n  _inherits(RSAKey, _Key);\n\n  function RSAKey() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RSAKey);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RSAKey)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this[JWK_MEMBERS]();\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      kty: {\n        value: 'RSA',\n        enumerable: true\n      },\n      length: {\n        get: function get() {\n          Object.defineProperty(this, 'length', {\n            value: Buffer.byteLength(this.n, 'base64') * 8,\n            configurable: false\n          });\n          return this.length;\n        },\n        configurable: true\n      }\n    });\n    return _this;\n  }\n\n  _createClass(RSAKey, [{\n    key: THUMBPRINT_MATERIAL,\n    // https://tc39.github.io/ecma262/#sec-ordinaryownpropertykeys no need for any special\n    // JSON.stringify handling in V8\n    value: function value() {\n      return {\n        e: this.e,\n        kty: 'RSA',\n        n: this.n\n      };\n    }\n  }, {\n    key: KEY_MANAGEMENT_ENCRYPT,\n    value: function value() {\n      return this.algorithms('wrapKey');\n    }\n  }, {\n    key: KEY_MANAGEMENT_DECRYPT,\n    value: function value() {\n      return this.algorithms('unwrapKey');\n    }\n  }], [{\n    key: \"generate\",\n    value: function () {\n      var _generate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var len,\n            privat,\n            privateKey,\n            publicKey,\n            _yield$generateKeyPai,\n            _yield$generateKeyPai2,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                len = _args.length > 0 && _args[0] !== undefined ? _args[0] : 2048;\n                privat = _args.length > 1 && _args[1] !== undefined ? _args[1] : true;\n\n                if (!(!Number.isSafeInteger(len) || len < 512 || len % 8 !== 0 || 'electron' in process.versions && len % 128 !== 0)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new TypeError('invalid bit length');\n\n              case 4:\n                if (!keyObjectSupported) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 7;\n                return generateKeyPair('rsa', {\n                  modulusLength: len\n                });\n\n              case 7:\n                _yield$generateKeyPai = _context.sent;\n                privateKey = _yield$generateKeyPai.privateKey;\n                publicKey = _yield$generateKeyPai.publicKey;\n                return _context.abrupt(\"return\", privat ? privateKey : publicKey);\n\n              case 11:\n                _context.next = 13;\n                return generateKeyPair('rsa', {\n                  modulusLength: len,\n                  publicKeyEncoding: {\n                    type: 'spki',\n                    format: 'pem'\n                  },\n                  privateKeyEncoding: {\n                    type: 'pkcs8',\n                    format: 'pem'\n                  }\n                });\n\n              case 13:\n                _yield$generateKeyPai2 = _context.sent;\n                privateKey = _yield$generateKeyPai2.privateKey;\n                publicKey = _yield$generateKeyPai2.publicKey;\n\n                if (!privat) {\n                  _context.next = 20;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", createPrivateKey(privateKey));\n\n              case 20:\n                return _context.abrupt(\"return\", createPublicKey(publicKey));\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function generate() {\n        return _generate.apply(this, arguments);\n      }\n\n      return generate;\n    }()\n  }, {\n    key: \"generateSync\",\n    value: function generateSync() {\n      var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2048;\n      var privat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (!Number.isSafeInteger(len) || len < 512 || len % 8 !== 0 || 'electron' in process.versions && len % 128 !== 0) {\n        throw new TypeError('invalid bit length');\n      }\n\n      var privateKey, publicKey;\n\n      if (keyObjectSupported) {\n        var _generateKeyPairSync = generateKeyPairSync('rsa', {\n          modulusLength: len\n        });\n\n        privateKey = _generateKeyPairSync.privateKey;\n        publicKey = _generateKeyPairSync.publicKey;\n        return privat ? privateKey : publicKey;\n      }\n\n      var _generateKeyPairSync2 = generateKeyPairSync('rsa', {\n        modulusLength: len,\n        publicKeyEncoding: {\n          type: 'spki',\n          format: 'pem'\n        },\n        privateKeyEncoding: {\n          type: 'pkcs8',\n          format: 'pem'\n        }\n      });\n\n      privateKey = _generateKeyPairSync2.privateKey;\n      publicKey = _generateKeyPairSync2.publicKey;\n\n      if (privat) {\n        return createPrivateKey(privateKey);\n      } else {\n        return createPublicKey(publicKey);\n      }\n    }\n  }, {\n    key: PUBLIC_MEMBERS,\n    get: function get() {\n      return RSA_PUBLIC;\n    }\n  }, {\n    key: PRIVATE_MEMBERS,\n    get: function get() {\n      return RSA_PRIVATE;\n    }\n  }]);\n\n  return RSAKey;\n}(Key);\n\nmodule.exports = RSAKey;","map":null,"metadata":{},"sourceType":"script"}