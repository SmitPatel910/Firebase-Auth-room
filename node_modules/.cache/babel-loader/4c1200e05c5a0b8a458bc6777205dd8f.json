{"ast":null,"code":"var debug = require('debug');\n\nvar memoizer = require('lru-memoizer');\n\nfunction cacheWrapper(client, _ref) {\n  var _ref$cacheMaxEntries = _ref.cacheMaxEntries,\n      cacheMaxEntries = _ref$cacheMaxEntries === void 0 ? 5 : _ref$cacheMaxEntries,\n      _ref$cacheMaxAge = _ref.cacheMaxAge,\n      cacheMaxAge = _ref$cacheMaxAge === void 0 ? 600000 : _ref$cacheMaxAge;\n  var logger = debug('jwks');\n  logger(\"Configured caching of signing keys. Max: \".concat(cacheMaxEntries, \" / Age: \").concat(cacheMaxAge));\n  return memoizer.sync({\n    hash: function hash(kid) {\n      return kid;\n    },\n    load: client.getSigningKey.bind(client),\n    maxAge: cacheMaxAge,\n    max: cacheMaxEntries\n  });\n}\n\nmodule.exports.default = cacheWrapper;","map":null,"metadata":{},"sourceType":"script"}