{"ast":null,"code":"var _require = require('../errors'),\n    JWTClaimInvalid = _require.JWTClaimInvalid;\n\nvar isNotString = function isNotString(val) {\n  return typeof val !== 'string' || val.length === 0;\n};\n\nvar isNotArrayOfStrings = function isNotArrayOfStrings(val) {\n  return !Array.isArray(val) || val.length === 0 || val.some(isNotString);\n};\n\nvar isRequired = function isRequired(Err, value, label, claim) {\n  if (value === undefined) {\n    throw new Err(\"\".concat(label, \" is missing\"), claim, 'missing');\n  }\n};\n\nvar isString = function isString(Err, value, label, claim) {\n  var required = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  if (required) {\n    isRequired(Err, value, label, claim);\n  }\n\n  if (value !== undefined && isNotString(value)) {\n    throw new Err(\"\".concat(label, \" must be a string\"), claim, 'invalid');\n  }\n};\n\nvar isTimestamp = function isTimestamp(value, label) {\n  var required = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (required && value === undefined) {\n    throw new JWTClaimInvalid(\"\\\"\".concat(label, \"\\\" claim is missing\"), label, 'missing');\n  }\n\n  if (value !== undefined && typeof value !== 'number') {\n    throw new JWTClaimInvalid(\"\\\"\".concat(label, \"\\\" claim must be a JSON numeric value\"), label, 'invalid');\n  }\n};\n\nvar isStringOrArrayOfStrings = function isStringOrArrayOfStrings(value, label) {\n  var required = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (required && value === undefined) {\n    throw new JWTClaimInvalid(\"\\\"\".concat(label, \"\\\" claim is missing\"), label, 'missing');\n  }\n\n  if (value !== undefined && isNotString(value) && isNotArrayOfStrings(value)) {\n    throw new JWTClaimInvalid(\"\\\"\".concat(label, \"\\\" claim must be a string or array of strings\"), label, 'invalid');\n  }\n};\n\nmodule.exports = {\n  isNotArrayOfStrings: isNotArrayOfStrings,\n  isRequired: isRequired,\n  isNotString: isNotString,\n  isString: isString,\n  isTimestamp: isTimestamp,\n  isStringOrArrayOfStrings: isStringOrArrayOfStrings\n};","map":null,"metadata":{},"sourceType":"script"}